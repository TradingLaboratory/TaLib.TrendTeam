<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TALib.NETCore</name>
    </assembly>
    <members>
        <member name="T:TALib.Abstract">
            <summary>
            Provides Abstraction layer for accessing all functions.
            Abstract API simplifies the usage of individual functions by offering a unified interface for setting and controlling input data,
            configuring function parameters, and retrieving results.
            </summary>
        </member>
        <member name="P:TALib.Abstract.All">
            <summary>
            Provides a single point of access to the entire collection of functions supported by the library.
            This singleton instance ensures that all functions are readily available
            and can be accessed in a consistent manner throughout the application.
            </summary>
            <remarks>
            Additionally, the full power of LINQ can be leveraged to query the functions database,
            enabling advanced filtering, sorting, and projection capabilities.
            </remarks>
        </member>
        <member name="M:TALib.Abstract.Function(System.String)">
            <summary>
            Finds and returns a function by its name, if it exists in the functions' database.
            </summary>
            <param name="name">The name of the function to find.</param>
            <returns>
            The <see cref="T:TALib.Abstract.IndicatorFunction"/> corresponding to the specified name, or <c>null</c> if the function is not found.
            </returns>
        </member>
        <member name="P:TALib.Abstract.Item(System.String)">
            <summary>
            Alias for the <see cref="M:TALib.Abstract.Function(System.String)"/> method.
            </summary>
        </member>
        <member name="M:TALib.Abstract.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:TALib.Abstract.IndicatorFunction">
            <summary>
            Represents a function that can be used to calculate technical indicators.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Name">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Description">
            <summary>
            Gets the description of the function.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Group">
            <summary>
            Gets the group to which the function belongs.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Inputs">
            <summary>
            Gets the input parameters of the function.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Options">
            <summary>
            Gets the options of the function.
            </summary>
        </member>
        <member name="P:TALib.Abstract.IndicatorFunction.Outputs">
            <summary>
            Gets the output parameters of the function.
            </summary>
        </member>
        <member name="M:TALib.Abstract.IndicatorFunction.Run``1(``0[][],``0[],``0[][],System.Range,System.Range@)">
            <summary>
            Runs the function with the specified inputs, options, and outputs.
            </summary>
            <param name="inputs">The input data arrays to use for the calculation.</param>
            <param name="options">The options to use for the calculation.</param>
            <param name="outputs">The output data arrays to store the calculation results.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input arrays.</param>
            <param name="outRange">The range of indices representing the valid data within the output arrays.</param>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <exception cref="T:System.MissingMethodException">Thrown when the function method is not found.</exception>
        </member>
        <member name="M:TALib.Abstract.IndicatorFunction.Lookback(System.Int32[])">
            <summary>
            Calculates the lookback of the function with the specified options.
            </summary>
            <param name="options">The options to use for the lookback calculation.</param>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <exception cref="T:System.MissingMethodException">Thrown when the lookback method is not found.</exception>
        </member>
        <member name="M:TALib.Abstract.IndicatorFunction.SetUnstablePeriod(System.Int32)">
            <summary>
            Sets the unstable period of the function.
            </summary>
            <param name="period">The unstable period to set.</param>
            <exception cref="T:System.NotSupportedException">Thrown when the function does not support unstable period settings.</exception>
        </member>
        <member name="M:TALib.Abstract.IndicatorFunction.ToString">
            <inheritdoc />
        </member>
        <member name="T:TALib.AbstractExtensions">
            <summary>
            Provides extension methods for <see cref="T:TALib.Abstract"/>.
            </summary>
        </member>
        <member name="M:TALib.AbstractExtensions.ToFormattedGroupList(TALib.Abstract)">
            <summary>
            Returns a formatted string representation of groups and their functions.
            </summary>
        </member>
        <member name="T:TALib.IndicatorFunctionExtensions">
            <summary>
            Provides extension methods for <see cref="T:TALib.Abstract.IndicatorFunction"/>.
            </summary>
        </member>
        <member name="M:TALib.IndicatorFunctionExtensions.GetInfo(TALib.Abstract.IndicatorFunction)">
            <summary>
            Returns a formatted string representation of the function's definition.
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="T:TALib.Candles">
            <summary>
            Provides a Candles layer for accessing candlestick patterns functions.
            </summary>
        </member>
        <member name="M:TALib.Candles.AbandonedBaby``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Abandoned Baby (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             The penetration factor used to determine how deeply the third candle must close within the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   Higher values require the third candle to penetrate deeper into the first candle's body,
                   making the pattern stricter and less sensitive.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values allow for more shallow penetration, making the pattern more flexible but potentially increasing false positives.
                 </description>
               </item>
             </list>
             <para>
               Typical range: <c>0.1..0.5</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Abandoned Baby function identifies a rare three-candle reversal pattern typically identified at the end of significant
             uptrends or downtrends. The pattern is characterized by a distinctive gap between the Doji candle and the preceding and
             following candles, indicating a sharp shift in market sentiment.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the first candle as <em>long</em> by comparing its real body against the average of
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is a Doji, adhering to the average threshold specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see>. This Doji must gap away from the first candle,
                   forming a clear space (upside or downside gap) that emphasizes the "abandoned" nature.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the third candle is longer than "short", surpassing <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                  It must also gap away from the Doji in the opposite direction, effectively isolating the central Doji candle.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the third candle's closing price falls well within the real body of the first candle. The allowable depth
                   of penetration is determined by the <paramref>optInPenetration</paramref> parameter.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Abandoned Baby pattern, suggesting a potential upward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Abandoned Baby pattern, suggesting a potential downward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.AbandonedBabyLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.AbandonedBaby``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">AbandonedBaby</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.AbandonedBaby``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.AdvanceBlock``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Advance Block (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Advance Block function identifies a three-candle bearish reversal pattern often observed at the end of an uptrend.
             It is characterized by three consecutive white candles with progressively smaller real bodies and indications of market exhaustion,
             such as relatively long upper shadows, suggesting weakening bullish momentum.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify three consecutive white candlesticks. Each candle must close higher than the previous close.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that:
                   <list type="bullet">
                     <item>
                       <description>
                         The second candle's opening price is within or <em>near</em> the real body of the first candle
                         (<see cref="F:TALib.Core.CandleSettingType.Near">Near</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>
                         defines what "near" means).
                       </description>
                     </item>
                     <item>
                       <description>
                         The third candle's opening price is likewise within or near the real body of the second candle.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Validate that the first candle has a <em>long</em> real body (body length exceeds the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see>), and that its upper shadow is <em>short</em>
                   (shadow length is less than the average length specified by <see cref="F:TALib.Core.CandleSettingType.ShadowShort">ShadowShort</see>).
                 </description>
               </item>
               <item>
                 <description>
                   Evaluate the second and third candles, or only the third candle, for signs of waning momentum:
                   <list type="bullet">
                     <item>
                       <description>
                         Their white real bodies may be progressively smaller than those of preceding candles, referencing
                         <see cref="F:TALib.Core.CandleSettingType.Far">Far</see> or <see cref="F:TALib.Core.CandleSettingType.Near">Near</see> to gauge
                         the difference.
                       </description>
                     </item>
                     <item>
                       <description>
                         Their upper shadows may be relatively long, signifying resistance to further upward movement
                         (evaluated using <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see> or
                         <see cref="F:TALib.Core.CandleSettingType.ShadowShort">ShadowShort</see>).
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates the presence of an Advance Block pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.AdvanceBlockLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.AdvanceBlock``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">AdvanceBlock</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.AdvanceBlock``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.BeltHold``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Belt-hold (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Belt-hold function identifies a single-candle reversal pattern marked by a long real body and an absent (or very short) shadow.
             It often signals a potential shift in market direction, appearing at the start of a new trend or as a continuation signal
             in an existing trend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the candle's real body is <em>long</em>. Its body length must exceed the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check the candle's shadow:
                   <list type="bullet">
                     <item>
                       <description>
                         For a white (bullish) pattern, the lower shadow must be <em>very short</em> or absent, meaning its shadow length is
                         below the average length specified by <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                       </description>
                     </item>
                     <item>
                       <description>
                         For a black (bearish) pattern, the upper shadow must be similarly short or absent.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Belt-hold pattern, signaling potential upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Belt-hold pattern, signaling potential downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.BeltHoldLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.BeltHold``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">BeltHold</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.BeltHold``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Breakaway``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Breakaway (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Breakaway function identifies a five-candle reversal pattern characterized by a notable gap in price action and a subsequent trend
             reversal on the fifth candle. It can signal a potential shift in market momentum, either bullish or bearish, depending on the
             configuration of the candles.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is <em>long</em>, meaning its real body exceeds the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   The second candle forms a gap:
                   <list type="bullet">
                     <item>
                       <description>
                         In a bearish pattern, the second candle gaps downward relative to the first.
                       </description>
                     </item>
                     <item>
                       <description>
                         In a bullish pattern, the second candle gaps upward relative to the first.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   The third and fourth candles continue the direction implied by the gap:
                   <list type="bullet">
                     <item>
                       <description>
                         In a bearish pattern, each candle's high and low are lower than those of the preceding candle.
                       </description>
                     </item>
                     <item>
                       <description>
                         In a bullish pattern, each candle's high and low are higher than those of the preceding candle.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   The fifth candle reverses the trend by closing within the gap created between the first and second candles.
                   The color of the fifth candle is opposite to the first candle.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Breakaway pattern, signaling potential upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Breakaway pattern, signaling potential downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.BreakawayLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Breakaway``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Breakaway</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Breakaway``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ClosingMarubozu``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Closing Marubozu (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Closing Marubozu function identifies a single-candle pattern characterized by a long real body and minimal (or no) shadow on
             the closing side, indicating strong momentum in the direction of the closing price. It is often used to confirm trend strength
             or continuation.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the candle's real body is <em>long</em>. Its body length must exceed the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check the shadow on the side opposite the candle's close:
                   <list type="bullet">
                     <item>
                       <description>
                         For a white (bullish) pattern, the upper shadow must be very short or absent. Its length is compared against
                         <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                       </description>
                     </item>
                     <item>
                       <description>
                         For a black (bearish) pattern, the lower shadow must be very short or absent.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Closing Marubozu pattern, signaling strong upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Closing Marubozu pattern, signaling strong downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ClosingMarubozuLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ClosingMarubozu``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ClosingMarubozu</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ClosingMarubozu``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ConcealingBabySwallow``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Concealing Baby Swallow (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Concealing Baby Swallow function identifies a four-candle bullish reversal pattern generally observed during
             a downtrend. The pattern is characterized by two strong bearish candles followed by a sequence of two additional candles showing
             signs of reversal. This pattern indicates a potential shift in market sentiment.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   The first and second candles must be black Marubozu, meaning they have almost no upper or lower shadows, as specified by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   The third candle opens with a gap down from the second candle and has an upper shadow that penetrates the real body
                   of the second candle.
                 </description>
               </item>
               <item>
                 <description>
                   The fourth candle fully engulfs the third candle, including its shadows.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Concealing Baby Swallow pattern, signaling potential upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ConcealingBabySwallowLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ConcealingBabySwallow``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ConcealingBabySwallow</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ConcealingBabySwallow``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Counterattack``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Counterattack (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Counterattack function identifies a two-candle reversal pattern in which both candles have "long" real bodies,
             but of opposite colors, and the second candle’s close is effectively the same as the first candle's close. This pattern often
             signals an imminent shift in market sentiment when it appears during a trend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the first candle is <em>long</em>. Its body length must exceed the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is also <em>long</em>, but of the opposite color.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle's close is considered <em>equal</em> to the first candle's close, meaning it lies within
                   the range defined by <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Counterattack pattern, signaling a potential reversal to an uptrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Counterattack pattern, signaling a potential reversal to a downtrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.CounterattackLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Counterattack``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Counterattack</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Counterattack``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.DarkCloudCover``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Dark Cloud Cover (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             The penetration factor used to determine how far the second candle must close within the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   Higher values require the second candle to penetrate deeper into the first candle's body, making the pattern stricter.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values allow for more shallow penetration, making the pattern more flexible but potentially increasing false signals.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.3..0.7</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Dark Cloud Cover function identifies a two-candle bearish reversal pattern typically identified within an ongoing uptrend.
             It features a long white candle followed by a black candle that opens above the white candle's high, then closes well within
             its real body. Such price action suggests waning bullish momentum and a possible shift in market sentiment toward the downside.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is long and white, exceeding the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second candle is black and opens above the high of the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle's close lies within the real body of the first candle,
                   penetrating it by at least <paramref name="optInPenetration"/>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates Dark Cloud Cover pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.DarkCloudCoverLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.DarkCloudCover``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">DarkCloudCover</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.DarkCloudCover``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Doji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Doji (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Doji function identifies a single-candle pattern distinguished by a very small or nonexistent real body, implying that the open
             and close prices are nearly the same. This often signifies market indecision or equilibrium between buying and selling pressure,
             without a clear bullish or bearish tilt.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the candle's real body as the absolute difference between its open and close prices.
                 </description>
               </item>
               <item>
                 <description>
                   Compare this real-body length to the average Doji body length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                   If it is less than or equal to that average, the candle is classified as a Doji.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Doji pattern.
                   Because a Doji suggests indecision, it does not convey a bullish or bearish bias.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.DojiLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Doji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Doji</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Doji``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.DojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Doji Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Doji Star function identifies a two-candle pattern that pairs a "long" real body with a subsequent Doji that gaps above or below
             the first candle's body. This formation can act as a potential reversal signal when it appears in a trending market,
             with the gap direction determined by the color of the first candle.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the first candle has a <em>long</em> real body, exceeding the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is a Doji: its real body must be very small, consistent with
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check for a gap between the first candle's real body and the Doji:
                   <list type="bullet">
                     <item>
                       <description>
                         If the first candle is white (bullish), the pattern should gap up.
                       </description>
                     </item>
                     <item>
                       <description>
                         If the first candle is black (bearish), the pattern should gap down.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates that a bearish Doji Star pattern is identified following a bullish candle.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates that a bullish Doji Star pattern is identified following a bearish candle.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.DojiStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.DojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">DojiStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.DojiStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.DragonflyDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Dragonfly Doji (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Dragonfly Doji function identifies a single-candle formation featuring a Doji (open and close prices are nearly
             identical) with a notably long lower shadow and little to no upper shadow. This configuration can suggest a possible shift in
             market sentiment, depending on the prevailing trend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the candle qualifies as a Doji by comparing its real-body length to the average Doji body length, defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the upper shadow is <em>very short</em> by referencing
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the lower shadow is significantly longer than the upper shadow.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Dragonfly Doji pattern.
                   As with other Doji formations, it does not inherently signal bullish or bearish bias but should be interpreted
                   within the broader market context.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.DragonflyDojiLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.DragonflyDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">DragonflyDoji</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.DragonflyDoji``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Engulfing``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Engulfing Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Engulfing function identifies a two-candle reversal pattern where the second candle's real body fully "engulfs" the real body
             of the preceding candle. This pattern often signals a potential reversal when observed in an existing trend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the color of the first candle: white (bullish) or black (bearish).
                 </description>
               </item>
               <item>
                 <description>
                   Check if the second candle's real body completely overlaps the first candle's real body:
                   <list type="bullet">
                     <item>
                       <description>
                         For a bullish pattern, the second candle is white, its open is below (or at) the previous candle's close,
                         and its close is above (or at) the previous candle's open.
                       </description>
                     </item>
                     <item>
                       <description>
                         For a bearish pattern, the second candle is black, its open is above (or at) the previous candle's close,
                         and its close is below (or at) the previous candle's open.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Engulfing pattern, suggesting a potential upward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Engulfing pattern, suggesting a potential downward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.EngulfingLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Engulfing``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Engulfing</see>.
            </summary>
            <returns>Always 2 since there are only two prices bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Candles.Engulfing``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.EveningDojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Evening Doji Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             The penetration factor used to determine how deeply the third candle must close within the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   Higher values require the third candle to penetrate deeper into the first candle's body,
                   making the pattern stricter and less likely to trigger false positives.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values allow for more shallow penetration, making the pattern more flexible but potentially increasing false signals.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.2..0.5</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Evening Doji Star function identifies a three-candle bearish reversal pattern that often emerges near the top of an uptrend.
             It features a long white candle, followed by a Doji that gaps up, and concludes with a long black candle that closes significantly
             within the first candle's real body. This price action suggests diminishing bullish momentum and a possible downturn.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   The first candle must be long and white, exceeding the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   The second candle must be a Doji, with a real body less than or equal to the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see>, and it must gap up relative to the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   The third candle must be longer than a <em>short</em> candle (per
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>), black in color, and must close far enough into the first
                   candle's real body to meet or exceed the <paramref name="optInPenetration"/> requirement.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates the detection of an Evening Doji Star pattern, signaling bearish sentiment.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.EveningDojiStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.EveningDojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">EveningDojiStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.EveningDojiStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.EveningStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Evening Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             Specifies the penetration factor for the third candle's closing position within the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   Higher values require the third candle to close deeper into the first candle's real body,
                   enforcing stricter validation for the pattern.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values allow for a more shallow penetration, making the pattern more flexible but potentially increasing false positives.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.2..0.5</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Evening Star function identifies a three-candle bearish reversal pattern that typically appears at the top of an uptrend.
             It is composed of a strong white (bullish) candle, followed by a short candle that gaps upward, and concludes with a long
             black (bearish) candle closing well into the white candle's body. This arrangement signals waning bullish momentum and
             potential downward movement.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   The first candle must be long and white, exceeding the <em>long</em> the average length specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   The second candle must be <em>short</em> (per <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>), and it must
                   gap up relative to the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   The third candle must be a black real body, longer than the <em>short</em> threshold, and must close sufficiently deep
                   into the first candle's body to meet the <paramref name="optInPenetration"/> requirement.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 signifies the detection of an Evening Star pattern, indicating bearish sentiment.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.EveningStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.EveningStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">EveningStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.EveningStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.GapSideBySideWhiteLines``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Up/Down-gap side-by-side white lines (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Gap Side-by-Side White Lines function used to identify candlestick patterns that is typically observed after a significant
             price gap, often signaling a continuation of the current trend. Two consecutive white candles follow the initial gap,
             aligning in such a way that their real bodies and openings appear nearly identical. This formation can appear in both
             bullish (up gap) and bearish (down gap) contexts but usually highlights strong market momentum.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Detect a price gap between the first candle and the next two candles. The gap may be upward (indicating bullish continuation)
                   or downward (indicating bearish continuation).
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second and third candles both have white real bodies, reflecting consistent upward movement within
                   this gap scenario.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second and third candles have real bodies of similar size, defined as <em>near</em> by
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the opening prices of the second and third candles are nearly <em>equal</em>, as specified by
                   <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the gap established by the first candle remains unfilled by the second, indicating that the trend is still intact.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Upside Gap Side-By-Side White Lines pattern, signaling bullish momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates Downside Gap Side-By-Side White Lines pattern, signaling bearish momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.GapSideBySideWhiteLinesLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.GapSideBySideWhiteLines``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">GapSideBySideWhiteLines</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.GapSideBySideWhiteLines``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.GravestoneDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Gravestone Doji (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Gravestone Doji function identifies a single-candle pattern marked by a nearly nonexistent real body positioned at or near the
             day's low, coupled with a long upper shadow and minimal or no lower shadow. It often suggests a potential shift in market sentiment,
             particularly when observed in an uptrend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the candle qualifies as a Doji by comparing its real-body length to the average Doji body length, defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the lower shadow is <em>very short</em>, implying the open and close prices lie near the low of the session,
                   leaving little to no lower shadow.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure there is a significant upper shadow, meaning it surpasses the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Gravestone Doji pattern. While it does not inherently indicate
                   bullish or bearish sentiment, it can signal potential weakness when appearing in an uptrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.GravestoneDojiLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.GravestoneDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">GravestoneDoji</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.GravestoneDoji``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Hammer``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Hammer (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Hammer function identifies a single-candle bullish reversal pattern that often appears after a downtrend. It is characterized by
             a small real body positioned near the top of the candle's range, a notably long lower shadow, and a minimal or absent upper shadow,
             suggesting that buyers overcame intraday selling pressure and pushed the price back up by the close.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine if the current candle's real body is smaller than the average size for short-bodied candles,
                   according to <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the lower shadow extends beyond the average length for long shadows,
                   as defined by <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the upper shadow length is less than the average for very short shadows,
                   as specified by <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check whether the candle's real body is near the prior candle's low, based on
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A positive output value (100) indicates the detection of a Hammer pattern, which may suggest a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates no recognizable Hammer pattern within the specified range.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HammerLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Hammer``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Hammer</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Hammer``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.HangingMan``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Hanging Man (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Hanging Man function identifies a single-candle bearish reversal pattern that commonly appears in an established uptrend.
             It is distinguished by a small real body near the upper end of the trading range, a long lower shadow, and minimal or nonexistent
             upper shadow. This configuration suggests that selling pressure emerged during the session, possibly foreshadowing
             a downward price shift.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine whether the current candle's real body is smaller than the average size for short-bodied candles,
                   as specified by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the lower shadow length exceeds the average for long shadows, as defined by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the upper shadow length is shorter than the average for very short shadows,
                   per <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the candle's real body is near the previous candle's high, based on
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates the detection of a Hanging Man pattern, suggesting a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HangingManLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.HangingMan``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HangingMan</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.HangingMan``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Harami``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Harami Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Harami function detects the "Harami" candlestick pattern, a prominent reversal indicator characterized by a candle with
             a long real body, followed by a candle with a shorter real body. The smaller candle is fully engulfed within the real body of
             the preceding longer candle, suggesting a reduction in momentum and the possibility of a trend reversal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the first candle with a <em>long</em> real body. Its body length must exceed the average length
                   specified by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the second candle has a <em>short</em> real body. Its body length must be less than or equal to
                   the average length specified by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle's real body is completely encompassed by the first candle's real body.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Harami pattern, suggesting a potential upward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Harami pattern, suggesting a potential downward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HaramiLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Harami``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Harami</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Harami``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.HaramiCross``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Harami Cross Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             HaramiCross identifies the "Harami Cross" candlestick pattern, which is a variant of the Harami pattern where the second candle
             is a doji. This formation denotes potential reversals in market direction, with the doji reflecting increased indecision and
             a likely shift in sentiment.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the first candle with a <em>long</em> real body. Its body length must exceed the average length
                   specified by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is a doji. Its real body length must be less than or equal to the
                   average length defined by <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second candle's real body is fully contained within the first candle's real body.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Harami Cross pattern, suggesting a potential upward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Harami Cross pattern, suggesting a potential downward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HaramiCrossLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.HaramiCross``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HaramiCross</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.HaramiCross``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.HighWave``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             High-Wave Candle (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             HighWave function identifies the "High-Wave" candlestick pattern, a candle exhibiting a short real body along with very long
             upper and lower shadows. This configuration reflects significant market indecision, as both buyers and sellers fail to establish
             a decisive advantage. Consequently, High-Wave candles frequently appear near potential turning points or areas of consolidation
             in price movements.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the candle with a <em>short</em> real body. Its body length must be less than the average length
                   specified by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the upper shadow is <em>very long</em>, with a length exceeding the average value defined by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryLong">ShadowVeryLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the lower shadow is also <em>very long</em>, surpassing the average measurement specified by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryLong">ShadowVeryLong</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish High-Wave pattern, signaling potential upward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish High-Wave pattern, signaling potential downward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HighWaveLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.HighWave``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HighWave</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.HighWave``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Hikkake``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Hikkake Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Hikkake function identifies the "Hikkake" candlestick pattern, a multi-bar formation noted for potential trend
             reversals or continuation signals. The pattern commences with an inside bar configuration, followed by a third candle
             that appears to break in one direction before ultimately reversing course.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Examine the first two candles to confirm an inside bar, where the second candle's high is lower than the first candle's
                   high, and its low is higher than the first candle's low.
                 </description>
               </item>
               <item>
                 <description>
                   Detect a breakout with the third candle, which must exhibit either a lower high and lower low (suggesting a bullish setup)
                   or a higher high and higher low (suggesting a bearish setup) in comparison to the second candle.
                 </description>
               </item>
               <item>
                 <description>
                   (Optional) Within three periods of the detected pattern, look for a confirmation bar that closes above the second
                   candle's high (bullish) or below its low (bearish), thereby confirming the Hikkake pattern.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a bullish Hikkake pattern, indicating potential upward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a bearish Hikkake pattern, indicating potential downward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   An additional confirmation bar adds or subtracts 100 to the respective pattern value when observed within
                   three periods of the pattern's detection.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HikkakeLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Hikkake``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Hikkake</see>.
            </summary>
            <returns>Always 5 since there are only five prices bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Candles.Hikkake``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.HikkakeModified``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Modified Hikkake Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Hikkake Modified function identifies a variation of the traditional Hikkake candlestick pattern, wherein a multi-bar sequence
             underscores a more rigorous confirmation stage. This version commences with an inside bar and continues through a specified
             configuration of subsequent candles, culminating in a validated breakout or reversal signal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the second candle as an inside bar, such that its high is lower and its low is higher than the corresponding
                   values of the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the third candle's range is smaller than that of the second candle. The third candle should also close
                   near its top (in anticipation of a bullish move) or near its bottom (in anticipation of a bearish move).
                 </description>
               </item>
               <item>
                 <description>
                   Detect a breakout in the fourth candle, which must present a lower high and lower low (bullish) or a higher high
                   and higher low (bearish) when compared to the third candle.
                 </description>
               </item>
               <item>
                 <description>
                   Optionally, observe the next three bars for a confirming candle. A close exceeding the third candle's high (bullish)
                   or falling below its low (bearish) substantiates the Modified Hikkake pattern.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a bullish Modified Hikkake pattern, indicating potential upward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a bearish Modified Hikkake pattern, indicating potential downward market momentum.
                 </description>
               </item>
               <item>
                 <description>
                   An additional confirmation bar adds or subtracts 100 to the respective pattern value when observed within
                   three periods of the pattern's detection.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HikkakeModifiedLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.HikkakeModified``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HikkakeModified</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.HikkakeModified``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.HomingPigeon``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Homing Pigeon (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Homing Pigeon function identifies a two-candle formation typically appearing in a downward trend. This pattern features
             two consecutive black candles: the first is long, and the second is short and fully contained within the real body of the first,
             hinting at a potential reversal or pause in bearish momentum.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the first candle as <em>long</em> and black. Its real body length must exceed the average length
                   specified by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is also black, with a <em>short</em> real body. Its body length must be
                   less than or equal to the average length defined by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the second candle's open price is below the first candle's open, and its close price is above
                   the first candle's close, placing the second candle entirely within the body of the first.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Homing Pigeon pattern, indicating a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.HomingPigeonLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.HomingPigeon``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HomingPigeon</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.HomingPigeon``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.IdenticalThreeCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Identical Three Crows (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Identical Three Crows function identifies a strong bearish reversal signal comprised of three consecutively declining black candles.
             Each candle displays a very short lower shadow, and the open of each subsequent candle is very close to the prior candle's close,
             thereby illustrating persistent selling pressure.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black, with a <em>very short</em> lower shadow. Its lower shadow length must be
                   less than the average length defined by <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is also black, with a <em>very short</em> lower shadow as specified by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>. Additionally, its open must be
                   <em>very close</em> to the close of the first candle, determined by <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the third candle is black, once again exhibiting a <em>very short</em> lower shadow, and that its open
                   is <em>very close</em> to the close of the second candle, based on <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the three black candles form a declining sequence, with each close lower than the previous
                   candle's close, underscoring uninterrupted downward momentum.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates Identical Three Crows pattern, suggesting bearish market sentiment and a potential downtrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.IdenticalThreeCrowsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.IdenticalThreeCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">IdenticalThreeCrows</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.IdenticalThreeCrows``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.InNeck``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             In-Neck Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             In-Neck Pattern function identifies a bearish continuation formation typically observed in a downward trend.
             It comprises a black long candle followed by a white candle that opens below the previous low and closes only slightly within
             the real body of the first candle, indicating a temporary pause in the downtrend rather than a reversal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black with a <em>long</em> real body, where its body length
                   exceeds the average for <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is white, opening below the low of the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the second candle's close intrudes only slightly into the real body of the black candle
                   (based on <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>), but does not exceed its midpoint.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates In-Neck pattern, suggesting bearish market sentiment and a potential continuation of the downtrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.InNeckLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.InNeck``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">InNeck</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.InNeck``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.InvertedHammer``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Inverted Hammer (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Inverted Hammer function identifies a potential bullish reversal often observed near the bottom of a downtrend. The pattern
             consists of a shor real body near the lower portion of the candle, coupled with a long upper shadow and little or no lower shadow,
             indicating emerging buying interest.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the candle has a <em>short</em> real body, with its length below the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the candle's upper shadow is <em>long</em>, exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the candle has a <em>very short</em> lower shadow, measuring less than the average associated with
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check for a downward gap, where the real body of the current candle is positioned below the body of the preceding candle.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of an Inverted Hammer pattern, suggesting a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.InvertedHammerLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.InvertedHammer``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">InvertedHammer</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.InvertedHammer``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Kicking``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Kicking (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Kicking function detects a two-candle pattern that signals a significant shift in market sentiment, indicating either a bullish
             or bearish reversal. This pattern comprises two marubozu candles of opposite colors, separated by a gap.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is a <em>marubozu</em> (long real body) with <em>very short</em> shadows.
                   Its body length must exceed the average for <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>, and its shadow lengths must be less than the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is also a <em>marubozu</em>, similarly exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> and remaining under the threshold for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>, but with the opposite color of
                   the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Check for a gap between the two marubozu candles. An upside gap signifies a potential bearish-to-bullish transition,
                   while a downside gap denotes a potential bullish-to-bearish transition.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Kicking pattern, suggesting a potential upward price movement.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Kicking pattern, suggesting a potential downward price movement.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.KickingLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Kicking``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Kicking</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Kicking``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.KickingByLength``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Kicking - bull/bear determined by the longer marubozu (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Kicking by Length function identifies a two-candle pattern that signals a significant reversal in market sentiment,
             with the bullishness or bearishness of the pattern determined by the longer of the two marubozu candlesticks.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the first candle as a <em>marubozu</em>, with its real body exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see> and its shadows remaining below the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is also a <em>marubozu</em> of the opposite color, satisfying the same criteria
                   for <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> and
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Determine the overall bullish or bearish signal based on which of the two <em>marubozu</em> candles has the
                   longer real body. The pattern assumes the character (bullish or bearish) of that longer candle.
                 </description>
               </item>
               <item>
                 <description>
                   Check for a gap between the two candles, with an upside gap (bearish-to-bullish) or a downside gap
                   (bullish-to-bearish) reinforcing the implied market reversal.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Kicking by Length pattern, suggesting a potential upward price movement.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Kicking by Length pattern, suggesting a potential downward price movement.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.KickingByLengthLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.KickingByLength``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">KickingByLength</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.KickingByLength``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.LadderBottom``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Ladder Bottom (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Ladder Bottom function identifies a bullish reversal pattern that is typically observed at the culmination of a downward trend.
             This pattern spans five candles, with the initial four candles being black and each demonstrating successively lower opens
             and closes, and the fourth candle specifically displaying an upper shadow that is not very short. The fifth candle is white,
             opening above the previous candle's body and closing above its high, thereby suggesting a potential bullish reversal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first three candles are black and exhibit consecutively lower opens and closes.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the fourth candle is black, but possesses an upper shadow exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Identify the fifth candle as white, with an opening price above the fourth candle's body and a closing price above its high.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Ladder Bottom pattern, suggesting a potential upward price movement.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.LadderBottomLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.LadderBottom``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">LadderBottom</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.LadderBottom``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.LongLeggedDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Long Legged Doji (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Long Legged Doji function identifies a candlestick pattern that conveys significant indecision among market participants.
             This candle is characterized by a doji body, where the open and close prices are nearly identical—and at least one elongated shadow,
             reflecting heightened volatility.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm a <em>doji</em> candle by verifying that its real body length is less than or equal to the average
                   for <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that at least one shadow (upper or lower) is <em>long</em>, exceeding the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Long Legged Doji pattern, which signifies market indecision
                   rather than a specific directional bias.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.LongLeggedDojiLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.LongLeggedDoji``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">LongLeggedDoji</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.LongLeggedDoji``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.LongLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Long Line Candle (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Long Line Candle function identifies a candlestick formation marked by a long real body and short upper and lower shadows.
             This configuration often signifies robust market conviction in the candle's direction.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the real body is <em>long</em>, exceeding the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that both the upper and lower shadows are <em>short</em>, measuring less than the average values
                   associated with <see cref="F:TALib.Core.CandleSettingType.ShadowShort">ShadowShort</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Long Line Candle (white candlestick).
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Long Line Candle (black candlestick).
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.LongLineLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.LongLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">LongLine</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.LongLine``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Marubozu``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Marubozu (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Marubozu function identifies a candlestick pattern, characterized by a long real body and very short or nonexistent shadows,
             reflecting strong market momentum in the candlestick's direction.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the real body is <em>long</em>, exceeding the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the upper and lower shadows are <em>very short</em>, each falling below the average
                   specified by <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Marubozu (white candlestick).
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Marubozu (black candlestick).
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.MarubozuLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Marubozu``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Marubozu</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Marubozu``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.MatchingLow``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Matching Low (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Matching Low function identifies a candlestick pattern, characterized by two consecutive black candles that conclude
             at nearly the same closing price. This pattern frequently indicates a potential support level or a possible bullish reversal within
             a declining market phase.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is black, signaling a bearish close.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is also black, with a closing price <em>very close</em> to that of the first candle,
                   as determined by <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Matching Low pattern, which is considered a bullish signal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.MatchingLowLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.MatchingLow``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">MatchingLow</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.MatchingLow``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.MatHold``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Mat Hold (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             Specifies the penetration factor for the reaction days within the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   A higher value allows the reaction days to penetrate deeper into the first candle's real body,
                   relaxing the validation for the pattern.
                 </description>
               </item>
               <item>
                 <description>
                   A lower value restricts the reaction days to stay closer to the first candle's upper body, enforcing stricter validation.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.2..0.6</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Mat Hold function identifies a continuation formation observed during an established uptrend. This pattern is characterized
             by a strong bullish candle, followed by a short period of consolidation with smaller candles remaining largely within the first
             candle's real body, and culminating in another robust bullish candle that reaffirms upward momentum.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is white and <em>long</em>, exceeding the average defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is black (bearish) and establishes an upside gap versus the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Check the third and fourth candles are relatively <em>short</em> (black or white), determined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>. Their real bodies must lie within the real body of
                   the first candle. The depth of penetration into the first
                   candle's real body must remain under the specified <paramref>optInPenetration</paramref> factor.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the fifth candle is white, opens above the fourth candle's close, and surpasses the highest high
                   of the intervening (reaction) candles.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates the presence of a Mat Hold pattern, suggesting a continuation of the bullish trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.MatHoldLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.MatHold``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">MatHold</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.MatHold``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.MorningDojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Morning Doji Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             Specifies the penetration factor for the third candle into the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   A higher value allows the third candle's real body to penetrate deeper into the first candle's real body,
                   relaxing the validation for the pattern.
                 </description>
               </item>
               <item>
                 <description>
                   A lower value restricts the third candle's real body to penetrate only a small portion of the first candle's real body,
                   enforcing stricter validation.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.2..0.6</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Morning Doji Star function identifies a three-candle bullish reversal pattern, generally observed at the end of a downtrend.
             This formation begins with a long black candle, followed by a Doji that gaps downward, and culminates in a white candle whose
             closing price intrudes deeply into the real body of the initial black candle.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is black and <em>long</em>, exceeding the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is a Doji, with a real body not surpassing the average size for
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see>. It must also gap down relative to the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the third candle is a white candle longer than
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>, signifying stronger bullish momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the third candle's close sufficiently penetrates the real body of the first black candle.
                   The degree of penetration is governed by the <paramref name="optInPenetration"/> parameter.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Morning Doji Star pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.MorningDojiStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.MorningDojiStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">MorningDojiStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.MorningDojiStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.MorningStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">
             <summary>
             Morning Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInPenetration">
             Specifies the penetration factor for the third candle into the first candle's real body:
             <list type="bullet">
               <item>
                 <description>
                   A higher value allows the third candle's real body to penetrate deeper into the first candle's real body,
                   creating a more relaxed validation for the pattern.
                 </description>
               </item>
               <item>
                 <description>
                   A lower value restricts the third candle's real body to penetrate only slightly into the first candle's real body,
                   enforcing stricter validation.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.2..0.6</c>. Valid values are between <c>0.0</c> (no penetration) and <c>1.0</c> (full penetration).
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Morning Star function identifies a three-candle bullish reversal formation typically observed near the end of a downtrend.
             It starts with a long black candle, followed by a short candle (star) that gaps downward, and concludes with a strong white candle
             whose close intrudes deeply into the real body of the first black candle.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black and <em>long</em>, exceeding the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is <em>short</em>, as determined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>, and that it gaps down from the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the third candle is white and longer than <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the third candle's close penetrates into the real body of the first black candle by
                   a degree set by <paramref name="optInPenetration"/>. Moreover, the third candle must not be short, as determined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Morning Star pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.MorningStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.MorningStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Double)">MorningStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.MorningStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.OnNeck``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             On-Neck Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             On-Neck Pattern function identifies a two-candle formation that typically indicates the continuation of a prevailing downtrend.
             It is distinguished by a long black candle followed by a white candle whose close aligns closely with the low of the first candle.
            
             <b>Calculation steps</b>:
              <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black and has a <em>long</em> real body, exceeding the average set by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle is white, opening below the low of the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the close of the second candle is <em>equal</em> to the low of the first candle, according
                   to the threshold defined by <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 represents an On-Neck pattern, signaling a potential bearish continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.OnNeckLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.OnNeck``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">OnNeck</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.OnNeck``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.PiercingLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Piercing Line Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Piercing Line function identifies a two-candle bullish reversal formation observed in a downtrend. This configuration features
             a long black candle followed by a long white candle that opens below the black candle’s low but closes above the midpoint
             of its real body.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black with a <em>long</em> real body, exceeding the average defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is white and also <em>long</em>, matching or exceeding
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> criteria.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the second candle opens below the first candle's low.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second candle's close lies above the midpoint of the first candle's real body but below the
                   first candle's open.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Piercing Line pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.PiercingLineLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.PiercingLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">PiercingLine</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.PiercingLine``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.RickshawMan``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Rickshaw Man (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rickshaw Man function identifies a single-candle formation denoting significant indecision in the market. The candle exhibits
             a doji body roughly centered within its high-low range and features extended upper and lower shadows.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm a <em>doji</em> body, ensuring its real body does not exceed the average length defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify both the upper and lower shadows are <em>long</em>, surpassing the averages set by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the doji body is positioned near the midpoint of the candle's overall range, according to
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Rickshaw Man pattern, indicating market indecision.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.RickshawManLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.RickshawMan``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">RickshawMan</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.RickshawMan``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.RisingFallingThreeMethods``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Rising/Falling Three Methods (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rising/Falling Three Methods function identifies a five-candle continuation pattern, signaling the likely persistence of
             the current market trend—either bullish (Rising Three Methods) or bearish (Falling Three Methods).
            
             <b>Calculation steps</b>:
              <list type="number">
               <item>
                 <description>
                   Verify that the first candle is <em>long</em> and aligns with the predominant trend direction.
                   Its real body must surpass the average defined by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second, third, and fourth candles are <em>short</em>, moving contrary to the primary trend.
                   Their real bodies must remain within the range of the first candle, while each body length is below the average
                   specified for <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the fifth candle is once again <em>long</em>, reverting to the same color as the first candle
                   and exceeding the average for <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the fifth candle opens above (in a bullish scenario) or below (in a bearish scenario) the close
                   of the preceding candle and closes beyond the close of the first candle.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Rising Three Methods pattern, signaling bullish continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a Falling Three Methods pattern, signaling bearish continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.RisingFallingThreeMethodsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.RisingFallingThreeMethods``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">RisingFallingThreeMethods</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.RisingFallingThreeMethods``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.SeparatingLines``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Separating Lines (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Separating Lines function identifies a two-candle continuation pattern in which the first candle briefly opposes the existing trend,
             while the second candle returns to align with that prevailing trend. The second candle opens at (or very near) the same price as
             the first candle's open and forms a belt hold candlestick, reinforcing the continuation of the established trend.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle's color counters the primary market trend. It may either be a bullish candle in a downtrend
                   or a bearish candle in an uptrend.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second candle opens at (or within a small margin of) the same price as the first candle's open, according to
                   <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the second candle forms a <em>belt hold</em> pattern:
                   <list type="bullet">
                     <item>
                       <description>
                         In a bullish scenario, the candle must be white and <em>long</em>, with a <em>very short</em>
                         or negligible lower shadow.
                       </description>
                     </item>
                     <item>
                       <description>
                         In a bearish scenario, the candle must be black and <em>long</em>, with a <em>very short</em>
                         or negligible upper shadow.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a bullish Separating Lines pattern, signaling a continuation of an uptrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a bearish Separating Lines pattern, signaling a continuation of a downtrend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.SeparatingLinesLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.SeparatingLines``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">SeparatingLines</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.SeparatingLines``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ShootingStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Shooting Star (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Shooting Star function identifies a single-candle bearish reversal pattern generally witnessed near the top of an uptrend.
             This candle exhibits a small real body at or near the session's low, along with a long upper shadow.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Establish that the candle has a <em>short</em> real body, with a length below the average defined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the upper shadow is <em>long</em>, exceeding the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the lower shadow is <em>very short</em> or negligible, staying below the average
                   for <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the candle opens with an upward gap relative to the real body of the previous candle.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 represents a Shooting Star pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ShootingStarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ShootingStar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ShootingStar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ShootingStar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ShortLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Short Line Candle (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Short Line Candle function identifies a single-candle pattern, commonly reflecting market indecision or a brief pause
             in price movement. Characterized by a candle with a short real body and minimal shadows, the Short Line Candle can appear
             in both bullish or bearish contexts.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the candle's real body is <em>short</em>, measuring below the average threshold determined by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the upper shadow is also <em>short</em>, indicating limited upside price extension.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the lower shadow remains <em>short</em> as well, signaling minimal downward price excursion.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a white Short Line Candle (bullish body).
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a black Short Line Candle (bearish body).
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ShortLineLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ShortLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ShortLine</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ShortLine``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.SpinningTop``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Spinning Top (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Spinning Top function identifies a single-candle formation recognized for its small real body and relatively lengthy upper
             and lower shadows. This pattern generally points to market indecision, where buyers and sellers exert comparable pressure,
             potentially signaling a pause or consolidation in price movement.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the candle's real body is <em>short</em>, remaining below the average threshold specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the upper shadow exceeds the real body, indicating significant price movement above
                   the opening and closing levels.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the lower shadow also exceeds the real body, reflecting equivalent downward price exploration.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a white Spinning Top (bullish body).
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a black Spinning Top (bearish body).
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.SpinningTopLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.SpinningTop``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">SpinningTop</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.SpinningTop``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Stalled``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Stalled Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Stalled Pattern function identifies a three-candle formation typically appearing near the peak of an uptrend. This pattern shows
             progressively weakening bullish momentum, culminating in a smaller candle that stalls at the upper region of the preceding
             candle's body, suggesting a potential bearish shift.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Detect three consecutive white (bullish) candles, each closing higher than the previous candle's close.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the first candle is <em>long</em>, exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is also <em>long</em> and white, with a <em>very short</em> upper shadow.
                   Its opening price lies within or near the real body of the first candle, and it closes above the first candle's close.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the third candle is <em>small</em>, maintaining a white body positioned at the upper portion
                   of the second candle's real body ("riding on the shoulder" of the second candle).
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 represents a bearish Stalled pattern, indicating a potential downward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.StalledLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Stalled``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Stalled</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Stalled``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.StickSandwich``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Stick Sandwich (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Stick Sandwich function identifies a three-candle bullish reversal pattern observed in a downtrend. It consists of two
             black (bearish) candles with matching closing prices separated by a white (bullish) candle that gaps above the first candle's close.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify the first candle is black, reflecting a bearish close.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is white, opening and trading above the first candle's closing price (indicating a gap).
                 </description>
               </item>
               <item>
                 <description>
                   Check that the third candle is black again, with a closing price approximately the same as the first candle's close,
                   as defined by <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Stick Sandwich pattern, indicating a potential upward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.StickSandwichLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.StickSandwich``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">StickSandwich</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.StickSandwich``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.TakuriLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Takuri Line (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Takuri Line function identifies a single-candle bullish reversal pattern, also referred to as a Dragonfly Doji with a very long
             lower shadow. This formation often arises when the market undergoes sharp selling pressure yet rebounds significantly,
             hinting at a potential upward turn.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the candle is a <em>doji</em>, meaning its real body is less than or equal to the average
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> length in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the upper shadow is <em>very short</em>, falling below the average threshold set by
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the lower shadow is <em>very long</em>, exceeding the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryLong">ShadowVeryLong</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Takuri Line pattern, signaling a potential upward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.TakuriLineLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.TakuriLine``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">TakuriLine</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.TakuriLine``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.TasukiGap``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Tasuki Gap (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Tasuki Gap function identifies a three-candle continuation pattern suggesting the market will persist in its current trend
             (bullish or bearish). This pattern features a gap that remains unfilled by the subsequent candle, backed up by two candles
             whose similar real-body sizes confirm the existing directional bias.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that a gap forms between the first candle and the prior candle (either an upside or downside gap).
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle continues in the direction of the gap:
                   <list type="bullet">
                     <item>
                       <description>White (bullish) for an upside gap.</description>
                     </item>
                     <item>
                       <description>Black (bearish) for a downside gap.</description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Check that the third candle is of the opposite color, opens within the second candle's real body, and closes within,
                   but does not fill, the gap.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second and third candles have real bodies of similar size, adhering to
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a bullish Tasuki Gap pattern, signaling a continuation of an upward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a bearish Tasuki Gap pattern, signaling a continuation of a downward trend.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.TasukiGapLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.TasukiGap``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">TasukiGap</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.TasukiGap``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeBlackCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three Black Crows (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three Black Crows function identifies a bearish reversal formation, which commonly appears after a bullish or neutral market phase.
             This pattern is highlighted by three successive black (bearish) candlesticks, each featuring a small or negligible lower shadow
             and opening within the body of the preceding black candle.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Check that the pattern begins with a white (bullish) candle, followed by three consecutive black (bearish) candles.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm each black candle has a <em>very short</em> lower shadow, per the threshold for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second black candle opens within the first black candle's real body and the third black candle
                   opens within the second black candle's real body.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the closing prices of these three black candles consistently decline.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 represents a Three Black Crows pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeBlackCrowsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeBlackCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeBlackCrows</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeBlackCrows``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeInside``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three Inside Up/Down (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three Inside Up/Down function identifies a three-candle reversal often emerging near significant turning points. It combines
             a long candle with a second, smaller candle engulfed within the first, and a third candle that confirms the reversal by
             closing beyond the first candle’s open.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is <em>long</em>, surpassing the average threshold set by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is <em>short</em>, meeting or falling below the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>, and ensure it is completely engulfed
                   by the real body of the first candle.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the third candle is the opposite color of the first candle and closes beyond the first candle's open.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Three Inside Up pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a Three Inside Down pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeInsideLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeInside``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeInside</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeInside``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeLineStrike``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three-Line Strike (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three-Line Strike function identifies a four-candle configuration that may confirm existing bullish or bearish momentum or signal
             an impending shift in sentiment. It begins with three consecutive candles in the same direction, followed by a fourth candle
             whose move counters and largely negates the gains or losses of the prior three candles.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Ensure the first three candles share the same color (all white for a bullish scenario or all black for a bearish scenario).
                   Each candle must successively close beyond the previous candle’s close, confirming trend acceleration.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the fourth candle is the opposite color to the first three. For an uptrend of three white candles,
                   the fourth must be black. For a downtrend of three black candles, the fourth must be white.
                 </description>
               </item>
               <item>
                 <description>
                   Verify that the second and third candles' opens lie "near" the preceding candle’s real body. Here,
                   <em>near</em> is governed by <see cref="F:TALib.Core.CandleSettingType.Near">Near</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the fourth candle opens beyond the third candle's close and closes across the open of the first candle.
                   This "strike" reclaims much of the prior progression.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a bullish Three-Line Strike pattern, signaling a potential upward continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a bearish Three-Line Strike pattern, signaling a potential downward continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeLineStrikeLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeLineStrike``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeLineStrike</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeLineStrike``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeOutside``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three Outside Up/Down (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three Outside Up/Down function identifies a three-candle reversal pattern, which can signal a shift in the market's prevailing
             direction. This reversal pattern is defined by an engulfing second candle and a third candle that confirms the prospective move.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is black (bearish) or white (bullish).
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is of the opposite color and fully engulfs the real body of the first candle:
                   <list type="bullet">
                     <item>
                       <description>
                         In a Three Outside Up, a white candle completely engulfs a black candle.
                       </description>
                     </item>
                     <item>
                       <description>
                         In a Three Outside Down, a black candle completely engulfs a white candle.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the third candle confirms the reversal by closing higher (for Up) or lower (for Down) than the second candle's close.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 represents a Three Outside Up pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 represents a Three Outside Down pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeOutsideLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeOutside``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeOutside</see>.
            </summary>
            <returns>Always 3 since there are only three prices bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeOutside``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeStarsInSouth``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three Stars In The South (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three Stars In The South function identifies a three-candle formation that frequently arises near the culmination of a downtrend.
             This pattern consists of progressively smaller black candles, each dominated by significant lower shadows and contained within
             the body of the preceding candle, hinting at diminishing bearish strength and the potential for a bullish reversal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is black and has a <em>long</em> real body. Its body length must exceed
                   the average length specified by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>. The lower shadow must also be <em>long</em>,
                   surpassing the average for <see cref="F:TALib.Core.CandleSettingType.ShadowLong">ShadowLong</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle is black and <em>shorter</em> than the first. Its body length must be
                   less than the average specified by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                   It should open above the first candle's close yet remain within the prior candle's overall range,
                   trade below the first candle's close but not below its low, and close off its own low,
                   indicating a distinctive lower shadow.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that the third candle is black, with a <em>small</em> body or near a marubozu form. Its body length
                   must not exceed the average set by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>. It should have
                   <em>very short</em> shadows, below the average for <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see>,
                   and be entirely engulfed by the second candle's range.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Three Stars In The South pattern, suggesting a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeStarsInSouthLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeStarsInSouth``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeStarsInSouth</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeStarsInSouth``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeWhiteSoldiers``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Three Advancing White Soldiers (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Three Advancing White Soldiers function identifies a bullish three-candle formation typically observed after a downtrend.
             This pattern signals strong upward momentum, with each successive candle confirming bullish sentiment.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the first candle is white and possesses a <em>very short</em> upper shadow, measuring below the average for
                   <see cref="F:TALib.Core.CandleSettingType.ShadowVeryShort">ShadowVeryShort</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is also white and opens within or near the first candle's real body. "Near" is defined by
                   <see cref="F:TALib.Core.CandleSettingType.Near">Near</see>, indicating it should not gap significantly above the prior close.
                   The candle must close above the previous candle's close, confirming upward follow-through.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the third candle is similarly white and opens within or near the real body of the second candle,
                   again referencing <see cref="F:TALib.Core.CandleSettingType.Near">Near</see>. It should close above the second
                   candle's close, reinforcing bullish momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure that neither the second nor the third white candle is <em>far</em> shorter than its preceding white candle.
                   "Far" is governed by <see cref="F:TALib.Core.CandleSettingType.Far">Far</see>. Lastly, confirm that the third candle's
                   real body is not <em>short</em>, defined by <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Three Advancing White Soldiers pattern, signaling strong bullish sentiment.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThreeWhiteSoldiersLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.ThreeWhiteSoldiers``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">ThreeWhiteSoldiers</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.ThreeWhiteSoldiers``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Thrusting``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Thrusting Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Thrusting Pattern function identifies a two-candle bearish continuation formation that frequently arises within a downtrend.
             By demonstrating a partial but insufficient upward retracement, this pattern suggests the downtrend is likely to persist.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is black (bearish) and possesses a <em>long</em> real body. Its body length
                   must exceed the average length defined by <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in
                   <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is white (bullish) and opens below the low of the preceding black candle,
                   establishing a distinct gap on the open.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second candle's close rises into the body of the first candle but remains below its midpoint,
                   suggesting only a partial recovery. The reference for the midpoint is <see cref="F:TALib.Core.CandleSettingType.Equal">Equal</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm that the second candle's close does not match the prior candle's close, differentiating this pattern
                   from the "In-Neck" pattern.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates Thrusting pattern, signaling a continuation of bearish sentiment.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.ThrustingLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Thrusting``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Thrusting</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Thrusting``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.Tristar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Tristar Pattern (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Tristar Pattern function identifies a rare three-candle formation where each candle qualifies as a doji. This pattern commonly
             suggests a major turning point, as it reflects pronounced indecision or equilibrium in the market over three consecutive sessions.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that all three candles meet the <em>doji</em> criteria, meaning their real bodies do not exceed the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyDoji">BodyDoji</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Establish that the second doji gaps away from the first, positioning itself higher (for a bearish scenario)
                   or lower (for a bullish scenario) than the first candle's real body.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the third doji closes below (in a bearish setup) or above (in a bullish setup) the second candle's range.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates a bullish Tristar pattern, signaling a potential upward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates a bearish Tristar pattern, signaling a potential downward reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.TristarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.Tristar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">Tristar</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.Tristar``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.TwoCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Two Crows (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Two Crows Pattern function identifies a bearish two-candle formation emerging after an established uptrend. It consists of
             a long white (bullish) candle, followed by two black (bearish) candles—where the second black candle exhibits a gap relative
             to the first white candle.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm that the first candle is white, with a <em>long</em> real body. Its body length must exceed the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the second candle is black and gaps up relative to the first candle's real body.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the third candle is black, opening within the real body of the second black candle
                   and closing within the real body of the first white candle, thereby reversing part of the prior advance.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates Two Crows pattern, signaling a potential bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.TwoCrowsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.TwoCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">TwoCrows</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.TwoCrows``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.UniqueThreeRiver``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Unique Three River (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Unique Three River Pattern function identifies a bullish three-candle reversal pattern that generally appears at the end of
             a downtrend. Characterized by a long black candle, a black "harami" candle, and a small white candle, it signifies diminishing
             bearish pressure and the potential for a bullish reversal.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first candle is black and <em>long</em>. Its real body length must exceed the average set by
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Confirm the second candle is black and forms a "harami" within the first candle's real body. Specifically,
                   its low must extend below the low of the first candle, while its open remains at or below the first candle's open,
                   and its close is above the first candle's close.
                 </description>
               </item>
               <item>
                 <description>
                   Check that the third candle is white and <em>short</em>, below the average specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>. It must open no lower than the second candle's low.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Unique Three River pattern, signaling a potential bullish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.UniqueThreeRiverLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.UniqueThreeRiver``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">UniqueThreeRiver</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.UniqueThreeRiver``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.UpDownSideGapThreeMethods``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Upside/Downside Gap Three Methods (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Upside/Downside Gap Three Methods Pattern function identifies a bearish or bullish continuation pattern.
             This pattern typically occurs during a trend and consists of three candles where the first two are of the same color,
             followed by a third candle of the opposite color, with a noticeable gap between the first two candles' real bodies.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Verify that the first two candles share the same color (both white or both black).
                 </description>
               </item>
               <item>
                 <description>
                   Confirm a gap exists between the real bodies of the first two candles:
                   <list type="bullet">
                     <item>
                       <description>
                         If the first candle is white, ensure an <em>upside</em> gap, signifying a bullish push.
                       </description>
                     </item>
                     <item>
                       <description>
                         If the first candle is black, ensure a <em>downside</em> gap, emphasizing continued bearish pressure.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Check the third candle's color, which must be opposite that of the first two. Its open should lie within
                   the real body of the second candle, while its close should fall within the real body of the first candle,
                   suggesting only a partial retracement against the ongoing trend.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of 100 indicates Upside Gap Three Methods pattern, signaling a bullish continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of -100 indicates Downside Gap Three Methods pattern, signaling a bearish continuation.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.UpDownSideGapThreeMethodsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.UpDownSideGapThreeMethods``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">UpDownSideGapThreeMethods</see>.
            </summary>
            <returns>Always 2 since there are only two prices bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Candles.UpDownSideGapThreeMethods``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Candles.UpsideGapTwoCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Upside Gap Two Crows (Pattern Recognition)
             </summary>
             <param name="inOpen">A span of input open prices.</param>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outIntType">A span to store the output pattern type for each price bar.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Upside Gap Two Crows Pattern function identifies a bearish three-candle formation that generally manifests in an uptrend.
             It features a long white (bullish) candle, followed by two black (bearish) candles, with a gap appearing between the first candle's
             real body and the second candle's real body.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Confirm the first candle is white and <em>long</em>. Its real body length must surpass the average for
                   <see cref="F:TALib.Core.CandleSettingType.BodyLong">BodyLong</see> in <see cref="T:TALib.Core.CandleSettings">CandleSettings</see>.
                 </description>
               </item>
               <item>
                 <description>
                   Ensure the second candle is black and <em>short</em>, meeting or falling below the threshold specified by
                   <see cref="F:TALib.Core.CandleSettingType.BodyShort">BodyShort</see>. It must gap up relative to the first candle's real body,
                   indicating a potential continuation of bullish pressure.
                 </description>
               </item>
               <item>
                 <description>
                   Verify the third candle is black, "engulfing" the real body of the second candle by opening above the second candle's open
                   and closing below its close. The final close must remain above the first candle's close.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value of -100 indicates the presence of an Upside Gap Two Crows pattern, signaling a bearish reversal.
                 </description>
               </item>
               <item>
                 <description>
                   A value of 0 indicates that no pattern was detected.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Candles.UpsideGapTwoCrowsLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Candles.UpsideGapTwoCrows``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">UpsideGapTwoCrows</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Candles.UpsideGapTwoCrows``1(``0[],``0[],``0[],``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="T:TALib.Core">
            <summary>
            Provides a Core layer for configuration settings for candlestick patterns, compatibility modes, and handling of
            unstable periods in calculations.
            </summary>
        </member>
        <member name="T:TALib.Core.CandleColor">
            <summary>
            Represents the color of a candlestick, indicating its direction.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleColor.Black">
            <summary>
            Black candle representing a downward (bearish) trend.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleColor.White">
            <summary>
            White candle representing an upward (bullish) trend.
            </summary>
        </member>
        <member name="T:TALib.Core.CandleRangeType">
            <summary>
            Specifies the types of ranges that can be considered when comparing parts of a candlestick to other candlesticks.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleRangeType.RealBody">
            <summary>
            The part of the candlestick between the opening and closing prices.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleRangeType.HighLow">
            <summary>
            The entire range of the candlestick, from the highest to the lowest price.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleRangeType.Shadows">
            <summary>
            The shadows (or tails) of the candlestick, which are the wicks extending above and below the real body.
            </summary>
        </member>
        <member name="T:TALib.Core.CandleSetting">
            <summary>
            Represents a candle setting.
            </summary>
            <param name="RangeType">The type of range to consider for the candle.</param>
            <param name="AveragePeriod">The number of previous candles to average when calculating the range.</param>
            <param name="Factor">A multiplier used to calculate the range of the candle.</param>
        </member>
        <member name="M:TALib.Core.CandleSetting.#ctor(TALib.Core.CandleRangeType,System.Int32,System.Double)">
            <summary>
            Represents a candle setting.
            </summary>
            <param name="RangeType">The type of range to consider for the candle.</param>
            <param name="AveragePeriod">The number of previous candles to average when calculating the range.</param>
            <param name="Factor">A multiplier used to calculate the range of the candle.</param>
        </member>
        <member name="P:TALib.Core.CandleSetting.RangeType">
            <summary>The type of range to consider for the candle.</summary>
        </member>
        <member name="P:TALib.Core.CandleSetting.AveragePeriod">
            <summary>The number of previous candles to average when calculating the range.</summary>
        </member>
        <member name="P:TALib.Core.CandleSetting.Factor">
            <summary>A multiplier used to calculate the range of the candle.</summary>
        </member>
        <member name="T:TALib.Core.CandleSettings">
            <summary>
            Provides settings for all candlestick patterns.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettings.Settings">
            <remarks>
            Initializes the default settings for all candlestick setting types.
            </remarks>
        </member>
        <member name="M:TALib.Core.CandleSettings.Get(TALib.Core.CandleSettingType)">
            <summary>
            Retrieves the candle setting for a specified type.
            </summary>
            <param name="type">The type of the candle setting.</param>
            <returns>An instance of <see cref="T:TALib.Core.CandleSetting"/> containing the settings for the specified type.</returns>
        </member>
        <member name="M:TALib.Core.CandleSettings.Set(TALib.Core.CandleSettingType,TALib.Core.CandleSetting)">
            <summary>
            Updates the default candle setting for a specified type.
            </summary>
            <param name="type">The type of the candle setting.</param>
            <param name="setting">An instance of <see cref="T:TALib.Core.CandleSetting"/> containing the new settings.</param>
        </member>
        <member name="T:TALib.Core.CandleSettingType">
            <summary>
            Types of candlestick pattern settings.
            </summary>
            <remarks>
            The settings are based on the parts of the candle and the common words indicating the length (short, long, very long).
            </remarks>
        </member>
        <member name="F:TALib.Core.CandleSettingType.BodyLong">
            <summary>
            Real body is long when it's longer than the average of the 10 previous candles' real body.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.BodyVeryLong">
            <summary>
            Real body is very long when it's longer than 3 times the average of the 10 previous candles' real body.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.BodyShort">
            <summary>
            Real body is short when it's shorter than the average of the 10 previous candles' real bodies.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.BodyDoji">
            <summary>
            Real body is like doji's body when it's shorter than 10% the average of the 10 previous candles' high-low range.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.ShadowLong">
            <summary>
            Shadow is long when it's longer than the real body.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.ShadowVeryLong">
            <summary>
            Shadow is very long when it's longer than 2 times the real body.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.ShadowShort">
            <summary>
            Shadow is short when it's shorter than half the average of the 10 previous candles' sum of shadows.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.ShadowVeryShort">
            <summary>
            Shadow is very short when it's shorter than 10% the average of the 10 previous candles' high-low range.
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.Near">
            <summary>
            When measuring distance between parts of candles or width of gaps.
            "near" means >=20% of the average of the 5 previous candles' high-low range"
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.Far">
            <summary>
            When measuring distance between parts of candles or width of gaps.
            "far" means ">=60% of the average of the 5 previous candles' high-low range"
            </summary>
        </member>
        <member name="F:TALib.Core.CandleSettingType.Equal">
            <summary>
            When measuring distance between parts of candles or width of gaps.
            "equal" means "≤5% of the average of the 5 previous candles' high-low range"
            </summary>
        </member>
        <member name="T:TALib.Core.CompatibilityMode">
            <summary>
            Типы режимов совместимости для работы с различными платформами и инструментами.
            </summary>
            <remarks>
            Режимы совместимости позволяют адаптировать расчеты индикаторов 
            под специфические требования сторонних приложений.
            </remarks>
        </member>
        <member name="F:TALib.Core.CompatibilityMode.Default">
            <summary>
            Стандартный режим работы библиотеки без дополнительных настроек совместимости.
            </summary>
        </member>
        <member name="F:TALib.Core.CompatibilityMode.Metastock">
            <summary>
            Режим совместимости с программным обеспечением MetaStock.
            </summary>
            <remarks>
            Используется для корректной работы с формулами и индикаторами, 
            разработанными для платформы MetaStock. Может влиять на расчет 
            скользящих средних, осцилляторов и других технических индикаторов.
            </remarks>
        </member>
        <member name="T:TALib.Core.CompatibilitySettings">
            <summary>
            Provides settings for handling the compatibility with other software.
            </summary>
        </member>
        <member name="F:TALib.Core.CompatibilitySettings._compatibilityMode">
            <remarks>
            Initializes the default compatibility mode.
            </remarks>
        </member>
        <member name="M:TALib.Core.CompatibilitySettings.Get">
            <summary>
            Retrieves the current compatibility mode.
            </summary>
            <returns>A <see cref="T:TALib.Core.CompatibilityMode"/> enum value representing the current compatibility mode.</returns>
        </member>
        <member name="M:TALib.Core.CompatibilitySettings.Set(TALib.Core.CompatibilityMode)">
            <summary>
            Sets a new compatibility mode.
            </summary>
            <param name="mode">The <see cref="T:TALib.Core.CompatibilityMode"/> to be set.</param>
        </member>
        <member name="T:TALib.Core.MAType">
            <summary>
            Определяет различные типы скользящих средних.
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Sma">
            <summary>
            Невзвешенное арифметическое среднее (SMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Ema">
            <summary>
            Стандартная экспоненциальная скользящая средняя (EMA), использующая коэффициент сглаживания 2/(n+1).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Wma">
            <summary>
            Взвешенная экспоненциальная скользящая средняя (WMA), использующая коэффициент сглаживания 1/n и простую скользящую среднюю в качестве начального значения.
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Dema">
            <summary>
            Двойная экспоненциальная скользящая средняя (DEMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Tema">
            <summary>
            Тройная экспоненциальная скользящая средняя (TEMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Trima">
            <summary>
            Треугольная скользящая средняя (TRIMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Kama">
            <summary>
            Адаптивная скользящая средняя Кауфмана (KAMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.Mama">
            <summary>
            Адаптивная скользящая средняя MESA (MAMA).
            </summary>
        </member>
        <member name="F:TALib.Core.MAType.T3">
            <summary>
            Утроенная обобщённая двойная экспоненциальная скользящая средняя (T3).
            </summary>
        </member>
        <member name="T:TALib.Core.OutputDisplayHints">
            <summary>
            Flags providing hints on how to display the output.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Line">
            <summary>
            Suggests displaying the output as a connected line.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.DotLine">
            <summary>
            Suggests displaying the output as a dotted line.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.DashLine">
            <summary>
            Suggests displaying the output as a dashed line.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Dot">
            <summary>
            Suggests displaying the output using dots only.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Histo">
            <summary>
            Suggests displaying the output as a histogram.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.PatternBool">
            <summary>
            Indicates whether a pattern exists (non-zero) or not (zero).
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.PatternBullBear">
            <summary>
            Indicates pattern type: zero means no pattern, greater than zero means bullish, and less than zero means bearish.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.PatternStrength">
            <summary>
            Indicates pattern strength: zero means neutral, (0..100] means getting bullish, (100..200] means bullish, [-100..0) means getting bearish, and [-200..-100) means bearish.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Positive">
            <summary>
            Indicates that the output can be positive.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Negative">
            <summary>
            Indicates that the output can be negative.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.Zero">
            <summary>
            Indicates that the output can be zero.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.UpperLimit">
            <summary>
            Indicates that the values represent an upper limit.
            </summary>
        </member>
        <member name="F:TALib.Core.OutputDisplayHints.LowerLimit">
            <summary>
            Indicates that the values represent a lower limit.
            </summary>
        </member>
        <member name="T:TALib.Core.RetCode">
            <summary>
            Represents the return codes for functions, indicating the outcome of an operation.
            </summary>
        </member>
        <member name="F:TALib.Core.RetCode.Success">
            <summary>
            The operation was successful.
            </summary>
        </member>
        <member name="F:TALib.Core.RetCode.BadParam">
            <summary>
            The operation failed due to an invalid parameter.
            </summary>
        </member>
        <member name="F:TALib.Core.RetCode.OutOfRangeParam">
            <summary>
            The operation failed due to an insufficient number of elements in the input data.
            </summary>
        </member>
        <member name="T:TALib.Core.UnstableFunc">
            <summary>
            Represents unique identifiers for functions that utilize algorithms with "memories".
            </summary>
        </member>
        <member name="T:TALib.Core.UnstablePeriodSettings">
             <summary>
             Provides settings for unstable periods for all functions.
             It allows configuring how many initial periods should be stripped off for functions with "memory",
             ensuring that their output stabilizes before being used.
             </summary>
             <remarks>
             Many TA functions, such as the Exponential Moving Average (EMA), utilize algorithms that retain memory of previous data points.
             This can lead to variations in the output during the initial periods of calculation, which may not be desirable for certain applications,
             especially in walk-forward testing.
            
             The <see cref="T:TALib.Core.UnstablePeriodSettings"/> class allows setting and retrieving the unstable period for individual TA functions.
             The unstable period is the number of initial periods that are disregarded to ensure that the function's output is stable.
            
             By default, there is no unstable period set for any TA function. It is up to the consumer to determine the appropriate number of periods to strip off.
             The general guideline is to strip off as many periods as necessary to achieve consistent results.
            
             Setting an unstable period affects all instances where the function is used, including composite functions that use the specified function internally.
             For example, setting an unstable period for an EMA will also affect the EMA calculations within the MACD function.
             </remarks>
        </member>
        <member name="F:TALib.Core.UnstablePeriodSettings.UnstablePeriods">
            <remarks>
            Initializes the default unstable period settings for all functions.
            </remarks>
        </member>
        <member name="M:TALib.Core.UnstablePeriodSettings.Get(TALib.Core.UnstableFunc)">
            <summary>
            Retrieves the unstable period for a specified function.
            </summary>
            <param name="id">The identifier of the function.</param>
            <returns>
            The number of periods to be stripped off.
            Returns zero if the identifier specified is <see cref="F:TALib.Core.UnstableFunc.All"/>.
            </returns>
        </member>
        <member name="M:TALib.Core.UnstablePeriodSettings.Set(TALib.Core.UnstableFunc,System.Int32)">
            <summary>
            Sets the unstable period for a specified function.
            </summary>
            <remarks>
            To apply the change to all applicable functions, specify <see cref="F:TALib.Core.UnstableFunc.All"/>.
            </remarks>
            <param name="id">The identifier of the function.</param>
            <param name="unstablePeriod">Number of periods to be stripped off.</param>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcAccumulationDistribution``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Int32@,``0)">
            <summary>
            Рассчитывает значение индикатора накопления/распределения (Accumulation/Distribution) для текущего бара.
            Формула: AD += ((Close - Low) - (High - Close)) / (High - Low) * Volume.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="high">Массив максимальных цен за период</param>
            <param name="low">Массив минимальных цен за период</param>
            <param name="close">Массив цен закрытия</param>
            <param name="volume">Массив объемов торгов</param>
            <param name="today">Текущий индекс обрабатываемого бара (будет увеличен на 1 после расчета)</param>
            <param name="ad">Текущее значение индикатора накопления/распределения</param>
            <returns>Обновленное значение индикатора AD</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcDeltas``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Int32,``0@,``0@)">
            <summary>
            Рассчитывает дельты направленного движения (+DM и -DM) для текущего бара.
            Используется для определения силы восходящего и нисходящего трендов.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inHigh">Массив максимальных цен</param>
            <param name="inLow">Массив минимальных цен</param>
            <param name="today">Текущий индекс обрабатываемого бара</param>
            <param name="prevHigh">Предыдущее значение High (будет обновлено текущим значением)</param>
            <param name="prevLow">Предыдущее значение Low (будет обновлено текущим значением)</param>
            <returns>
            Кортеж:  
            - <b>diffP</b>: Плюс дельта (+DM) = Current High - Previous High  
            - <b>diffM</b>: Минус дельта (-DM) = Previous Low - Current Low
            </returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcDI``1(``0,``0,``0)">
            <summary>
            Рассчитывает индексы направленного движения (DI) на основе Directional Movement и True Range.
            Используется для оценки силы восходящего (+DI) и нисходящего (-DI) трендов.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="prevMinusDM">Предыдущее значение минус направленного движения (-DM)</param>
            <param name="prevPlusDM">Предыдущее значение плюс направленного движения (+DM)</param>
            <param name="prevTR">Предыдущее значение истинного диапазона (True Range)</param>
            <returns>
            Кортеж:  
            - <b>minusDI</b>: Индекс нисходящего тренда = (-DM / TR) * 100  
            - <b>plusDI</b>: Индекс восходящего тренда = (+DM / TR) * 100
            </returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcExponentialMA``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,``0)">
            <summary>
            Рассчитывает экспоненциальную скользящую среднюю (EMA) с поддержкой различных алгоритмов инициализации.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inReal">Входные данные для расчета (цены или другие временные ряды)</param>
            <param name="inRange">Диапазон входных данных для обработки</param>
            <param name="outReal">Массив для сохранения результатов EMA</param>
            <param name="outRange">Диапазон указывающий для каких ячеек входных данных для расчёта посчитаны валидные значения индикаторов (индексы первой и последней ячейки во входных данных)</param>
            <param name="optInTimePeriod">Период EMA (количество баров для расчета)</param>
            <param name="optInK1">Коэффициент сглаживания (обычно 2/(optInTimePeriod + 1))</param>
            <returns>Код возврата (успех/ошибка)</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcHighest``1(System.ReadOnlySpan{``0},System.Int32,System.Int32,System.Int32,``0)">
            <summary>
            Рассчитывает максимальное значение в скользящем окне данных с учетом исторических значений.
            Используется для поиска экстремумов в временных рядах (например, максимумов цен).
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="input">Входной временной ряд (например, цены High)</param>
            <param name="trailingIdx">Начальный индекс текущего окна анализа</param>
            <param name="today">Текущий индекс обрабатываемого бара</param>
            <param name="highestIdx">Индекс предыдущего максимального значения</param>
            <param name="highest">Значение предыдущего максимума</param>
            <returns>
            Кортеж: 
            - <b>Item1</b>: Индекс обновленного максимального значения в окне  
            - <b>Item2</b>: Значение обновленного максимума
            </returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcLowest``1(System.ReadOnlySpan{``0},System.Int32,System.Int32,System.Int32,``0)">
            <summary>
            Рассчитывает минимальное значение в скользящем окне данных с учетом исторических значений.
            Используется для поиска экстремумов в временных рядах (например, минимумов цен).
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="input">Входной временной ряд (например, цены Low)</param>
            <param name="trailingIdx">Начальный индекс текущего окна анализа</param>
            <param name="today">Текущий индекс обрабатываемого бара</param>
            <param name="lowestIdx">Индекс предыдущего минимального значения</param>
            <param name="lowest">Значение предыдущего минимума</param>
            <returns>
            Кортеж: 
            - <b>Item1</b>: Индекс обновленного минимального значения в окне  
            - <b>Item2</b>: Значение обновленного минимума
            </returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcMACD``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Рассчитывает индикатор MACD (Moving Average Convergence Divergence) с сигнальной линией и гистограммой.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inReal">Входные данные для расчета (например, цены закрытия)</param>
            <param name="inRange">Диапазон входных данных для обработки</param>
            <param name="outMacd">Массив для значений основной линии MACD (Fast EMA - Slow EMA)</param>
            <param name="outMacdSignal">Массив для значений сигнальной линии (EMA от MACD)</param>
            <param name="outMacdHist">Массив для гистограммы MACD (MACD - Signal)</param>
            <param name="outRange">Диапазон выходных данных (индексы первого и последнего валидных значений)</param>
            <param name="optInFastPeriod">Период быстрой EMA (по умолчанию 12)</param>
            <param name="optInSlowPeriod">Период медленной EMA (по умолчанию 26)</param>
            <param name="optInSignalPeriod">Период сигнальной линии (по умолчанию 9)</param>
            <returns>Код возврата (успех/ошибка)</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcPriceOscillator``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType,System.Span{``0},System.Boolean)">
            <summary>
            Рассчитывает ценовой осциллятор на основе разности/отношения двух скользящих средних.
            Поддерживает режимы вывода: абсолютные значения (Fast MA - Slow MA) или процентное отношение ((Fast MA - Slow MA)/Slow MA * 100).
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inReal">Входные данные для расчета (например, цены закрытия)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).  
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения осциллятора.  
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).  
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:  
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.  
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <param name="optInFastPeriod">Период быстрой скользящей средней (должен быть меньше медленного периода)</param>
            <param name="optInSlowPeriod">Период медленной скользящей средней (должен быть больше быстрого периода)</param>
            <param name="optInMethod">Метод расчета скользящих средних (SMA, EMA, и др.)</param>
            <param name="tempBuffer">Временный буфер для хранения промежуточных значений быстрой скользящей средней</param>
            <param name="doPercentageOutput">
            Флаг режима вывода:  
            - <c>true</c> — результат в процентах ((Fast MA - Slow MA)/Slow MA * 100)  
            - <c>false</c> — абсолютная разность (Fast MA - Slow MA)
            </param>
            <returns>Код возврата (успех/ошибка)</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcSimpleMA``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
            <summary>
            Рассчитывает простое скользящее среднее (SMA) для временного ряда.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inReal">Входные данные для расчета (цены, индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).  
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения SMA.  
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).  
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:  
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.  
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <param name="optInTimePeriod">Период SMA (количество баров для расчета среднего)</param>
            <returns>Код возврата (успех/ошибка)</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.CalcVariance``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
            <summary>
            Рассчитывает дисперсию временного ряда на основе скользящего окна.
            Формула: дисперсия = (среднее квадратов значений) - (среднее значение)^2.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="inReal">Входные данные для расчета (цены, индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).  
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения дисперсии.  
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).  
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:  
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.  
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <param name="optInTimePeriod">Период для расчета дисперсии (количество баров в окне)</param>
            <returns>Код возврата (успех/ошибка)</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.DoPriceWma``1(System.ReadOnlySpan{``0},System.Int32@,``0@,``0@,``0@,``0,``0@)">
            <summary>
            Выполняет расчет взвешенного скользящего среднего (WMA) с учетом весовых коэффициентов.
            Используется для сглаживания временных рядов с акцентом на последние значения.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="real">Входной временной ряд (например, цены)</param>
            <param name="idx">Текущий индекс обрабатываемого бара (будет увеличен на 1)</param>
            <param name="periodWMASub">Сумма значений для коррекции окна (используется для удаления старых данных)</param>
            <param name="periodWMASum">Взвешенная сумма значений для текущего окна</param>
            <param name="trailingWMAValue">Значение, которое будет удалено из окна при следующей итерации</param>
            <param name="varNewPrice">Новое значение, добавляемое в расчет (текущая цена)</param>
            <param name="varToStoreSmoothedValue">Результирующее сглаженное значение WMA</param>
        </member>
        <member name="M:TALib.FunctionHelpers.InitDMAndTR``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},``0@,System.Int32@,``0@,``0@,``0,``0@,``0@,``0@)">
            <summary>
            Инициализирует начальные значения Directional Movement (DM) и True Range (TR) для расчета индикаторов.
            Выполняет предварительные вычисления для заданного периода, обновляя состояния DM и TR.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="high">Массив максимальных цен</param>
            <param name="low">Массив минимальных цен</param>
            <param name="close">Массив цен закрытия</param>
            <param name="prevHigh">Предыдущее значение High (будет инициализировано)</param>
            <param name="today">Текущий индекс обрабатываемого бара (будет увеличен в цикле)</param>
            <param name="prevLow">Предыдущее значение Low (будет инициализировано)</param>
            <param name="prevClose">Предыдущее значение Close (инициализируется нулем, если <paramref name="close"/> пуст)</param>
            <param name="timePeriod">Период для расчета (определяет количество итераций инициализации)</param>
            <param name="prevPlusDM">Ссылка на предыдущее значение плюс Directional Movement (+DM)</param>
            <param name="prevMinusDM">Ссылка на предыдущее значение минус Directional Movement (-DM)</param>
            <param name="prevTR">Ссылка на предыдущее значение True Range</param>
        </member>
        <member name="M:TALib.FunctionHelpers.TrueRange``1(``0,``0,``0)">
            <summary>
            Рассчитывает истинный диапазон (True Range) для текущего бара.
            Используется в индикаторах вроде Average True Range (ATR) для оценки волатильности.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="th">Текущий максимум (High) бара</param>
            <param name="tl">Текущий минимум (Low) бара</param>
            <param name="yc">Предыдущее значение закрытия (Yesterday's Close)</param>
            <returns>
            Максимальное значение из трех вариантов:  
            1. Разница между текущими High и Low  
            2. Абсолютная разница между текущим High и предыдущим Close  
            3. Абсолютная разница между текущим Low и предыдущим Close
            </returns>
        </member>
        <member name="M:TALib.FunctionHelpers.UpdateDMAndTR``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Int32@,``0@,``0@,``0@,``0@,``0@,``0@,``0,System.Boolean)">
            <summary>
            Обновляет значения Directional Movement (+DM/-DM) и True Range (TR) для текущего бара.
            Используется для расчета индикаторов, таких как ADX и DI.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, double)</typeparam>
            <param name="high">Массив максимальных цен</param>
            <param name="low">Массив минимальных цен</param>
            <param name="close">Массив цен закрытия</param>
            <param name="today">Текущий индекс обрабатываемого бара (будет увеличен при необходимости)</param>
            <param name="prevHigh">Предыдущее значение High (будет обновлено)</param>
            <param name="prevLow">Предыдущее значение Low (будет обновлено)</param>
            <param name="prevClose">Предыдущее значение Close (будет обновлено)</param>
            <param name="prevPlusDM">Ссылка на текущее значение плюс Directional Movement (+DM)</param>
            <param name="prevMinusDM">Ссылка на текущее значение минус Directional Movement (-DM)</param>
            <param name="prevTR">Ссылка на текущее значение True Range</param>
            <param name="timePeriod">Период для сглаживания (используется при <paramref name="applySmoothing"/>)</param>
            <param name="applySmoothing">
            Флаг применения сглаживания:  
            - <c>true</c> — используется экспоненциальное сглаживание (Wilders Smoothing).  
            - <c>false</c> — простое суммирование без сглаживания.
            </param>
        </member>
        <member name="M:TALib.FunctionHelpers.Two``1">
            <summary>
            Возвращает числовое значение 2, преобразованное к указанному типу с плавающей точкой.
            </summary>
        </member>
        <member name="M:TALib.FunctionHelpers.Three``1">
            <summary>
            Возвращает числовое значение 3, преобразованное к указанному типу с плавающей точкой.
            </summary>
        </member>
        <member name="M:TALib.FunctionHelpers.Four``1">
            <summary>
            Возвращает числовое значение 4, преобразованное к указанному типу с плавающей точкой.
            </summary>
        </member>
        <member name="M:TALib.FunctionHelpers.Ninety``1">
            <summary>
            Возвращает числовое значение 90, преобразованное к указанному типу с плавающей точкой.
            </summary>
        </member>
        <member name="M:TALib.FunctionHelpers.Hundred``1">
            <summary>
            Возвращает числовое значение 100, преобразованное к указанному типу с плавающей точкой.
            </summary>
        </member>
        <member name="M:TALib.FunctionHelpers.ValidateInputRange(System.Range,System.Int32[])">
            <summary>
            Проверяет и корректирует входной диапазон для обеспечения корректности обработки данных.
            </summary>
            <param name="inRange">Запрошенный диапазон обработки данных (начальный и конечный индексы)</param>
            <param name="inputLengths">Массив длин входных данных для проверки (например, длины массивов цен)</param>
            <returns>
            Кортеж с корректными индексами <c>startIndex</c> и <c>endIndex</c> для обработки, 
            или <c>null</c> если диапазон недопустим.
            </returns>
        </member>
        <member name="T:TALib.FunctionHelpers.HTHelper">
            <summary>
            Класс для работы с преобразованиями Хилберта (Hilbert Transform) и аналитическими сигналами.
            Используется для вычисления квадратурных компонент, огибающих и фазовых характеристик временных рядов.
            </summary>
        </member>
        <member name="T:TALib.FunctionHelpers.HTHelper.HilbertKeys">
            <summary>
            Ключи для управления буферами и состояниями при преобразованиях Хилберта.
            Содержит индексы для хранения промежуточных данных фильтров и квадратурных компонент.
            </summary>
        </member>
        <member name="F:TALib.FunctionHelpers.HTHelper.HilbertKeys.Detrender">
            <summary>Основной буфер детрендера</summary>
        </member>
        <member name="F:TALib.FunctionHelpers.HTHelper.HilbertKeys.Q1">
            <summary>Буфер первой квадратурной компоненты</summary>
        </member>
        <member name="F:TALib.FunctionHelpers.HTHelper.HilbertKeys.JI">
            <summary>Буфер инвертора Джилля (квадратурная компонента)</summary>
        </member>
        <member name="F:TALib.FunctionHelpers.HTHelper.HilbertKeys.JQ">
            <summary>Буфер квадратурного фильтра Джилля</summary>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.BufferFactory``1">
            <summary>
            Создает буфер фиксированного размера для хранения промежуточных данных преобразований Хилберта.
            Размер буфера соответствует 4 * 11 элементам, что связано с количеством внутренних состояний и коэффициентов,
            определенных в <see cref="T:TALib.FunctionHelpers.HTHelper.HilbertKeys"/>.
            </summary>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
            <returns>Массив длиной 44 элемента (4 * 11) для хранения промежуточных вычислений</returns>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.InitWma``1(System.ReadOnlySpan{``0},System.Int32,System.Int32,``0@,``0@,``0@,System.Int32@,System.Int32,System.Int32@)">
            <summary>
            Инициализирует взвешенное скользящее среднее (WMA) для сглаживания временных рядов.
            Используется для подготовки буферов, необходимых при расчетах преобразований Хилберта.
            </summary>
            <param name="real">Входные данные временного ряда (например, цены)</param>
            <param name="startIdx">Начальный индекс во входных данных</param>
            <param name="lookbackTotal">Период инициализации (количество баров для расчета начального значения)</param>
            <param name="periodWMASub">Буфер для накопления разностей взвешенных сумм</param>
            <param name="periodWMASum">Буфер для накопления взвешенных сумм</param>
            <param name="trailingWMAValue">Текущее значение WMA для "хвостового" периода</param>
            <param name="trailingWMAIdx">Индекс начала "хвостового" периода в исходных данных</param>
            <param name="period">Период WMA (используется для полной инициализации буфера)</param>
            <param name="today">Индекс текущего обрабатываемого элемента во входных данных</param>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.CalcHilbertOdd``1(System.Span{``0},``0,System.Int32,``0,``0@,``0,``0,``0,``0@,``0@,``0@)">
            <summary>
            Выполняет этап преобразования Хилберта для нечетных периодов, вычисляя квадратурные компоненты и обновляя буферы состояний.
            Используется для анализа фазовых и амплитудных характеристик сигнала.
            </summary>
            <param name="hilbertBuffer">Буфер для хранения промежуточных данных преобразования (размер определяется <see cref="T:TALib.FunctionHelpers.HTHelper.HilbertKeys"/>)</param>
            <param name="smoothedValue">Сглаженное значение временного ряда (например, цена после WMA)</param>
            <param name="hilbertIdx">Индекс текущей итерации в буфере преобразования</param>
            <param name="adjustedPrevPeriod">Скорректированный предыдущий период для адаптации преобразования</param>
            <param name="i1ForEvenPrev3">Буфер для хранения детрендера с задержкой 3 бара (используется в четных периодах)</param>
            <param name="prevQ2">Предыдущее значение квадратурной компоненты Q2</param>
            <param name="prevI2">Предыдущее значение квадратурной компоненты I2</param>
            <param name="i1ForOddPrev3">Текущее значение детрендера для нечетных периодов с задержкой 3 бара</param>
            <param name="i1ForEvenPrev2">Ссылка на буфер для обновления детрендера с задержкой 2 бара (для четных периодов)</param>
            <param name="q2">Результирующая квадратурная компонента Q2 (сглаженная)</param>
            <param name="i2">Результирующая квадратурная компонента I2 (сглаженная)</param>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.CalcHilbertEven``1(System.Span{``0},``0,System.Int32@,``0,``0,``0,``0,``0@,``0@,``0@,``0@)">
            <summary>
            Выполняет этап преобразования Хилберта для четных периодов, вычисляя квадратурные компоненты и обновляя буферы состояний.
            Используется для анализа фазовых и амплитудных характеристик сигнала в сочетании с нечетными периодами.
            </summary>
            <param name="hilbertBuffer">Буфер для хранения промежуточных данных преобразования (размер определяется <see cref="T:TALib.FunctionHelpers.HTHelper.HilbertKeys"/>)</param>
            <param name="smoothedValue">Сглаженное значение временного ряда (например, цена после WMA)</param>
            <param name="hilbertIdx">Ссылка на индекс текущей итерации в буфере преобразования (циклический счетчик 0-2)</param>
            <param name="adjustedPrevPeriod">Скорректированный предыдущий период для адаптации преобразования</param>
            <param name="i1ForEvenPrev3">Детрендер с задержкой 3 бара из предыдущего четного периода</param>
            <param name="prevQ2">Предыдущее значение квадратурной компоненты Q2</param>
            <param name="prevI2">Предыдущее значение квадратурной компоненты I2</param>
            <param name="i1ForOddPrev3">Буфер для сохранения детрендера с задержкой 3 бара (используется в нечетных периодах)</param>
            <param name="i1ForOddPrev2">Ссылка на буфер для обновления детрендера с задержкой 2 бара (для нечетных периодов)</param>
            <param name="q2">Результирующая квадратурная компонента Q2 (сглаженная)</param>
            <param name="i2">Результирующая квадратурная компонента I2 (сглаженная)</param>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.CalcSmoothedPeriod``1(``0@,``0,``0,``0@,``0@,``0@,``0@)">
            <summary>
            Вычисляет сглаженный период сигнала на основе квадратурных компонент I2 и Q2.
            Используется для определения доминирующего цикла во временном ряду.
            </summary>
            <param name="re">Реальная часть аналитического сигнала (накапливается с коэффициентом 0.2)</param>
            <param name="i2">Текущая квадратурная компонента I2</param>
            <param name="q2">Текущая квадратурная компонента Q2</param>
            <param name="prevI2">Предыдущее значение I2 для расчета корреляции</param>
            <param name="prevQ2">Предыдущее значение Q2 для расчета корреляции</param>
            <param name="im">Мнимая часть аналитического сигнала (накапливается с коэффициентом 0.2)</param>
            <param name="period">Сглаженный период сигнала (в барах)</param>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
        </member>
        <member name="M:TALib.FunctionHelpers.HTHelper.DoHilbertTransform``1(System.Span{``0},TALib.FunctionHelpers.HTHelper.HilbertKeys,``0,System.Boolean,System.Int32,``0)">
            <summary>
            Выполняет этап преобразования Хилберта для заданного компонента, обновляя буфер состояний.
            Реализует адаптивный фильтр с коэффициентами 0.0962 и 0.5769 для обработки квадратурных сигналов.
            </summary>
            <param name="buffer">Буфер для хранения промежуточных данных (размер определяется <see cref="T:TALib.FunctionHelpers.HTHelper.HilbertKeys"/>)</param>
            <param name="baseKey">Базовый ключ для определения группы буферов (Detrender, Q1, JI, JQ)</param>
            <param name="input">Входное значение для текущего этапа преобразования</param>
            <param name="isOdd">Флаг нечетного периода (true) или четного (false)</param>
            <param name="hilbertIdx">Циклический индекс (0-2) для выбора подбуфера</param>
            <param name="adjustedPrevPeriod">Скорректированный предыдущий период для адаптации фильтра</param>
            <typeparam name="T">Тип данных с плавающей точкой (например, <see cref="T:System.Double"/> или <see cref="T:System.Single"/>)</typeparam>
        </member>
        <member name="T:TALib.Functions">
            <summary>
            Содержит реализацию технических индикаторов библиотеки TA-Lib.
            </summary>
            <summary>
            Предоставляет функциональный слой для доступа к методам расчёта технических индикаторов.
            </summary>
        </member>
        <member name="M:TALib.Functions.HtDcPeriod``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Hilbert Transform - Dominant Cycle Period (Cycle Indicators) — Преобразование Хилберта - Доминирующий цикл (Индикаторы циклов)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Преобразование Хилберта - Доминирующий цикл определяет доминирующую длину цикла в рыночных данных.
             Оно применяет серию преобразований для выявления периодических паттернов и их доминирующей частоты.
             <para>
             Функция используется в продвинутом техническом анализе для выявления циклов в финансовых временных рядах,
             что помогает определить рыночные тренды и время для входа или выхода из позиций.
             Функция может быть интегрирована в цикловые подходы для тайминга входов или выходов.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Сглаживание входных данных с использованием взвешенного скользящего среднего (WMA) для уменьшения шума при сохранении основного сигнала.
                 </description>
               </item>
               <item>
                 <description>
                   Применение преобразования Хилберта для вычисления фазовых (I) и квадратурных (Q) компонентов для нечетных и четных ценовых баров.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление арктангенса компонентов Q и I для определения фазовых изменений между последовательными ценовыми барами.
                 </description>
               </item>
               <item>
                 <description>
                   Использование фазовых изменений для оценки мгновенного периода доминирующего цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Применение сглаживающего фактора для стабилизации рассчитанного периода и уменьшения влияния шума и выбросов.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Выходные данные представляют собой доминирующий цикл в данных.
                 </description>
               </item>
               <item>
                 <description>
                   Меньший период указывает на более быстрые рыночные циклы, тогда как больший период сигнализирует о более медленных циклах.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Функция более эффективна в цикличных или боковых рынках и может давать ненадежные результаты в условиях сильного тренда.
                 </description>
               </item>
               <item>
                 <description>
                   Выходные данные чувствительны к шумным данным; сглаживающие техники, такие как WMA, помогают минимизировать это.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtDcPeriodLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.HtDcPeriod``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">HtDcPeriod</see>.
            </summary>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
            <remarks>См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения значения "32"</remarks>
        </member>
        <member name="M:TALib.Functions.HtDcPeriod``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtDcPhase``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Hilbert Transform - Dominant Cycle Phase (Cycle Indicators) — Преобразование Гильберта - Фаза доминирующего цикла (Индикаторы циклов)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Преобразование Гильберта - Фаза доминирующего цикла определяет фазу доминирующего ценового цикла,
             определяя текущую позицию внутри цикла.
             Этот угол фазы дает представление о позиции внутри цикла, что может быть использовано для анализа времени и тренда.
             <para>
             Функция полезна для идентификации циклов и их фаз в финансовых данных.
             Она помогает выявлять перекупленность и перепроданность, а также потенциальные развороты цен.
             Функция может улучшить тайминг при использовании вместе с <see cref="M:TALib.Functions.HtDcPeriod``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">HT DC Period</see> или другими инструментами циклов.
             Добавление трендовых и импульсных мер может уточнить решения.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Сглаживание входных цен с помощью взвешенного скользящего среднего (WMA) для удаления шума и стабилизации данных.
                 </description>
               </item>
               <item>
                 <description>
                   Использование преобразования Гильберта для вычисления согласованных (I) и квадратурных (Q) компонентов для четных и нечетных ценовых баров.
                   Эти компоненты служат основой для расчета фазы.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление действительной и мнимой частей фазы доминирующего цикла с помощью тригонометрических операций над сглаженными ценами.
                 </description>
               </item>
               <item>
                 <description>
                   Вывод угла фазы из действительной и мнимой частей. Корректировка угла фазы для малых мнимых компонентов
                   и учет однобаровых задержек, введенных WMA.
                 </description>
               </item>
               <item>
                 <description>
                   Выполнение окончательных корректировок фазы для обеспечения результата в ожидаемом диапазоне.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значение указывает текущую позицию внутри рыночного цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Рост значения может указывать на начало бычьего тренда, в то время как падение фазы может сигнализировать о медвежьих трендах.
                 </description>
               </item>
               <item>
                 <description>
                   Падение значения может сигнализировать о медвежьих трендах.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Функция более эффективна в циклических или боковых рынках и может давать ненадежные результаты в условиях сильного тренда.
                 </description>
               </item>
               <item>
                 <description>
                   Выход чувствителен к шумным данным; методы сглаживания, такие как WMA, помогают смягчить это.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtDcPhaseLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.HtDcPhase``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">HtDcPhase</see>.
            </summary>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
            <remarks>
            31 входных значений пропускается для совместимости с Tradestation.
            См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения "32"
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtDcPhase``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtPhasor``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@)">
             <summary>
             Hilbert Transform - Phasor Components (Cycle Indicators) — Преобразование Хилберта - Фазовые компоненты (Циклические индикаторы)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outInPhase">Массив, содержащий ТОЛЬКО валидные значения индикатора.</param>
             <param name="outQuadrature">Массив, содержащий ТОЛЬКО валидные значения индикатора.</param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Преобразование Хилберта - Фазовые компоненты — это технический индикатор, который разлагает ценовые данные на их
             фазовые и квадратурные компоненты. Эти компоненты представляют собой действительные и мнимые части сигнала соответственно
             и являются важными для анализа циклических свойств ценовых данных.
             <para>
             Функция обычно используется в анализе, ориентированном на циклы. Интеграция её с традиционными индикаторами тренда или импульса
             может подтвердить циклические сигналы.
             Функция полезна для идентификации циклов и их фаз в финансовых данных, что позволяет предсказывать развороты цен
             или их продолжение.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Сглаживание входных цен с помощью скользящего среднего с взвешиванием (WMA) для минимизации шума и стабилизации основных данных.
                 </description>
               </item>
               <item>
                 <description>
                   Применение преобразования Хилберта для определения фазовых (I) и квадратурных (Q) компонентов как для четных, так и для нечетных баров.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление действительных и мнимых частей фазы с использованием тригонометрических вычислений, применяемых к сглаженным данным.
                 </description>
               </item>
               <item>
                 <description>
                   Вывод угла фазы из действительных и мнимых частей с корректировкой на малые мнимые значения и любую задержку, вызванную WMA.
                 </description>
               </item>
               <item>
                 <description>
                   Выполнение окончательных корректировок угла фазы для обеспечения его соответствия ожидаемому диапазону значений.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   <i>Фазовая компонента</i> представляет собой позицию ценовых данных внутри цикла.
                 </description>
               </item>
               <item>
                 <description>
                   <i>Квадратурная компонента</i> отражает задержку или отставание сигнала относительно цикла.
                 </description>
               </item>
               <item>
                 <description>
                   При построении этих компонентов на полярном графике можно наблюдать циклическое поведение и идентифицировать фазовые сдвиги,
                   которые могут указывать на развороты тренда или переходы.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Функция наиболее эффективна в рынках с циклическим поведением и
                   может давать ненадежные результаты в трендовых или высоковолатильных рынках.
                 </description>
               </item>
               <item>
                 <description>
                   Точность компонентов зависит от качества сглаженных входных данных.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtPhasorLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.HtPhasor``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@)">HtPhasor</see>.
            </summary>
            <returns>Количество периодов, необходимых до вычисления первого выходного значения.</returns>
            <remarks>
            См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения значения "32"
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtPhasor``1(``0[],System.Range,``0[],``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtSine``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@)">
             <summary>
             Hilbert Transform - SineWave (Cycle Indicators) — Преобразование Хилберта - Синусоида (Индикаторы циклов)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outSine">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outSine[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outLeadSine">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outLeadSine[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outSine"/> и <paramref name="outLeadSine"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outSine"/> и <paramref name="outLeadSine"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Преобразование Хилберта - Синусоида идентифицирует и визуализирует циклическое поведение временных рядов данных, вычисляя
             синусоидальные и ведущие синусоидальные компоненты доминирующего цикла. Эти компоненты особенно полезны для анализа рыночных трендов
             и выявления потенциальных разворотов.
             <para>
             Эта функция может помочь в определении времени входа или выхода в циклических условиях. Подтверждение выявленных точек разворота с помощью трендового анализа,
             осцилляторов, таких как <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see>, или инструментов на основе циклов, таких как <see cref="M:TALib.Functions.HtDcPeriod``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">HT DC Period</see>, может повысить надежность.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Сглаживание входных цен с использованием взвешенного скользящего среднего (WMA) для уменьшения шума и обеспечения более плавных переходов.
                 </description>
               </item>
               <item>
                 <description>
                   Применение преобразования Хилберта для извлечения в фазе (I) и квадратурных (Q) компонентов для четных и нечетных баров, захватывающих свойства цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление доминирующей циклической фазы (DCPhase) с использованием компонентов I и Q. Это дает текущую позицию в цикле.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление синуса DCPhase (outSine) и ведущего синуса (outLeadSine), который является фазой, сдвинутой на 45 градусов.
                   Эти значения дают представление о циклических движениях и потенциальных точках разворота.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   <i>Синусоида</i> представляет текущую фазу доминирующего цикла.
                 </description>
               </item>
               <item>
                 <description>
                   <i>Ведущая синусоида</i> — это синусоида, сдвинутая вперед на 45 градусов, что помогает выявить ранние фазовые переходы.
                 </description>
               </item>
               <item>
                 <description>
                   Когда синусоида и ведущая синусоида пересекаются, это может указывать на потенциальный пик или впадину цикла,
                   сигнализируя о возможных разворотах рынка.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Функция наиболее эффективна в циклических рынках и может давать ненадежные сигналы в трендовых или высоковолатильных рынках.
                 </description>
               </item>
               <item>
                 <description>
                   Она чувствительна к шуму во входных данных; поэтому правильное сглаживание критически важно для точных результатов.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtSineLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.HtSine``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@)">HtSine</see>.
            </summary>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
            <remarks>
            Пропускается 31 входных данных для совместимости с Tradestation.
            См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения "32"
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtSine``1(``0[],System.Range,``0[],``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendline``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Hilbert Transform - Instantaneous Trendline (Overlap Studies) — Трансформация Гильберта - Мгновенная Трендовая Линия (Наложение)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Трансформация Гильберта - Мгновенная Трендовая Линия — это циклический индикатор, предназначенный для вычисления сглаженной трендовой линии с использованием
             трансформации Гильберта. Он устраняет шум и обеспечивает мгновенное представление тренда, комбинируя недавние сглаженные точки данных и
             экстраполируя на основе доминирующих циклов.
             <para>
             Функция может быть комбинирована с <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see> или <see cref="M:TALib.Functions.Macd``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">MACD</see>, чтобы убедиться, что изменения
             в трендовой линии соответствуют более широким условиям, снижая риск действий на ложные сигналы.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Сглаживание входных цен с использованием взвешенного скользящего среднего (WMA) для уменьшения шума и обеспечения более плавных переходов.
                 </description>
               </item>
               <item>
                 <description>
                   Применение трансформации Гильберта для извлечения фазовой (I) и квадратурной (Q) компонент, которые используются для определения свойств цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление доминирующего периода цикла с использованием компонент I и Q для динамической оценки длины цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисление трендовой линии с использованием взвешенного скользящего среднего сглаженных значений за доминирующий период цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Сохранение вычисленных значений трендовой линии в выходном массиве для визуализации или дальнейшего анализа.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   <i>Трендовая линия</i> предоставляет сглаженное представление рыночного тренда, фильтруя краткосрочную волатильность.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Функция наиболее эффективна в трендовых рынках и может быть менее эффективна в высоко цикличных или волатильных условиях.
                 </description>
               </item>
               <item>
                 <description>
                   Алгоритм предполагает наличие доминирующего цикла, поэтому рынки, лишенные циклического поведения, могут привести к вводящим в заблуждение трендам.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendlineLookback">
            <summary>
            Возвращает период lookback для <see cref="M:TALib.Functions.HtTrendline``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">HtTrendline</see>.
            </summary>
            <returns>Количество периодов, необходимых перед первым вычисленным значением.</returns>
            <remarks>
            Пропускается 31 входных данных для совместимости с Tradestation.
            См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения значения "32".
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendline``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendMode``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">
             <summary>
             Hilbert Transform - Trend vs Cycle Mode (Cycle Indicators) — Преобразование Хилберта - Режим тренда против цикла (Индикаторы циклов)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outInteger">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outInteger[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outInteger"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outInteger"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Преобразование Хилберта - Режим тренда против цикла — это индикатор цикла, который определяет, находится ли рынок в трендовом состоянии или в циклическом.
             Это достигается путем анализа доминирующих циклов в данных и сравнения их свойств с заранее определенными порогами.
             <para>
             Функция может помочь выбрать подходящие индикаторы для текущего режима рынка.
             В трендовом режиме могут быть предпочтительны инструменты следования за трендом; в циклическом режиме осцилляторы могут давать лучшие результаты.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Сгладить входные цены с помощью взвешенного скользящего среднего (WMA), чтобы уменьшить шум и выделить ключевые тренды.
                 </description>
               </item>
               <item>
                 <description>
                   Применить преобразование Хилберта для извлечения синфазной (I) и квадратурной (Q) компонент, которые используются для вычисления свойств доминирующего цикла.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить фазу доминирующего цикла (DC Phase) и сгладить фазу по последовательным итерациям.
                 </description>
               </item>
               <item>
                 <description>
                   Сгенерировать значения синуса и ведущего синуса с использованием сглаженной фазы DC для обнаружения циклического режима.
                 </description>
               </item>
               <item>
                 <description>
                   Проанализировать пересечения и отклонения компонент синусоидальной волны, чтобы определить, находится ли ряд в трендовом или циклическом режиме.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   <i>Трендовый режим (1)</i> указывает на устойчивое направленное движение рынка,
                   при котором циклы играют второстепенную роль.
                 </description>
               </item>
               <item>
                 <description>
                   <i>Циклический режим (0)</i> указывает на колебания рынка в пределах четко определенного диапазона,
                   при котором можно наблюдать доминирующие циклы.
                 </description>
               </item>
             </list>
            
             <b>Ограничения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Эта функция менее эффективна на шумных или волатильных рынках, где трудно обнаружить доминирующие циклы.
                 </description>
               </item>
               <item>
                 <description>
                   Ложные срабатывания могут возникать на рынках, переходящих между трендовым и циклическим поведением.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendModeLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.HtTrendMode``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@)">HtTrendMode</see>.
            </summary>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
            <remarks>
            Пропускается 31 входных данных для совместимости с Tradestation.
            См. <see cref="M:TALib.Functions.MamaLookback">MamaLookback</see> для объяснения "32"
            </remarks>
        </member>
        <member name="M:TALib.Functions.HtTrendMode``1(``0[],System.Range,System.Int32[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Add``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Векторное арифметическое сложение (Math Operators)
            </summary>
            <param name="inReal0">Первый набор входных значений.</param>
            <param name="inReal1">Второй набор входных значений.</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal0"/> и <paramref name="inReal1"/> (начальный и конечный индексы).  
            - Если не указан, обрабатываются все элементы входных массивов.
            </param>
            <param name="outReal">
            Массив, содержащий результаты поэлементного сложения.  
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).  
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal0[outRange.Start + i] + inReal1[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов во входных данных, для которых выполнены расчеты:  
            - <b>Start</b>: индекс первого элемента, для которого есть результат.  
            - <b>End</b>: индекс последнего элемента, для которого есть результат.  
            - Гарантируется: <c>End == inReal0.GetUpperBound(0)</c> при успешном расчете.
            </param>
            <typeparam name="T">
            Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>), 
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Код результата из <see cref="T:TALib.Core.RetCode"/>.  
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете.
            </returns>
            <remarks>
            Функция выполняет поэлементное сложение двух числовых рядов.  
            Применяется для создания составных индикаторов или модификации сигналов.  
            <para>
            Не генерирует торговые сигналы напрямую, но полезна для:  
            - Построения пользовательских индикаторов  
            - Комбинирования различных технических показателей  
            - Корректировки сигналов в торговых стратегиях
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.AddLookback">
            <summary>
            Возвращает период lookback для <see cref="M:TALib.Functions.Add``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)"/>.
            </summary>
            <returns>Всегда 0, так как для расчета не требуется исторических данных.</returns>
            <remarks>
            Lookback период = 0 означает, что первое валидное значение 
            доступно сразу для первого элемента входных данных.
            </remarks>
        </member>
        <member name="M:TALib.Functions.Add``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Реализация для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Div``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Arithmetic Division (Math Operators) — Векторное деление (Математические операторы)
            </summary>
            <param name="inReal0">Первый набор входных значений.</param>
            <param name="inReal1">Второй набор входных значений.</param>
            <param name="inRange">
            Диапазон индексов, определяющий часть данных, которая будет рассчитана в пределах входных наборов.
            </param>
            <param name="outReal">
            Набор для хранения рассчитанных значений.
            </param>
            <param name="outRange">
            Диапазон индексов, представляющий допустимые данные в пределах выходных наборов.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу расчета.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Функция делит один ряд данных на другой поэлементно, что полезно для создания соотношений или нормализации индикаторов.
            <para>
            Функция является строительным блоком для пользовательских индикаторов или сравнений на основе соотношений между инструментами.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.DivLookback">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Div``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Div</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Div``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sub``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Векторная арифметическая операция вычитания (Математические операторы)
            </summary>
            <param name="inReal0">Первый набор входных значений.</param>
            <param name="inReal1">Второй набор входных значений.</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal0"/> и <paramref name="inReal1"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal0"/> и <paramref name="inReal1"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal0[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal0"/> и <paramref name="inReal1"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal0.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal0"/> и <paramref name="inReal1"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее успешность или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            SUB вычитает один ряд данных из другого, что полезно для индикаторов спрэда или сравнительного анализа.
            <para>
            Функция является фундаментальной операцией в разработке пользовательских индикаторов.
            Интеграция её в стратегии парного трейдинга или межрыночного сравнения может дать инсайты относительной силы.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.SubLookback">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Sub``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Sub</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Sub``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sum``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Суммирование (MathOperators)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу расчета.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             SUM добавляет точки данных за определенный период, что полезно для накопительных расчетов или методов сглаживания.
             <para>
             Функция предоставляет скользящее суммирование, которое может использоваться в качестве базового значения для других расчетов или индикаторов.
             Его полезность заключается в создании пользовательских индикаторов, где накопленные данные информируют о тренде или импульсе.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Инициализировать сумму значений за первый период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Для каждого последующего периода обновлять сумму, добавляя новое значение и удаляя самое старое значение из суммы.
                 </description>
               </item>
               <item>
                 <description>
                   Сохранять рассчитанную сумму для каждого периода в выходном массиве.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.SumLookback(System.Int32)">
            <summary>
            Возвращает период предварительного просмотра для <see cref="M:TALib.Functions.Sum``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Sum</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого выходного значения, которое может быть рассчитано.</returns>
        </member>
        <member name="M:TALib.Functions.Sum``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Acos``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Векторный тригонометрический ACos (математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).  
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.  
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).  
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:  
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.  
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.  
            - Если данных недостаточно, возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>, 
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность расчета.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном выполнении, иначе код ошибки.
            </returns>
            <remarks>
            ACos применяет функцию арккосинуса к каждой точке данных в серии, 
            в основном для продвинутого математического моделирования, а не для стандартного технического анализа.
            <para>
            Функция редко используется отдельно для генерации сигналов. Может быть интегрирована
            в специализированные/проприетарные модели в сочетании с другими математическими преобразованиями.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.AcosLookback">
            <summary>
            Возвращает период lookback для <see cref="M:TALib.Functions.Acos``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Acos</see>.
            </summary>
            <returns>Всегда 0, так как исторические данные не требуются для расчета.</returns>
            <remarks>
            Lookback период = 0 означает, что первое валидное значение рассчитывается 
            непосредственно для первого элемента входных данных.
            </remarks>
        </member>
        <member name="M:TALib.Functions.Acos``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Asin``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric ASin (Math Transform) — Векторная тригонометрическая ASin (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            ASin применяет функцию арксинуса (обратного синуса) к каждой точке данных в ряду, в основном для продвинутого математического моделирования,
            а не для стандартного технического анализа.
            <para>
            Функция редко используется самостоятельно для генерации сигналов. Она может быть интегрирована в специализированные или проприетарные модели,
            в комбинации с другими математическими преобразованиями.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.AsinLookback">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Asin``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Asin</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Asin``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Atan``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric ATan (Math Transform) — Векторная тригонометрическая ATan (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу расчета.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            ATan применяет функцию арктангенса (обратного тангенса) к каждой точке данных в ряду, в основном для продвинутого математического моделирования,
            а не для стандартного технического анализа.
            <para>
            Функция редко используется самостоятельно для генерации сигналов. Она может быть интегрирована в специализированные или проприетарные модели,
            в комбинации с другими математическими преобразованиями.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.AtanLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Atan``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Atan</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Atan``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ceil``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Ceil (Math Transform) — Векторное округление вверх (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Округление каждой точки данных вверх до ближайшего целого числа, в основном для предварительной обработки данных.
            <para>
            Функция не предоставляет прямых торговых сигналов.
            Её полезность проявляется в разработке пользовательских индикаторов или в подготовке данных для сложных преобразований.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.CeilLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Ceil``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Ceil</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Ceil``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Cos``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Cos (Math Transform) — Косинус (Математическое преобразование)
            </summary>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <returns>
            Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Функция Cos применяет косинусную функцию к каждой точке данных в ряду, в основном для продвинутого математического моделирования,
            а не для стандартного технического анализа.
            <para>
            Функция редко используется самостоятельно для генерации сигналов. Она может быть интегрирована в специализированные или проприетарные модели,
            в сочетании с другими математическими преобразованиями.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.CosLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Cos``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Cos</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Cos``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Cosh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric Cosh (Math Transform) — Векторная Тригонометрическая Cosh (Математическое Преобразование)
            </summary>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <returns>
            Возвращает значение типа <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Cosh применяет гиперболическую косинусную функцию к каждой точке данных в ряду, в основном для продвинутого математического моделирования,
            а не для стандартного технического анализа.
            <para>
            Функция редко используется самостоятельно для генерации сигналов. Она может быть интегрирована в специализированные или проприетарные модели,
            в сочетании с другими математическими преобразованиями.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.CoshLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Cosh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Cosh</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Cosh``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Exp``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Exp (Math Transform) — Экспоненциальная функция (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Функция применяет экспоненциальную функцию к каждой точке данных в ряду,
            что иногда полезно в определенных моделях волатильности или пользовательских преобразованиях.
            <para>
            Функция обычно используется в сложных или модель-ориентированных стратегиях и редко применяется отдельно.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.ExpLookback">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Exp``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Exp</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Exp``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Floor``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Floor (Math Transform) — Векторное округление вниз (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Функция округляет каждую точку данных вниз до ближайшего целого числа, служа инструментом для предварительной обработки данных.
            <para>
            Функция полезна для разработки пользовательских индикаторов или нормализации данных, не предоставляя прямых торговых сигналов.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.FloorLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Floor``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Floor</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Floor``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ln``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Log Natural (Math Transform) — Векторный натуральный логарифм (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            LN применяет натуральный логарифм к данным, что полезно в статистических и волатильных анализах, а не для прямых торговых сигналов.
            <para>
            Функция может быть интегрирована в алгоритмические модели или расчеты логарифмических доходностей.
            Использование её вместе с другими статистическими мерами может уточнить оценки волатильности или доходности.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.LnLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Ln``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Ln</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Ln``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Log10``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Log10 (Math Transform) — Логарифм по основанию 10 (Математическое преобразование)
            </summary>
            <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            LOG10 применяет логарифмическое преобразование по основанию 10, аналогичное LN.
            <para>
            Функция может помочь в нормализации масштаба. Использование её в более широких количественных стратегиях может улучшить интерпретацию данных и их сопоставимость.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.Log10Lookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Log10``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Log10</see>.
            </summary>
            <returns>Всегда 0, так как для этого вычисления не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Log10``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Индекс среднего направленного движения (Индикаторы импульса)
             </summary>
             <param name="inHigh">Массив входных максимальных цен.</param>
             <param name="inLow">Массив входных минимальных цен.</param>
             <param name="inClose">Массив входных цен закрытия.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу расчета.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Индекс среднего направленного движения (ADX) — это индикатор импульса, который измеряет силу тренда
             без указания его направления. Он выводится из индикаторов направленного движения (+DI и -DI) и часто используется
             вместе с ними для оценки интенсивности рыночных трендов.
             <para>
             Функция может направлять выбор стратегий следования за трендом или основанных на диапазоне. Часто комбинируется с
             скользящими средними, осцилляторами или анализом уровней поддержки/сопротивления, чтобы избежать ложных сигналов в условиях
             низкой силы тренда.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Рассчитать значения Истинного диапазона (TR) и Направленного движения (DM):
             <code>
             TR = max(High - Low, abs(High - Previous Close), abs(Low - Previous Close))
             +DM = High - Previous High (если положительное и больше, чем Low - Previous Low, иначе 0)
             -DM = Previous Low - Low (если положительное и больше, чем High - Previous High, иначе 0)
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Сгладить значения TR, +DM и -DM за указанный период времени с использованием метода сглаживания Уайлдера.
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать индикаторы направленного движения (+DI и -DI):
             <code>
             +DI = 100 * (+DM / TR)
             -DI = 100 * (-DM / TR)
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать индекс направленного движения (DX):
                   <code>
                     DX = 100 * abs(+DI - -DI) / (+DI + -DI)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить ADX как сглаженное среднее значений DX за указанный период времени.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значения выше 25 указывают на сильный тренд, тогда как значения ниже 20 свидетельствуют о слабом или отсутствующем тренде.
                 </description>
               </item>
               <item>
                 <description>
                   Растущее значение указывает на усиление тренда, тогда как падающий ADX свидетельствует об ослабевающем тренде.
                 </description>
               </item>
               <item>
                 <description>
                   ADX не указывает направление тренда; он измеряет только его силу.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AdxLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Adx</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Adx``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Adxr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Average Directional Movement Index Rating (Momentum Indicators) — Средний индекс направленного движения (Индикаторы импульса)
             </summary>
             <param name="inHigh">Входные данные максимальных цен.</param>
             <param name="inLow">Входные данные минимальных цен.</param>
             <param name="inClose">Входные данные закрывающих цен.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Возвращает значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Средний индекс направленного движения (ADXR) — это сглаженная версия индикатора <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see>,
             используемая для измерения силы тренда. Он рассчитывается как среднее значение текущего значения ADX и значения ADX из предыдущего периода.
             ADXR дополнительно сглаживает ADX, делая его менее волатильным и более легким для интерпретации.
             <para>
             Функция часто используется в трендовых стратегиях для подтверждения силы тренда и фильтрации периодов низкой волатильности.
             Она менее чувствительна к краткосрочным колебаниям цен, что делает её особенно полезной для выявления долгосрочных трендов.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Рассчитать значения ADX за указанный период времени. Подробности расчета смотрите в функции ADX.
                 </description>
               </item>
               <item>
                 <description>
                   Для каждого значения ADX усреднить его с значением ADX из предыдущего периода (смещенного на период времени):
                   <code>
                     ADXR = (Текущее ADX + ADX из предыдущего периода) / 2
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значения выше 25 указывают на сильный тренд, тогда как значения ниже 20 свидетельствуют о слабом или отсутствующем тренде.
                 </description>
               </item>
               <item>
                 <description>
                   Рост значения указывает на усиление тренда, а снижение — на его ослабление.
                 </description>
               </item>
               <item>
                 <description>
                   Как и ADX, ADXR не указывает направление тренда, а измеряет его силу.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AdxrLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Adxr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Adxr</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Adxr``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Apo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
             <summary>
             Absolute Price Oscillator (Momentum Indicators) — Абсолютный ценовой осциллятор (Индикаторы импульса)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInFastPeriod">Период для расчета быстрой скользящей средней.</param>
             <param name="optInSlowPeriod">Период для расчета медленной скользящей средней.</param>
             <param name="optInMAType">Тип скользящей средней.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу расчета.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Абсолютный ценовой осциллятор — это индикатор импульса, который рассчитывает разницу между двумя скользящими средними входного ряда,
             обычно цены. Он используется для выявления трендов, импульса и потенциальных разворотов в ценовых движениях.
             <para>
             Функция может помочь выявить ранние признаки разворота тренда.
             Её можно комбинировать с объемными индикаторами или мерами волатильности для дополнительного подтверждения.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Рассчитать быструю скользящую среднюю входного ряда с использованием указанного быстрого периода и типа скользящей средней.
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать медленную скользящую среднюю входного ряда с использованием указанного медленного периода и типа скользящей средней.
                 </description>
               </item>
               <item>
                 <description>
                   Вычесть медленную скользящую среднюю из быстрой скользящей средней для вычисления APO:
                   <code>
                     APO = Fast MA - Slow MA
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительное значение указывает, что быстрая скользящая средняя выше медленной скользящей средней, что свидетельствует о восходящем импульсе.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательное значение указывает, что быстрая скользящая средняя ниже медленной скользящей средней, что свидетельствует о нисходящем импульсе.
                 </description>
               </item>
               <item>
                 <description>
                   Пересечения APO выше или ниже нулевой линии могут сигнализировать о потенциальных возможностях для покупки или продажи соответственно.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.ApoLookback(System.Int32,System.Int32,TALib.Core.MAType)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Apo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">Apo</see>.
            </summary>
            <param name="optInFastPeriod">Период для расчета быстрой скользящей средней.</param>
            <param name="optInSlowPeriod">Период для расчета медленной скользящей средней.</param>
            <param name="optInMAType">Тип скользящей средней.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Apo``1(``0[],System.Range,``0[],System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Aroon``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Aroon (Momentum Indicators) — Арун (Индикаторы импульса)
             </summary>
             <param name="inHigh">Входные данные для расчета индикатора (максимальные цены).</param>
             <param name="inLow">Входные данные для расчета индикатора (минимальные цены).</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/> и <paramref name="inLow"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/> и <paramref name="inLow"/>.
             </param>
             <param name="outAroonDown">Массив, содержащий ТОЛЬКО валидные значения индикатора Aroon Down.</param>
             <param name="outAroonUp">Массив, содержащий ТОЛЬКО валидные значения индикатора Aroon Up.</param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/> и <paramref name="inLow"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/> и <paramref name="inLow"/>, имеющего валидное значение в <paramref name="outAroonDown"/> и <paramref name="outAroonUp"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/> и <paramref name="inLow"/>, имеющего валидное значение в <paramref name="outAroonDown"/> и <paramref name="outAroonUp"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> или <paramref name="inLow"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Индикатор Aroon является импульсным индикатором, который измеряет время между максимумами и минимумами
             за указанный период времени для определения силы и направления тренда. Он состоит из двух компонентов:
             Aroon Up и Aroon Down, которые вычисляются отдельно.
             <para>
             Функция особенно полезна для выявления разворотов тренда и оценки его силы.
             Она также может использоваться в сочетании с другими техническими индикаторами для подтверждения торговых сигналов или фильтрации шума.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Определить максимальный максимум и минимальный минимум в указанном периоде времени.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить Aroon Up:
                   <code>
                     Aroon Up = 100 * (Период времени - Дни с момента максимального максимума) / Период времени
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить Aroon Down:
                   <code>
                     Aroon Down = 100 * (Период времени - Дни с момента минимального минимума) / Период времени
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значения близкие к 100 указывают на сильный восходящий тренд, тогда как значения близкие к 0 указывают на отсутствие недавних максимумов.
                 </description>
               </item>
               <item>
                 <description>
                   Значения близкие к 100 указывают на сильный нисходящий тренд, тогда как значения близкие к 0 указывают на отсутствие недавних минимумов.
                 </description>
               </item>
               <item>
                 <description>
                   Когда Aroon Up пересекает Aroon Down снизу вверх, это может сигнализировать о начале восходящего тренда.
                 </description>
               </item>
               <item>
                 <description>
                   Когда Aroon Down пересекает Aroon Up снизу вверх, это может сигнализировать о начале нисходящего тренда.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AroonLookback(System.Int32)">
            <summary>
            Возвращает период lookback для <see cref="M:TALib.Functions.Aroon``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">Aroon</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до вычисления первого допустимого значения.</returns>
        </member>
        <member name="M:TALib.Functions.Aroon``1(``0[],``0[],System.Range,``0[],``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.AroonOsc``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Aroon Oscillator (Momentum Indicators) — Осциллятор Арун (Индикаторы моментума)
             </summary>
             <param name="inHigh">Входные данные для расчета индикатора (максимальные цены)</param>
             <param name="inLow">Входные данные для расчета индикатора (минимальные цены)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/> и <paramref name="inLow"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/> и <paramref name="inLow"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c> и <c>inLow[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/> и <paramref name="inLow"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/> и <paramref name="inLow"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/> и <paramref name="inLow"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> и <paramref name="inLow"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Осциллятор Арун — это индикатор моментума, который измеряет разницу между индикаторами Aroon Up и Aroon Down,
             чтобы оценить силу и направление тренда.
             <para>
             Функция полезна для определения силы и направления тренда и может также сигнализировать о потенциальных разворотах
             при пересечении нулевой линии. Обычно используется в сочетании с другими техническими индикаторами
             для повышения надежности торговых сигналов.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Определить максимальную максимум и минимальную минимум в указанном периоде времени.
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать Aroon Up и Aroon Down:
             <code>
             Aroon Up = 100 * (Time Period - Дни с момента максимального максимума) / Time Period
             Aroon Down = 100 * (Time Period - Дни с момента минимального минимума) / Time Period
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать Осциллятор Арун как разницу между Aroon Up и Aroon Down:
                   <code>
                     Aroon Oscillator = Aroon Up - Aroon Down
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительные значения указывают на то, что Aroon Up сильнее, чем Aroon Down, что свидетельствует о восходящем тренде.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательные значения указывают на то, что Aroon Down сильнее, чем Aroon Up, что свидетельствует о нисходящем тренде.
                 </description>
               </item>
               <item>
                 <description>
                   Чем ближе значение к +100 или -100, тем сильнее соответствующий тренд.
                 </description>
               </item>
               <item>
                 <description>
                   Значения около 0 указывают на отсутствие четкого тренда или боковое движение рынка.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AroonOscLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.AroonOsc``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">AroonOsc</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.AroonOsc``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Bop``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Balance of Power (Momentum Indicators) — Баланс Сил (Индикаторы Импульса)
             </summary>
             <param name="inOpen">Входные данные для цен открытия.</param>
             <param name="inHigh">Входные данные для максимальных цен.</param>
             <param name="inLow">Входные данные для минимальных цен.</param>
             <param name="inClose">Входные данные для цен закрытия.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inOpen[outRange.Start + i]</c>, <c>inHigh[outRange.Start + i]</c>, <c>inLow[outRange.Start + i]</c> и <c>inClose[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inOpen.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inOpen"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Баланс Сил — это импульсный индикатор, который измеряет силу покупателей по сравнению с продавцами, сравнивая цену закрытия
             относительно цены открытия, нормализованной по торговому диапазону.
             <para>
             Функция может быть интегрирована с объемными или индикаторами ценового действия
             для обнаружения тонких изменений в настроениях и усиления сигналов от других инструментов.
             </para>
            
             <b>Формула расчета</b>:
             <code>
               BOP = (Close - Open) / (High - Low)
             </code>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительное значение указывает на доминирование покупателей, где цена закрытия выше цены открытия.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательное значение указывает на доминирование продавцов, где цена закрытия ниже цены открытия.
                 </description>
               </item>
               <item>
                 <description>
                   Значение близкое к нулю указывает на равновесие между покупателями и продавцами.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.BopLookback">
            <summary>
            Возвращает период задержки для <see cref="M:TALib.Functions.Bop``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Bop</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Bop``1(``0[],``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Cci``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Commodity Channel Index (Momentum Indicators) — Индекс Товарного Канала (Индикаторы Импульса)
             </summary>
             <param name="inHigh">Входные максимальные цены (High).</param>
             <param name="inLow">Входные минимальные цены (Low).</param>
             <param name="inClose">Входные цены закрытия (Close).</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c>, <c>inLow[outRange.Start + i]</c> и <c>inClose[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Индекс Товарного Канала (CCI) — это импульсный индикатор, который измеряет отклонение типичной цены
             (среднее значение максимальной, минимальной и закрывающей цены) от её скользящего среднего за указанный период времени.
             <para>
             Он часто используется для определения перекупленности и перепроданности, а также потенциальных разворотов тренда.
             Комбинирование его с трендовыми индикаторами может помочь избежать реакции против сильных существующих трендов.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить Типичную Цену (TP) для каждого периода:
                   <code>
                     TP = (High + Low + Close) / 3
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать скользящее среднее (MA) Типичной Цены за указанный период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить Среднее Отклонение Типичной Цены от скользящего среднего.
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать CCI:
                   <code>
                     CCI = (TP - MA) / (0.015 * Среднее Отклонение)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительное значение указывает на то, что цена выше скользящего среднего, что свидетельствует о бычьем импульсе.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательное значение указывает на то, что цена ниже скользящего среднего, что свидетельствует о медвежьем импульсе.
                 </description>
               </item>
               <item>
                 <description>
                   Значения выше +100 или ниже -100 обычно используются как пороги для перекупленности или перепроданности.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.CciLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Cci``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Cci</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Cci``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Cmo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Chande Momentum Oscillator (Momentum Indicators) — Осциллятор импульса Чанде (Индикаторы импульса)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Осциллятор импульса Чанде — это импульсный индикатор, который измеряет разницу между суммой приростов
             и убытков за указанный период времени, нормализованную по их общей сумме. Он похож на <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see>,
             но CMO учитывает как восходящий, так и нисходящий импульс одновременно в своем расчете.
             <para>
             Функция может обнаруживать сдвиги импульса. Использование ее вместе с инструментами подтверждения тренда может повысить точность при принятии решений по времени.
             Функция особенно полезна для выявления перекупленности и перепроданности и подтверждения трендов при использовании с другими индикаторами.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Рассчитать приросты и убытки между последовательными значениями цен за указанный период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить сумму приростов и сумму убытков.
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать CMO:
                   <code>
                     CMO = 100 * (Sum of Gains - Sum of Losses) / (Sum of Gains + Sum of Losses)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительное значение указывает на восходящий импульс, что свидетельствует о бычьих условиях.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательное значение указывает на нисходящий импульс, что свидетельствует о медвежьих условиях.
                 </description>
               </item>
               <item>
                 <description>
                   Значения близкие к нулю указывают на отсутствие значительного импульса в любом направлении.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.CmoLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Cmo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Cmo</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Cmo``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Dx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Directional Movement Index (Momentum Indicators) — Индекс направленного движения (Индикаторы импульса)
             </summary>
             <param name="inHigh">Входные максимальные цены (High).</param>
             <param name="inLow">Входные минимальные цены (Low).</param>
             <param name="inClose">Входные цены закрытия (Close).</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Индекс направленного движения (DX) — это технический индикатор, используемый для измерения силы тренда на рынке.
             <para>
             Он является частью расчета Индекса среднего направленного движения (<see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see>) и предоставляет основу для понимания
             положительного (<see cref="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">PlusDI</see>) и отрицательного (<see cref="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MinusDI</see>) направленного движения.
             Использование его вместе с индикаторами тренда или объема может улучшить идентификацию сильных направленных движений.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить Истинный диапазон (TR), Положительное направленное движение (+DM) и Отрицательное направленное движение (-DM).
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать сглаженные средние значения для +DM, -DM и TR за указанный период времени с использованием метода сглаживания Уайлдера.
                 </description>
               </item>
               <item>
                 <description>
                   Вывести +DI и -DI, используя сглаженные значения:
             <code>
             +DI = (+DM / TR) * 100
             -DI = (-DM / TR) * 100
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Рассчитать DX:
                   <code>
                     DX = ((|+DI - -DI|) / (+DI + -DI)) * 100
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Высокое значение (например, выше 25) обычно сигнализирует о сильном тренде.
                 </description>
               </item>
               <item>
                 <description>
                   Низкое значение (например, ниже 20) указывает на слабый или отсутствующий тренд.
                 </description>
               </item>
               <item>
                 <description>
                   DX сам по себе не указывает направление тренда; вместо этого +DI и -DI предоставляют информацию о направлении.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.DxLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Dx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Dx</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Dx``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)" -->
        <member name="M:TALib.Functions.RsiLookback(System.Int32)">
            <summary>
            Возвращает количество периодов для расчета начального значения RSI
            </summary>
            <param name="optInTimePeriod">Период расчета</param>
            <returns>Количество периодов для полного расчета</returns>
        </member>
        <member name="M:TALib.Functions.Stoch``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">
             <summary>
             Stochastic Oscillator (Momentum Indicators) — Стохастический осциллятор (индикаторы импульса)
             </summary>
             <param name="inHigh">Массив входных цен High (максимумы).</param>
             <param name="inLow">Массив входных цен Low (минимумы).</param>
             <param name="inClose">Массив входных цен Close (закрытия).</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             <para>- Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.</para>
             </param>
             <param name="outSlowK">
             Массив, содержащий ТОЛЬКО валидные значения линии %K (медленной).
             <para>- Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).</para>
             <para>- Каждый элемент <c>outSlowK[i]</c> соответствует <c>inClose[outRange.Start + i]</c>.</para>
             </param>
             <param name="outSlowD">
             Массив, содержащий ТОЛЬКО валидные значения линии %D (медленной).
             <para>- Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).</para>
             <para>- Каждый элемент <c>outSlowD[i]</c> соответствует <c>inClose[outRange.Start + i]</c>.</para>
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inClose"/>, для которых рассчитаны валидные значения:
             <para>- <b>Start</b>: индекс первого элемента <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outSlowK"/> и <paramref name="outSlowD"/>.</para>
             <para>- <b>End</b>: индекс последнего элемента <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outSlowK"/> и <paramref name="outSlowD"/>.</para>
             <para>- Гарантируется: <c>End == inClose.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.</para>
             <para>- Если данных недостаточно (например, длина <paramref name="inClose"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.</para>
             </param>
             <param name="optInFastKPeriod">Период для расчета быстрой линии %K.</param>
             <param name="optInSlowKPeriod">Период сглаживания для преобразования Fast %K в Slow %K.</param>
             <param name="optInSlowKMAType">Тип скользящей средней для сглаживания Fast %K.</param>
             <param name="optInSlowDPeriod">Период для расчета линии %D.</param>
             <param name="optInSlowDMAType">Тип скользящей средней для сглаживания Slow %K.</param>
             <typeparam name="T">Числовой тип данных (float/double).</typeparam>
             <returns>Код результата выполнения (<see cref="T:TALib.Core.RetCode"/>).</returns>
             <remarks>
             Стохастический осциллятор определяет положение цены закрытия относительно ценового диапазона за указанный период.
             Позволяет идентифицировать условия перекупленности/перепроданности и потенциальные развороты.
             <para>
             Индикатор состоит из двух линий:
             <c>%K</c> (сырой стохастик) и <c>%D</c> (сигнальная линия).
             Реализована "медленная" версия осциллятора с дополнительным сглаживанием.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет сырого значения %K:
                   <code>
                     %K = 100 * ((Close - LowestLow) / (HighestHigh - LowestLow))
                   </code>
                   где:
                   <list type="bullet">
                     <item><description><b>Close</b> - цена закрытия текущего периода</description></item>
                     <item><description><b>LowestLow</b> - минимальный минимум за период Fast %K</description></item>
                     <item><description><b>HighestHigh</b> - максимальный максимум за период Fast %K</description></item>
                   </list>
                 </description>
               </item>
               <item><description>Сглаживание %K за период Slow %K с использованием выбранного типа MA</description></item>
               <item><description>Сглаживание Slow %K за период Slow %D с использованием выбранного типа MA</description></item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item><description>Значения выше 80: зона перекупленности (потенциальный разворот вниз)</description></item>
               <item><description>Значения ниже 20: зона перепроданности (потенциальный рост)</description></item>
               <item><description>Пересечения %K и %D:
                 <list type="bullet">
                   <item><description>%K ↑ выше %D - возможный сигнал на покупку</description></item>
                   <item><description>%K ↓ ниже %D - возможный сигнал на продажу</description></item>
                 </list>
               </description></item>
               <item><description>Дивергенция между осциллятором и ценой указывает на ослабление тренда</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.StochLookback(System.Int32,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">
            <summary>
            Возвращает период "просмотра назад" для функции <see cref="M:TALib.Functions.Stoch``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)"/>.
            </summary>
            <returns>Количество периодов, необходимых для первого расчета.</returns>
        </member>
        <member name="M:TALib.Functions.StochF``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
             <summary>
             Fast Stochastic Oscillator (Momentum Indicator) — Быстрый стохастический осциллятор (индикатор импульса)
             </summary>
             <param name="inHigh">Массив входных цен High (максимумы).</param>
             <param name="inLow">Массив входных цен Low (минимумы).</param>
             <param name="inClose">Массив входных цен Close (закрытия).</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outFastK">
             Массив, содержащий ТОЛЬКО валидные значения линии %K (быстрой).
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outFastK[i]</c> соответствует <c>inClose[outRange.Start + i]</c>.
             </param>
             <param name="outFastD">
             Массив, содержащий ТОЛЬКО валидные значения линии %D (быстрой).
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outFastD[i]</c> соответствует <c>inClose[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outFastK"/> и <paramref name="outFastD"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outFastK"/> и <paramref name="outFastD"/>.
             - Гарантируется: <c>End == inClose.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inClose"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInFastKPeriod">Период для расчета быстрой линии %K (определяет длину окна для поиска HighestHigh/LowestLow).</param>
             <param name="optInFastDPeriod">Период сглаживания для преобразования Fast %K в Fast %D (определяет длину MA).</param>
             <param name="optInFastDMAType">Тип скользящей средней для сглаживания Fast %K.</param>
             <typeparam name="T">Числовой тип данных (float/double).</typeparam>
             <returns>Код результата выполнения (<see cref="T:TALib.Core.RetCode"/>).</returns>
             <remarks>
             Быстрый стохастический осциллятор оценивает положение цены закрытия относительно ценового диапазона за указанный период.
             В отличие от стандартного стохастического осциллятора, здесь используется минимальное сглаживание, что делает индикатор более чувствительным к изменениям цены.
             <para>
             <b>Особенности</b>:
             <list type="bullet">
               <item><description>Более высокая волатильность по сравнению с "медленной" версией</description></item>
               <item><description>Высокая чувствительность к краткосрочным колебаниям цены</description></item>
               <item><description>Потенциальные ложные сигналы в условиях высокой волатильности</description></item>
             </list>
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет сырого значения %K:
                   <code>
                     %K = 100 * ((Close - LowestLow) / (HighestHigh - LowestLow))
                   </code>
                   где:
                   <list type="bullet">
                     <item><description><b>Close</b> - цена закрытия текущего периода</description></item>
                     <item><description><b>LowestLow</b> - минимальный минимум за период FastKPeriod</description></item>
                     <item><description><b>HighestHigh</b> - максимальный максимум за период FastKPeriod</description></item>
                   </list>
                 </description>
               </item>
               <item><description>Сглаживание %K через скользящую среднюю с параметрами FastDPeriod и FastDMAType для получения %D</description></item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item><description>Значения выше 80: зона перекупленности (риск коррекции вниз)</description></item>
               <item><description>Значения ниже 20: зона перепроданности (потенциал роста)</description></item>
               <item><description>Пересечения %K и %D:
                 <list type="bullet">
                   <item><description>%K ↑ выше %D - возможный сигнал на покупку</description></item>
                   <item><description>%K ↓ ниже %D - возможный сигнал на продажу</description></item>
                 </list>
               </description></item>
               <item><description>Дивергенция между осциллятором и ценой указывает на ослабление тренда</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.StochFLookback(System.Int32,System.Int32,TALib.Core.MAType)">
            <summary>
            Возвращает период "просмотра назад" (firstValidValue) для функции <see cref="M:TALib.Functions.StochF``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)"/>.
            </summary>
            <remarks>
            Этот период показывает, сколько свечей требуется "пропустить" перед началом стабильного расчета индикатора.
            Первое валидное значение будет доступно начиная с индекса, равного этому значению.
            </remarks>
            <returns>Количество периодов, необходимых для первого валидного расчета.</returns>
        </member>
        <member name="M:TALib.Functions.Accbands``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Acceleration Bands (Overlap Studies) - Полосы ускорения
             </summary>
             <param name="inHigh">Массив входных максимальных цен.</param>
             <param name="inLow">Массив входных минимальных цен.</param>
             <param name="inClose">Массив входных цен закрытия.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных во входных массивах (начальный и конечный индексы).  
             - Если не указан, обрабатывается весь массив.
             </param>
             <param name="outRealUpperBand">Массив для хранения рассчитанных значений верхней полосы.</param>
             <param name="outRealMiddleBand">Массив для хранения рассчитанных значений средней полосы.</param>
             <param name="outRealLowerBand">Массив для хранения рассчитанных значений нижней полосы.</param>
             <param name="outRange">
             Диапазон индексов во входных данных, для которых рассчитаны валидные значения:  
             - Start: индекс первого элемента с валидным значением.  
             - End: индекс последнего элемента с валидным значением.
             </param>
             <param name="optInTimePeriod">Период расчета (по умолчанию 20).</param>
             <typeparam name="T">
             Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>), 
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Код результата из <see cref="T:TALib.Core.RetCode"/>.  
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете.
             </returns>
             <remarks>
             Полосы ускорения - индикатор волатильности для определения точек прорыва и силы тренда.  
             Полосы динамически адаптируются к движению цены.
             <para>
             Может использоваться совместно с индикаторами импульса или тренда, такими как 
             <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see> или <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see> для подтверждения сигналов.
             </para>
            
             <b>Шаги расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет верхней и нижней полос для каждого периода:
             <code>
             Upper Band = High * (1 + 4 * (High - Low) / (High + Low))  
             Lower Band = Low * (1 - 4 * (High - Low) / (High + Low))
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Расчет скользящей средней цены закрытия для средней полосы:
                   <code>
                     Middle Band = SMA(Close, Period)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Применение SMA для сглаживания верхней и нижней полос.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Прорыв цены выше верхней полосы указывает на сильный восходящий импульс.
                 </description>
               </item>
               <item>
                 <description>
                   Прорыв цены ниже нижней полосы указывает на сильный нисходящий импульс.
                 </description>
               </item>
               <item>
                 <description>
                   Средняя полоса служит базовой линией для определения тренда.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AccbandsLookback(System.Int32)">
            <summary>
            Возвращает период lookback для <see cref="M:TALib.Functions.Accbands``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32)"/>.
            </summary>
            <param name="optInTimePeriod">Период расчета.</param>
            <returns>
            Количество периодов, необходимых для расчета первого валидного значения.  
            Возвращает -1 при некорректном периоде.
            </returns>
        </member>
        <member name="M:TALib.Functions.Accbands``1(``0[],``0[],``0[],System.Range,``0[],``0[],``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Bbands``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)">
             <summary>
             Bollinger Bands (Overlap Studies) — Полосы Боллинджера (Скользящие исследования)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             <para>- Если не указан, обрабатывается весь массив <paramref name="inReal"/>.</para>
             </param>
             <param name="outRealUpperBand">
             Массив, содержащий ТОЛЬКО валидные значения верхней полосы.
             <para>- Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).</para>
             <para>- Каждый элемент <c>outRealUpperBand[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.</para>
             </param>
             <param name="outRealMiddleBand">
             Массив, содержащий ТОЛЬКО валидные значения средней полосы.
             <para>- Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).</para>
             <para>- Каждый элемент <c>outRealMiddleBand[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.</para>
             </param>
             <param name="outRealLowerBand">
             Массив, содержащий ТОЛЬКО валидные значения нижней полосы.
             <para>- Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).</para>
             <para>- Каждый элемент <c>outRealLowerBand[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.</para>
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             <para>- <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outRealUpperBand"/>, <paramref name="outRealMiddleBand"/> и <paramref name="outRealLowerBand"/>.</para>
             <para>- <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outRealUpperBand"/>, <paramref name="outRealMiddleBand"/> и <paramref name="outRealLowerBand"/>.</para>
             <para>- Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.</para>
             <para>- Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.</para>
             </param>
             <param name="optInTimePeriod">Период расчета.</param>
             <param name="optInNbDevUp">
             Множитель стандартного отклонения для верхней полосы:
             <list type="bullet">
               <item>
                 <description>
                   Большие значения увеличивают расстояние от средней полосы, снижая чувствительность к незначительным колебаниям цены.
                 </description>
               </item>
               <item>
                 <description>
                   Меньшие значения сокращают расстояние, повышая реакцию на изменения цены.
                 </description>
               </item>
             </list>
             <para>Значения выше 5 редко используются из-за потери практической значимости.</para>
             </param>
             <param name="optInNbDevDn">
             Множитель стандартного отклонения для нижней полосы:
             <list type="bullet">
               <item>
                 <description>
                   Большие значения увеличивают расстояние от средней полосы, снижая вероятность сигналов перепроданности.
                 </description>
               </item>
               <item>
                 <description>
                   Меньшие значения сокращают расстояние, повышая чувствительность к снижению цены.
                 </description>
               </item>
             </list>
             <para>Значения выше 5 редко используются из-за потери практической значимости.</para>
             </param>
             <param name="optInMAType">Тип скользящей средней.</param>
             <typeparam name="T">
             Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>),
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Код результата <see cref="T:TALib.Core.RetCode"/>.
             <para>Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете или код ошибки.</para>
             </returns>
             <remarks>
             Полосы Боллинджера — индикатор на основе волатильности, использующий скользящую среднюю и стандартные отклонения
             для формирования верхней и нижней "полос" вокруг цены. Полосы расширяются/сужаются при изменении волатильности,
             предоставляя информацию о потенциальных зонах перекупленности/перепроданности, периодах консолидации и прорывах.
             <para>Используется в торговых стратегиях для идентификации возможностей прорыва, продолжения тренда или разворота.</para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Средняя полоса = скользящая средняя входных значений за указанный период.
                 </description>
               </item>
               <item>
                 <description>
                   Стандартное отклонение входных значений за тот же период.
                 </description>
               </item>
               <item>
                 <description>
                   Верхняя/нижняя полосы рассчитываются по формулам:
             <code>
             Upper Band = Middle Band + (Standard Deviation * NbDevUp)
             Lower Band = Middle Band - (Standard Deviation * NbDevDn)
             </code>
                   <para>Где:</para>
                   <list type="bullet">
                     <item><description>Middle Band — средняя полоса (скользящая средняя)</description></item>
                     <item><description>Standard Deviation — стандартное отклонение</description></item>
                     <item><description>NbDevUp/NbDevDn — множители для верхней/нижней полос</description></item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Приближение цены к верхней полосе указывает на возможную перекупленность (риск коррекции).
                 </description>
               </item>
               <item>
                 <description>
                   Приближение цены к нижней полосе указывает на возможную перепроданность (потенциал роста).
                 </description>
               </item>
               <item>
                 <description>
                   Сужение полос (низкая волатильность) предшествует прорывам. Расширение (высокая волатильность) — подтверждает тренд.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.BbandsLookback(System.Int32,TALib.Core.MAType)">
            <summary>
            Возвращает lookback-период для <see cref="M:TALib.Functions.Bbands``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)"/>.
            </summary>
            <param name="optInTimePeriod">Период расчета.</param>
            <param name="optInMAType">Тип скользящей средней.</param>
            <returns>Количество периодов, необходимых для расчета первого валидного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Bbands``1(``0[],System.Range,``0[],``0[],``0[],System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Dema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Double Exponential Moving Average (Overlap Studies) — Двойная экспоненциальная скользящая средняя (Перекрывающиеся исследования)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Двойная экспоненциальная скользящая средняя (DEMA) предназначена для уменьшения запаздывания, связанного с традиционными скользящими средними,
             путем комбинирования одиночной экспоненциальной скользящей средней (EMA) с EMA этой EMA (обычно называемой EMA2).
             <para>
             Этот расчет приводит к более гладкой средней, которая быстрее реагирует на изменения цен, что делает её полезной для выявления
             трендов и разворотов с меньшим запаздыванием. Функция может улучшить отзывчивость в стратегиях следования за трендом.
             Комбинирование её с осцилляторами может помочь подтвердить сигналы и минимизировать задержки.
             </para>
            
             <b>Формула расчета</b>:
             <code>
               DEMA = 2 * EMA(t, period) - EMA(EMA(t, period), period)
             </code>
             </remarks>
        </member>
        <member name="M:TALib.Functions.DemaLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Dema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Dema</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Dema``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Exponential Moving Average (Overlap Studies) — Экспоненциальное скользящее среднее (Наложение)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Экспоненциальное скользящее среднее (EMA) — это тип скользящего среднего, который придает больший вес недавним данным,
             что делает его более чувствительным к новой информации по сравнению с простым скользящим средним (SMA).
             <para>
             Функция часто используется в техническом анализе для выявления трендов и генерации торговых сигналов.
             Она особенно полезна для отслеживания краткосрочных движений цен или импульса на финансовых рынках.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить начальное SMA (простое скользящее среднее) за указанный период времени, чтобы использовать его в качестве первого значения EMA.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить сглаживающий коэффициент:
                   <code>
                     Сглаживающий коэффициент (k) = 2 / (Период времени + 1)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Обновить EMA для последующих периодов с использованием формулы:
                   <code>
                     EMA = (Текущая цена - Предыдущее EMA) * k + Предыдущее EMA
                   </code>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.EmaLookback(System.Int32)">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Ema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Ema</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Ema``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Kama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Kaufman Adaptive Moving Average (Overlap Studies) — Адаптивное скользящее среднее Кауфмана (Перекрывающиеся исследования)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Адаптивное скользящее среднее Кауфмана (KAMA) разработано для адаптации к волатильности рынка.
             Оно корректирует свой сглаживающий коэффициент на основе коэффициента эффективности, который рассчитывается как отношение направления цены
             к волатильности цены за указанный период. Это позволяет KAMA быть более чувствительным во время трендов и менее чувствительным во время консолидаций.
             <para>
             Функция может уменьшить шум и ложные сигналы. Благодаря своей адаптивной природе, KAMA может уменьшить запаздывание по сравнению с традиционными скользящими средними,
             что делает его полезным для выявления трендов и избегания ложных сигналов.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет коэффициента эффективности (ER):
                   <code>
                     ER = Abs(PriceChange) / Sum(Abs(PriceChange over TimePeriod))
                   </code>
                   где PriceChange — разница между текущей ценой и ценой `TimePeriod` назад.
                 </description>
               </item>
               <item>
                 <description>
                   Расчет сглаживающей константы (SC):
                   <code>
                     SC = [ER * (FastestSC - SlowestSC) + SlowestSC]^2
                   </code>
                   где FastestSC и SlowestSC — константы, обычно выводимые из короткого и длинного сглаживающих периодов соответственно.
                 </description>
               </item>
               <item>
                 <description>
                   Применение SC для расчета KAMA:
                   <code>
                     KAMA = PreviousKAMA + SC * (Price - PreviousKAMA)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Рост KAMA указывает на восходящий тренд, особенно когда он быстро реагирует на увеличение цен.
                 </description>
               </item>
               <item>
                 <description>
                   Плоский или снижающийся KAMA указывает на консолидацию или нисходящий тренд.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.KamaLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Kama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Kama</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Kama``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,TALib.Core.MAType)">
             <summary>
             Скользящее среднее (Overlap Studies)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <param name="optInMAType">Тип скользящего среднего.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Функция скользящего среднего вычисляет среднее значение серии данных за указанный период,
             сглаживая колебания для выявления трендов. Поддерживаются различные типы скользящих средних,
             что позволяет использовать разные методы сглаживания в зависимости от аналитических потребностей.
            
             <para>
             <b>Поддерживаемые типы скользящих средних</b> через <paramref name="optInMAType"/>:
             <list type="bullet">
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Sma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">SMA</see> (Простое скользящее среднее): Простое среднее значений за указанный период.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Ema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">EMA</see> (Экспоненциальное скользящее среднее): Присваивает больший вес последним данным,
                   что делает его более чувствительным к изменениям.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Wma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">WMA</see> (Взвешенное скользящее среднее): Взвешивает данные линейно,
                   присваивая наибольший вес последним данным.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Dema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">DEMA</see> (Двойное экспоненциальное скользящее среднее): Композитное среднее,
                   предназначенное для уменьшения запаздывания.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Tema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">TEMA</see> (Тройное экспоненциальное скользящее среднее): Еще больше уменьшает запаздывание,
                   сглаживая данные.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Trima``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">TRIMA</see> (Треугольное скользящее среднее): Метод двойного сглаживания.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Kama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">KAMA</see> (Адаптивное скользящее среднее Кауфмана): Корректирует чувствительность на основе волатильности рынка.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.Mama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Double,System.Double)">MAMA</see> (Адаптивное скользящее среднее MESA): Адаптируется к рыночным циклам.
                 </description>
               </item>
               <item>
                 <description>
                   <see cref="M:TALib.Functions.T3``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Double)">T3</see> (Скользящее среднее T3): Гладкое скользящее среднее с уменьшенным запаздыванием.
                 </description>
               </item>
             </list>
             </para>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Восходящее скользящее среднее указывает на восходящий тренд.
                 </description>
               </item>
               <item>
                 <description>
                   Нисходящее скользящее среднее указывает на нисходящий тренд.
                 </description>
               </item>
               <item>
                 <description>
                   Пересечения различных скользящих средних (например, краткосрочных и долгосрочных) могут указывать на сигналы покупки или продажи.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MaLookback(System.Int32,TALib.Core.MAType)">
            <summary>
            Возвращает период предварительного просмотра для <see cref="M:TALib.Functions.Ma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,TALib.Core.MAType)">Ma</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <param name="optInMAType">Тип скользящего среднего.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Ma``1(``0[],System.Range,``0[],System.Range@,System.Int32,TALib.Core.MAType)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Simple Moving Average (Overlap Studies) — Простое скользящее среднее (Наложенные исследования)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период расчета (количество периодов).</param>
             <typeparam name="T">
             Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>),
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Код возврата <see cref="T:TALib.Core.RetCode"/>, указывающий на успешность операции.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете, иначе — код ошибки.
             </returns>
             <remarks>
             Простое скользящее среднее сглаживает данные за указанный период путем расчета
             несредневзвешенного среднего значений внутри периода.
             <para>
             SMA является запаздывающим индикатором, реагирующим на прошлые изменения цены.
             Благодаря простоте и эффективности, он широко используется для определения уровней
             поддержки/сопротивления, подтверждения трендов и генерации торговых сигналов.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Определение периода расчета (<paramref name="optInTimePeriod"/>).
                 </description>
               </item>
               <item>
                 <description>
                   Суммирование значений внутри периода:
                   <code>
                     Sum = data[t] + data[t-1] + ... + data[t-(optInTimePeriod-1)]
                   </code>
                   где Sum — сумма значений за период.
                 </description>
               </item>
               <item>
                 <description>
                   Расчет среднего значения:
                   <code>
                     SMA = Sum / optInTimePeriod
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Перемещение окна расчета на один период вперед и повторение операций для следующих значений.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Рост SMA указывает на восходящий тренд (цены растут в течение периода).
                 </description>
               </item>
               <item>
                 <description>
                   Падение SMA указывает на нисходящий тренд (цены снижаются в течение периода).
                 </description>
               </item>
               <item>
                 <description>
                   Пересечение SMA (например, краткосрочного SMA с долгосрочным) часто используется как сигнал к покупке/продаже.
                 </description>
               </item>
               <item>
                 <description>
                   SMA может выступать в роли уровней поддержки или сопротивления.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.SmaLookback(System.Int32)">
            <summary>
            Возвращает lookback-период для <see cref="M:TALib.Functions.Sma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Sma</see>.
            </summary>
            <param name="optInTimePeriod">Период расчета.</param>
            <returns>Количество периодов, необходимых для расчета первого валидного значения.</returns>
            <remarks>
            Lookback-период равен (optInTimePeriod - 1), так как первое значение SMA требует
            данных за optInTimePeriod предыдущих баров.
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sma``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.AvgPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Average Price (Price Transform) — Средняя Цена (Трансформация Цен)
            </summary>
            <param name="inOpen">Входные данные открытия цен.</param>
            <param name="inHigh">Входные данные максимальных цен.</param>
            <param name="inLow">Входные данные минимальных цен.</param>
            <param name="inClose">Входные данные закрытия цен.</param>
            <param name="inRange">
            Диапазон обрабатываемых данных в <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/>, <paramref name="inClose"/> (начальный и конечный индексы).
            - Если не указан, обрабатывается весь массив <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/>, <paramref name="inClose"/>.
            </param>
            <param name="outReal">
            Массив, содержащий ТОЛЬКО валидные значения индикатора.
            - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
            - Каждый элемент <c>outReal[i]</c> соответствует <c>inOpen[outRange.Start + i]</c>, <c>inHigh[outRange.Start + i]</c>, <c>inLow[outRange.Start + i]</c>, <c>inClose[outRange.Start + i]</c>.
            </param>
            <param name="outRange">
            Диапазон индексов в <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/>, <paramref name="inClose"/>, для которых рассчитаны валидные значения:
            - <b>Start</b>: индекс первого элемента <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/>, <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - <b>End</b>: индекс последнего элемента <paramref name="inOpen"/>, <paramref name="inHigh"/>, <paramref name="inLow"/>, <paramref name="inClose"/>, имеющего валидное значение в <paramref name="outReal"/>.
            - Гарантируется: <c>End == inOpen.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
            - Если данных недостаточно (например, длина <paramref name="inOpen"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
            </param>
            <typeparam name="T">
            Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
            реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
            </typeparam>
            <returns>
            Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
            Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
            </returns>
            <remarks>
            Средняя Цена — это простая трансформация цен, которая вычисляет среднее арифметическое значение цен открытия,
            максимума, минимума и закрытия для заданного диапазона.
            Она предоставляет единственное значение, представляющее среднюю цену ценной бумаги за период.
            <para>
            Эта функция полезна для сглаживания колебаний цен и получения представительной цены для анализа.
            Комбинирование её с скользящими средними или осцилляторами может помочь в выявлении зон справедливой стоимости или возможностей для возврата к среднему.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.AvgPriceLookback">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.AvgPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">AvgPrice</see>.
            </summary>
            <returns>Всегда 0, так как для этого расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.AvgPrice``1(``0[],``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Beta``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Beta (Statistic Functions) — Бета (Статистические функции)
             </summary>
             <param name="inReal0">Входные данные для расчета индикатора (цены акций или других финансовых инструментов)</param>
             <param name="inReal1">Входные данные для расчета индикатора (цены бенчмарка или рыночные цены)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal0"/> и <paramref name="inReal1"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal0"/> и <paramref name="inReal1"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal0[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal0"/> и <paramref name="inReal1"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal0.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal0"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Функция Бета рассчитывает коэффициент бета, который измеряет волатильность акции относительно бенчмарка.
             <para>
             Функция может использоваться в управлении рисками и выборе портфеля.
             Комбинирование с другими мерами риска или методами нормализации может оптимизировать выбор инструментов.
             </para>
            
             <b>Формула расчета</b>:
             <code>
               Beta = Covariance(Security, Market) / Variance(Market)
             </code>
             где ковариация и дисперсия выводятся из процентных изменений цен акции и рынка
             за указанный период времени.
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значение 1 указывает, что цена акции движется вместе с рынком.
                 </description>
               </item>
               <item>
                 <description>
                   Значение больше 1 предполагает, что акция более волатильна, чем рынок.
                 </description>
               </item>
               <item>
                 <description>
                   Значение меньше 1 указывает, что акция менее волатильна, чем рынок.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.BetaLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.Beta``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Beta</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Beta``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Correl``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Pearson's Correlation Coefficient (r) (Statistic Functions) — Коэффициент корреляции Пирсона (r) (Статистические функции)
             </summary>
             <param name="inReal0">Входные данные для первого набора данных.</param>
             <param name="inReal1">Входные данные для второго набора данных.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal0"/> и <paramref name="inReal1"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal0"/> и <paramref name="inReal1"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal0[outRange.Start + i]</c> и <c>inReal1[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal0"/> и <paramref name="inReal1"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal0"/> и <paramref name="inReal1"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal0.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal0"/> или <paramref name="inReal1"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Коэффициент корреляции Пирсона (r) измеряет линейную корреляцию между двумя наборами данных, показывая, насколько они движутся вместе.
             <para>
             Функция полезна для построения портфеля, парных стратегий и диверсификации.
             Её можно использовать вместе с индикаторами относительной силы или спрэда для выявления разрушений или схождений корреляции.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить суммы двух наборов данных и их соответствующих квадратов за указанный период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить произведение наборов данных для каждого периода времени и рассчитать сумму этих произведений.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить ковариацию и стандартные отклонения наборов данных.
                 </description>
               </item>
               <item>
                 <description>
                   Разделить ковариацию на произведение стандартных отклонений для вычисления коэффициента корреляции.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Значение -1 указывает на идеальную отрицательную линейную зависимость.
                 </description>
               </item>
               <item>
                 <description>
                   Значение 0 указывает на отсутствие линейной зависимости.
                 </description>
               </item>
               <item>
                 <description>
                   Значение 1 указывает на идеальную положительную линейную зависимость.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.CorrelLookback(System.Int32)">
            <summary>
            Возвращает период предварительного просмотра для <see cref="M:TALib.Functions.Correl``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Correl</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Correl``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.LinearReg``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Линейная регрессия (статистические функции)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период расчета (по умолчанию 14).</param>
             <typeparam name="T">
             Числовой тип данных (например, float или double),
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Код возврата <see cref="T:TALib.Core.RetCode"/>:
             <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете,
             иначе код ошибки.
             </returns>
             <remarks>
             Функция строит линию тренда методом наименьших квадратов для заданного периода.
             <para>
             Результат показывает прогнозируемое значение на последнем баре периода,
             что помогает определить направление тренда.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычисление сумм:
                   - X (индексы элементов),
                   - X² (квадраты индексов),
                   - X*Y (произведение индексов и значений).
                 </description>
               </item>
               <item>
                 <description>
                   Расчет наклона (m) по формуле:
                   <code>m = (nΣXY - ΣXΣY) / (nΣX² - (ΣX)²)</code>
                 </description>
               </item>
               <item>
                 <description>
                   Расчет смещения (b) по формуле:
                   <code>b = (ΣY - mΣX) / n</code>
                 </description>
               </item>
               <item>
                 <description>
                   Прогноз на последнем баре периода:
                   <code>y = b + m*(n-1)</code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация</b>:
             <list type="bullet">
               <item><description>Рост значений → восходящий тренд</description></item>
               <item><description>Падение значений → нисходящий тренд</description></item>
               <item><description>Горизонтальная линия → отсутствие тренда</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegLookback(System.Int32)">
            <summary>
            Возвращает период lookback для функции <see cref="M:TALib.Functions.LinearReg``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)"/>.
            </summary>
            <param name="optInTimePeriod">Период расчета.</param>
            <returns>Количество периодов, необходимых для первого расчета.</returns>
        </member>
        <member name="M:TALib.Functions.LinearReg``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegAngle``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Linear Regression Angle (Statistic Functions) — Угол линейной регрессии (Статистические функции)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Угол линейной регрессии вычисляет угол наклона линии наилучшего соответствия для серии точек данных
             за указанный период. Он предоставляет перспективу направления и величины тренда в градусах,
             помогая определить силу и направление тренда.
             <para>
             Функция может указывать на силу тренда. Подтверждение с помощью ADX или индикаторов объема может уменьшить неправильное толкование
             незначительных изменений цены как значимых движений.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить суммы значений X (индексные позиции), квадратов X и произведения X и Y (входные значения)
                   за указанный период.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить наклон (m) линии регрессии по формуле:
                   <code>
                     m = (n * Sum(XY) - Sum(X) * Sum(Y)) / (n * Sum(X^2) - (Sum(X))^2)
                   </code>
                   где n — период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Преобразовать наклон (m) в угол в градусах с использованием функции арктангенса:
                   <code>
                     Angle = RadiansToDegrees(Atan(m))
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительный угол указывает на восходящий тренд, где цены растут.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательный угол указывает на нисходящий тренд, где цены падают.
                 </description>
               </item>
               <item>
                 <description>
                   Угол, близкий к нулю, указывает на отсутствие значительного тренда в данных за период.
                 </description>
               </item>
               <item>
                 <description>
                   Чем больше абсолютное значение угла, тем сильнее тренд.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegAngleLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.LinearRegAngle``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">LinearRegAngle</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.LinearRegAngle``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegIntercept``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Linear Regression Intercept (Statistic Functions) — Линейная регрессия пересечения (Статистические функции)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Линейная регрессия пересечения вычисляет точку пересечения y линии наилучшего подхода для серии данных
             за указанный период. Она представляет собой значение линии, когда значение x (индекс) равно нулю, предоставляя информацию
             о базовом уровне данных.
             <para>
             Её можно использовать в сочетании с наклоном для лучшего понимания характеристик тренда данных.
             Функция может служить ориентиром. Комбинирование её с другими метриками на основе регрессии или ценовыми паттернами
             может дать более глубокие инсайты.
             </para>
            
             <b>Шаги вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить суммы значений X (индексные позиции), квадратов X и произведения X и Y (входные значения)
                   за указанный период.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить наклон (m) линии регрессии по формуле:
                   <code>
                     m = (n * Sum(XY) - Sum(X) * Sum(Y)) / (n * Sum(X^2) - (Sum(X))^2)
                   </code>
                   где n — период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить точку пересечения y (b) линии регрессии по формуле:
                   <code>
                     b = (Sum(Y) - m * Sum(X)) / n
                   </code>
                   где Sum(Y) — сумма входных значений, а Sum(X) — сумма индексных позиций.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значения</b>:
             <list type="bullet">
               <item>
                 <description>
                   Точка пересечения y указывает на начальный уровень серии данных относительно линии регрессии.
                 </description>
               </item>
               <item>
                 <description>
                   Изменения в точке пересечения со временем могут сигнализировать о сдвигах в базовом уровне данных.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegInterceptLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.LinearRegIntercept``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">LinearRegIntercept</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.LinearRegIntercept``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegSlope``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Linear Regression Slope (Statistic Functions) — Линейная регрессия наклона (Статистические функции)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее успешность или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Линейная регрессия наклона вычисляет наклон линии наилучшего соответствия для серии данных
             за указанный период. Она предоставляет информацию о направлении и скорости изменения тренда в данных.
             <para>
             Функция может указывать на восходящий или нисходящий тренд. Подтверждение значений наклона с помощью индикаторов тренда или импульса может
             уменьшить вероятность неправильного прочтения рыночных условий.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычисляются суммы значений X (индексные позиции), квадратов X и произведения X и Y (входные значения)
                   за указанный период.
                 </description>
               </item>
               <item>
                 <description>
                   Вычисляется наклон (m) линии регрессии по формуле:
                   <code>
                     m = (n * Sum(XY) - Sum(X) * Sum(Y)) / (n * Sum(X^2) - (Sum(X))^2)
                   </code>
                   где n — это период времени.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Положительный наклон указывает на восходящий тренд, где значения увеличиваются со временем.
                 </description>
               </item>
               <item>
                 <description>
                   Отрицательный наклон указывает на нисходящий тренд, где значения уменьшаются со временем.
                 </description>
               </item>
               <item>
                 <description>
                   Величина наклона отражает силу тренда.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.LinearRegSlopeLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.LinearRegSlope``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">LinearRegSlope</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до первого вычисленного значения.</returns>
        </member>
        <member name="M:TALib.Functions.LinearRegSlope``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Macd``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">
             <summary>
             Moving Average Convergence/Divergence (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMACD">A span to store the calculated MACD line values.</param>
             <param name="outMACDSignal">A span to store the calculated Signal line values.</param>
             <param name="outMACDHist">A span to store the calculated MACD Histogram values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
             <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
             <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Moving Average Convergence Divergence is a trend-following momentum indicator that shows the relationship
             between two moving averages of a security's price. It compares two EMAs to detect momentum shifts and potential trend reversals.
             <para>
             The function is widely recognized and often used with <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Rsi</see> or <see cref="M:TALib.Functions.Bbands``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)">Bollinger Bands</see>
             for signal confirmation. Observing divergences and crossovers can aid in recognizing market changes.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the fast exponential moving average (EMA) of the input values over the specified `FastPeriod`.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the slow EMA of the input values over the specified `SlowPeriod`.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the MACD line as the difference between the fast EMA and the slow EMA:
                   <code>
                     MACD = EMA(FastPeriod) - EMA(SlowPeriod)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the Signal line as the EMA of the MACD line over the specified `SignalPeriod`.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the MACD Histogram as the difference between the MACD line and the Signal line:
                   <code>
                     MACDHist = MACD - Signal
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A positive MACD line indicates upward momentum, while a negative MACD line indicates downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   The Signal line is used to identify potential buy or sell signals, with a bullish crossover occurring when the MACD line
                   crosses above the Signal line, and a bearish crossover occurring when the MACD line crosses below the Signal line.
                 </description>
               </item>
               <item>
                 <description>
                   The MACD Histogram reflects the strength of momentum, with larger bars indicating stronger momentum in the direction
                   of the MACD line and shrinking bars signaling a potential reversal or weakening momentum.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MacdLookback(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Macd``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">Macd</see>.
            </summary>
            <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
            <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
            <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Macd``1(``0[],System.Range,``0[],``0[],``0[],System.Range@,System.Int32,System.Int32,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MacdExt``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">
             <summary>
             MACD with controllable MA type (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMACD">A span to store the calculated MACD line values.</param>
             <param name="outMACDSignal">A span to store the calculated Signal line values.</param>
             <param name="outMACDHist">A span to store the calculated MACD Histogram values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
             <param name="optInFastMAType">The moving average type used for the fast moving average.</param>
             <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
             <param name="optInSlowMAType">The moving average type used for the slow moving average.</param>
             <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
             <param name="optInSignalMAType">The moving average type used for the Signal line.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Extended Moving Average Convergence Divergence allows customization of moving average types
             for calculating the MACD line, Signal line, and MACD Histogram. This flexibility allows the indicator to be adapted
             to various market conditions and analysis strategies.
             <para>
             The choice of moving average types (e.g., SMA, EMA) for the fast, slow, and Signal lines affects the indicator's sensitivity.
             The function can be adapted to suit certain assets or volatility conditions. Combining it with volume indicators
             may strengthen momentum-based signals.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the slow moving average using the specified <paramref name="optInSlowPeriod"/> and <paramref name="optInSlowMAType"/>.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the fast moving average using the specified <paramref name="optInFastPeriod"/> and <paramref name="optInFastMAType"/>.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the MACD line as the difference between the fast and slow moving averages:
                   <code>
                     MACD = FastMA - SlowMA
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Signal line as the moving average of the MACD line using the specified <paramref name="optInSignalPeriod"/>
                   and <paramref name="optInSignalMAType"/>..
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the MACD Histogram as the difference between the MACD line and the Signal line:
                   <code>
                     MACDHist = MACD - Signal
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A positive MACD line indicates upward momentum, while a negative MACD line indicates downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   The Signal line is used to identify potential buy or sell signals, with a bullish crossover occurring when the MACD line
                   crosses above the Signal line, and a bearish crossover occurring when the MACD line crosses below the Signal line.
                 </description>
               </item>
               <item>
                 <description>
                   The MACD Histogram reflects the strength of momentum, with larger bars indicating stronger momentum in the direction
                   of the MACD line and shrinking bars signaling a potential reversal or weakening momentum.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MacdExtLookback(System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MacdExt``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">MacdExt</see>.
            </summary>
            <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
            <param name="optInFastMAType">The moving average type used for the fast moving average.</param>
            <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
            <param name="optInSlowMAType">The moving average type used for the slow moving average.</param>
            <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
            <param name="optInSignalMAType">The moving average type used for the Signal line.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MacdExt``1(``0[],System.Range,``0[],``0[],``0[],System.Range@,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MacdFix``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Moving Average Convergence/Divergence Fix 12/26 (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMACD">A span to store the calculated MACD line values.</param>
             <param name="outMACDSignal">A span to store the calculated Signal line values.</param>
             <param name="outMACDHist">A span to store the calculated MACD Histogram values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Moving Average Convergence Divergence Fix is a simplified version of the MACD indicator
             with fixed fast and slow periods (12 and 26, respectively). This version focuses on the Signal line
             calculation with a configurable period for flexibility in identifying momentum shifts.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the fast exponential moving average (EMA) of the input values with a period of 12.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the slow EMA of the input values with a period of 26.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the MACD line as the difference between the fast EMA and the slow EMA:
                   <code>
                     MACD = EMA(FastPeriod) - EMA(SlowPeriod)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Signal line as the EMA of the MACD line using the specified `optInSignalPeriod`.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the MACD Histogram as the difference between the MACD line and the Signal line:
                   <code>
                     MACDHist = MACD - Signal
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A positive MACD line indicates upward momentum, while a negative MACD line indicates downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   The Signal line is used to identify potential buy or sell signals, with a bullish crossover occurring when the MACD line
                   crosses above the Signal line, and a bearish crossover occurring when the MACD line crosses below the Signal line.
                 </description>
               </item>
               <item>
                 <description>
                   The MACD Histogram reflects the strength of momentum, with larger bars indicating stronger momentum in the direction
                   of the MACD line and shrinking bars signaling a potential reversal or weakening momentum.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MacdFixLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MacdFix``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32)">MacdFix</see>.
            </summary>
            <param name="optInSignalPeriod">The time period for calculating the Signal line.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MacdFix``1(``0[],System.Range,``0[],``0[],``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Double,System.Double)">
             <summary>
             MESA Adaptive Moving Average (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMAMA">A span to store the calculated MAMA values.</param>
             <param name="outFAMA">A span to store the calculated FAMA values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInFastLimit">
             The upper bound for the adaptive factor:
             <list type="bullet">
               <item>
                 <description>
                   Higher values increase responsiveness to price changes, making the MAMA more sensitive to market trends.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values reduce responsiveness, smoothing the MAMA output.
                 </description>
               </item>
             </list>
             <para>
             Valid range is <c>0.01..0.99</c>. Values near 0.99 maximize sensitivity, while values closer to 0.01 prioritize smoothing.
             </para>
             </param>
             <param name="optInSlowLimit">
             The lower bound for the adaptive factor:
             <list type="bullet">
               <item>
                 <description>
                   Higher values reduce the minimum responsiveness, adding stability to the MAMA during market consolidations.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values increase minimum responsiveness, allowing faster reactions to market changes.
                 </description>
               </item>
             </list>
             <para>
             Valid range is <c>0.01..0.99</c>. Values near 0.99 reduce noise, while values closer to 0.01 allow greater flexibility.
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             MESA Adaptive Moving Average dynamically adjusts its responsiveness based on the dominant cycle in the market.
             It utilizes a combination of the Hilbert Transform and alpha factor to adapt to changing market conditions, producing
             two outputs: the MAMA and the FAMA (Following Adaptive Moving Average).
             <para>
             The function's adaptability allows it to respond quickly during trends while minimizing false signals in consolidation phases.
             Combining it with <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see>, <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see>,
             or volatility measures like <see cref="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ATR</see> can refine strategy development.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Apply a Weighted Moving Average (WMA) to smooth the input prices and reduce noise.
                 </description>
               </item>
               <item>
                 <description>
                   Perform the Hilbert Transform on the smoothed data to extract in-phase (I) and quadrature (Q) components.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the dominant cycle period based on phase differences between successive in-phase and quadrature values.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the alpha factor using the fast and slow limits, which determines the level of responsiveness:
                   <code>
                     Alpha = FastLimit / DeltaPhase
                   </code>
                   Adjustments are made to ensure alpha stays within the range defined by the slow and fast limits.
                 </description>
               </item>
               <item>
                 <description>
                   Update the MAMA using the current price and alpha, and calculate the FAMA as a smoothed version of the MAMA.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   <i>MAMA</i> tracks the dominant trend with reduced lag.
                 </description>
               </item>
               <item>
                 <description>
                   <i>FAMA</i> provides additional smoothing, acting as a signal line to identify changes in trend.
                 </description>
               </item>
               <item>
                 <description>
                   Crossovers between MAMA and FAMA can indicate potential buy or sell signals: a bullish crossover occurs when MAMA crosses
                   above FAMA, and a bearish crossover occurs when MAMA crosses below FAMA.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MamaLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Mama``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Double,System.Double)">Mama</see>.
            </summary>
            <returns>The number of periods required before the first output value can be calculated.</returns>
            <remarks>
            The fix lookback is 32 and is established as follows:
            <list type="bullet">
            <item><description>12 price bar to be compatible with the implementation of TradeStation found in John Ehlers book.</description></item>
            <item><description>6 price bars for the <c>Detrender</c></description></item>
            <item><description>6 price bars for <c>Q1</c></description></item>
            <item><description>3 price bars for <c>JI</c></description></item>
            <item><description>3 price bars for <c>JQ</c></description></item>
            <item><description>1 price bar for <c>Re</c>/<c>Im</c></description></item>
            <item><description>1 price bar for the <c>Delta Phase</c></description></item>
            <item><description>————————</description></item>
            <item><description>32 total</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mama``1(``0[],System.Range,``0[],``0[],System.Range@,System.Double,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mavp``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
             <summary>
             Moving average with variable period (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inPeriods">A span of period values that determine the moving average period for each data point.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInMinPeriod">The minimum allowable time period for calculating the moving average.</param>
             <param name="optInMaxPeriod">The maximum allowable time period for calculating the moving average.</param>
             <param name="optInMAType">The moving average type.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Moving Average Variable Period function calculates a moving average where the period can vary for each data point.
             This flexibility allows the moving average to adapt dynamically to changing conditions,
             such as volatility or custom-defined periods.
             <para>
             The function is particularly useful in scenarios where adaptability to market conditions or specific custom periods is required.
             The choice of <paramref name="optInMAType"/> and the range defined by <paramref name="optInMinPeriod"/> and
             <paramref name="optInMaxPeriod"/> significantly affects the behavior and responsiveness of the MAVP.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Truncate the input periods <paramref name="inPeriods"/> to fit within the specified MinPeriod and MaxPeriod.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the moving average for each data point using the corresponding period from the truncated series.
                   The moving average type <paramref name="optInMAType"/> determines the calculation method (e.g., SMA, EMA, etc.).
                 </description>
               </item>
               <item>
                 <description>
                   Populate the output with the calculated moving average values for each period.
                   Avoid redundant calculations by reusing results for identical periods in the input.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The MAVP output reflects a dynamically adjusted moving average based on the input period values.
                 </description>
               </item>
               <item>
                 <description>
                   Shorter periods result in more reactive and sensitive outputs, while longer periods provide smoother and less sensitive outputs.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MavpLookback(System.Int32,TALib.Core.MAType)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Mavp``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">Mavp</see>.
            </summary>
            <param name="optInMaxPeriod">The maximum allowable time period for calculating the moving average.</param>
            <param name="optInMAType">The moving average type.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Mavp``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Max``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Highest value over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Highest Value function calculates the maximum value over a specified period.
             This function is commonly used in technical analysis to identify the highest point in a time series over a rolling window.
             <para>
             It is often used to determine peaks or resistance levels in a dataset.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Initialize the maximum value and its index for the first period in the specified range.
                 </description>
               </item>
               <item>
                 <description>
                   Iterate through the data points in the given range:
                   - Update the maximum value if the current data point is higher than the previously recorded maximum.
                   - If the maximum value falls outside the rolling window, recompute the maximum value for the new window.
                 </description>
               </item>
               <item>
                 <description>
                   Store the calculated maximum value for each data point in the output.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output represents the highest value within the rolling window defined by <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MaxLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Max``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Max</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Max``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MaxIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Int32)">
             <summary>
             Index of highest value over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outInteger">A span to store the calculated index values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Highest Value Index function identifies the index of the highest value over a specified period.
             This function is useful for pinpointing the exact position of peaks in a time series within a rolling window.
             <para>
             The <see cref="M:TALib.Functions.Max``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Max</see> function can be used to get the highest value itself rather than its index.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Initialize the highest value and its index for the first period in the specified range.
                 </description>
               </item>
               <item>
                 <description>
                   For each subsequent period, update the highest value and its index by comparing the new value with the current highest.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output represents the index of the highest value within the rolling window defined by <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MaxIndexLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MaxIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Int32)">MaxIndex</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MaxIndex``1(``0[],System.Range,System.Int32[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MedPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Median Price (Price Transform)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Median Price function calculates the average of the high and low prices for each data point in the range.
             This function provides a simple representation of the midpoint of the price bar for the given time period.
             <para>
             It is commonly used as a base value for further calculations or as a smoothing input to reduce price noise.
             The function operates on a single price bar (current high and low) rather than aggregating values over multiple bars.
             For calculations involving multiple price bars (e.g., highest high and lowest low), consider using
             <see cref="M:TALib.Functions.MidPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MidPrice</see> function instead.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each data point within the specified range, sum the <paramref name="inHigh"/> and <paramref name="inLow"/> prices.
                 </description>
               </item>
               <item>
                 <description>
                   Divide the sum by 2 to compute the median price for the current price bar.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output provides a simplified view of the central value for each price bar.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MedPriceLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MedPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">MedPrice</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.MedPrice``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mfi``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Money Flow Index (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inVolume">A span of input volumes.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Money Flow Index is a momentum oscillator that measures the strength of money flowing in and out of a security over a given period.
             It combines price and volume data to indicate buying or selling pressure,
             and is often used to identify overbought or oversold conditions.
             <para>
             MFI is similar to the <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see> but incorporates volume data.
             Combining it with trend indicators or <see cref="M:TALib.Functions.Obv``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">OBV</see> may strengthen interpretive power.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the typical price for each bar:
                   <code>
                     Typical Price = (High + Low + Close) / 3
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the raw money flow for each bar:
                   <code>
                     Money Flow = Typical Price * Volume
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine if the raw money flow is positive or negative by comparing the current typical price to the previous typical price:
                   - If the current typical price is greater than the previous typical price, it contributes to the positive money flow.
                   - If it is less, it contributes to the negative money flow.
                 </description>
               </item>
               <item>
                 <description>
                   Accumulate the positive and negative money flows over the specified time period (`optInTimePeriod`).
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Money Flow Index using the formula:
                   <code>
                     MFI = 100 * (Positive Money Flow / (Positive Money Flow + Negative Money Flow))
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value above 80 indicates overbought conditions, suggesting a potential trend reversal or pullback.
                 </description>
               </item>
               <item>
                 <description>
                   A value below 20 indicates oversold conditions, suggesting a potential trend reversal or bounce.
                 </description>
               </item>
               <item>
                 <description>
                   Divergences between the MFI and price movement can signal potential trend reversals.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MfiLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Mfi``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Mfi</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Mfi``1(``0[],``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MidPoint``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             MidPoint over period (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             The MidPoint indicator calculates the average of the highest and lowest values in a specified period,
             providing a central value of a data series.
             It can be used to identify trends or confirm the strength of support or resistance levels in price movements.
             <para>
             Integrating it with <see cref="M:TALib.Functions.Bbands``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)">Bollinger Bands</see> or oscillators can identify
             opportunities as price oscillates around equilibrium. See <see cref="M:TALib.Functions.MidPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MidPrice</see> for a related function
             when working withit high and low price series.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine the highest value over the specified period:
                   <code>
                     Highest Value = Max(inReal[i] for i in range(trailingIdx, today))
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the lowest value over the specified period:
                   <code>
                     Lowest Value = Min(inReal[i] for i in range(trailingIdx, today))
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the midpoint using the formula:
                   <code>
                     MidPoint = (Highest Value + Lowest Value) / 2
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output acts as a smoothed line that filters out short-term fluctuations and highlights
                   the central tendency of a data series.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MidPointLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MidPoint``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MidPoint</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MidPoint``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MidPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Midpoint Price over period (Overlap Studies)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             The MidPrice indicator calculates the average of the highest high and lowest low over a specified period.
             It can be used to identify trends or to validate support and resistance levels.
             <para>
             It is commonly used in technical analysis to identify central price levels within a range of data. Pairing it with oscillators
             may highlight when price returns to or strays from its midpoint. When applied with a period of 1,
             this function is equivalent to <see cref="M:TALib.Functions.MedPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">MedPrice</see>.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine the highest high over the specified period:
                   <code>
                     Highest High = Max(inHigh[i] for i in range(trailingIdx, today))
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the lowest low over the specified period:
                   <code>
                     Lowest Low = Min(inLow[i] for i in range(trailingIdx, today))
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the midpoint price using the formula:
                   <code>
                     MidPrice = (Highest High + Lowest Low) / 2
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output reflects the central tendency of the price range over the period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MidPriceLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MidPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MidPrice</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MidPrice``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Min``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Lowest value over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Lowest Value function calculates the lowest value in a data series over a specified period.
             It is commonly used in technical analysis to identify the minimum value in a rolling window of data.
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the range of indices to calculate the lowest value, based on the input range and time period:
                   <code>
                     Range = [trailingIdx, today]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the lowest value in the range:
                   <code>
                     Lowest = Min(inReal[i] for i in Range)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output represents the lowest value within the rolling window defined by <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Min``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Min</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Min``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MinIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Int32)">
             <summary>
             Index of lowest value over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outInteger">A span to store the calculated index values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             MinIndex function calculates the index of the lowest value in a data series over a specified period.
             It is typically used in technical analysis to determine where the minimum value occurred in a rolling window of data.
             <para>
             The <see cref="M:TALib.Functions.Min``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Min</see> function can be used to get the lowest value itself rather than its index.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the range of indices to evaluate for the lowest value based on the input range and time period:
                   <code>
                     Range = [trailingIdx, today]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the index of the lowest value in the range:
                   <code>
                     LowestIndex = IndexOfMin(inReal[i] for i in Range)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The output provides the relative index within the input range where the lowest value was found during each time window.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinIndexLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MinIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{System.Int32},System.Range@,System.Int32)">MinIndex</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MinIndex``1(``0[],System.Range,System.Int32[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MinMax``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Lowest and highest values over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMin">A span to store the calculated lowest values.</param>
             <param name="outMax">A span to store the calculated highest values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             MinMax function calculates the lowest and highest values in a data series over a specified period.
             It is commonly used in technical analysis to identify extremes within a rolling window of data.
             <para>
             Use <see cref="M:TALib.Functions.Min``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Min</see> or <see cref="M:TALib.Functions.Max``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Max</see> functions if only the lowest or highest value is required,
             respectively. Use <see cref="M:TALib.Functions.MinMaxIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">MinMaxIndex</see> if the indices of the lowest and highest values are required
             instead of the values themselves.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the range of indices to evaluate for the lowest and highest values based on the input range and time period:
                   <code>
                     Range = [trailingIdx, today]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the lowest and highest values in the range:
             <code>
             Lowest = Min(inReal[i] for i in Range)
             Highest = Max(inReal[i] for i in Range)
             </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The <paramref name="outMin"/> contains the lowest values for each rolling time period.
                 </description>
               </item>
               <item>
                 <description>
                   The <paramref name="outMax"/> contains the highest values for each rolling time period.
                 </description>
               </item>
               <item>
                 <description>
                   These values can be used to track support and resistance levels or identify trends.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinMaxLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MinMax``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">MinMax</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MinMax``1(``0[],System.Range,``0[],``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MinMaxIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Indexes of lowest and highest values over a specified period (Math Operators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outMinIdx">A span to store the calculated lowest index values.</param>
             <param name="outMaxIdx">A span to store the calculated highest index values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             MinMaxIndex function calculates the indices of the lowest and highest values in a data series over a specified period.
             It is commonly used in technical analysis to locate extremes within a rolling window of data.
             <para>
             Use <see cref="M:TALib.Functions.Min``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Min</see> or <see cref="M:TALib.Functions.Max``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Max</see> functions if only the lowest or highest value is required.
             Use <see cref="M:TALib.Functions.MinMax``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">MinMax</see> if the actual lowest and highest values are required instead of their indices.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the range of indices to evaluate for the lowest and highest values based on the input range and time period:
                   <code>
                     Range = [trailingIdx, today]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Determine the indices of the lowest and highest values in the range:
             <code>
             LowestIndex = IndexOfMin(inReal[i] for i in Range)
             HighestIndex = IndexOfMax(inReal[i] for i in Range)
             </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   The <paramref name="outMaxIdx"/> contains the indices of the lowest values for each rolling time period.
                 </description>
               </item>
               <item>
                 <description>
                   The <paramref name="outMaxIdx"/> contains the indices of the highest values for each rolling time period.
                 </description>
               </item>
               <item>
                 <description>
                   These indices can be used to identify turning points or significant levels in a data series.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinMaxIndexLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MinMaxIndex``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32)">MinMaxIndex</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MinMaxIndex``1(``0[],System.Range,``0[],``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Minus Directional Indicator (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Minus Directional Indicator is a momentum indicator that measures the strength of downward price movement over a given time period.
             It is part of the Directional Movement System.
             <para>
             The function can be integrated with <see cref="M:TALib.Functions.MinusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">-DM</see> and <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see> to provide
             a complete picture of trend strength. Confirming signals with additional indicators reduces the risk of misinterpretation.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the one-period negative directional movement (-DM1) as the difference between the current low and the previous low,
                   provided it exceeds the positive directional movement (+DM1).
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the True Range (TR), which measures the total price movement for a period, accounting for gaps and volatility.
                 </description>
               </item>
               <item>
                 <description>
                   Apply Wilder's smoothing technique to sum the -DM and TR over the specified time period using the formula:
             <code>
             Today's -DM(n) = Previous -DM(n) - (Previous -DM(n) / TimePeriod) + Today's -DM1
             Today's TR(n)  = Previous TR(n)  - (Previous TR(n) / TimePeriod) + Today's TR
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Minus Directional Indicator (-DI) as:
                   <code>
                     -DI = (-DM(n) / TR(n)) * 100
                   </code>
                   where -DM(n) and TR(n) are the smoothed values over the time period.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A rising value indicates increasing downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A falling value suggests decreasing downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Comparing <c>+DI</c> (from <see cref="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">+DI</see>) and <c>-DI</c> can help identify trend direction:
                   if <c>+DI > -DI</c>, the trend is upward, and if <c>-DI > +DI</c>, the trend is downward.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinusDILookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MinusDI</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MinusDI``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.MinusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Minus Directional Movement (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Minus Directional Movement function calculates the negative directional movement over a specified time period.
             It is a component of the directional movement system and is used to assess the strength of downward price movement.
             <para>
             Used in conjunction with <see cref="M:TALib.Functions.PlusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">+DM</see> to calculate the Directional Indicators
             (<see cref="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">+DI</see>, <see cref="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">-DI</see>) or the Average Directional Index (<see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see>).
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the negative directional movement for each period as <c>-DM = Previous Low - Current Low</c> if this value is
                   greater than the corresponding positive movement (<c>Current High - Previous High</c>) and is positive;
                   otherwise, <c>-DM = 0</c>.
                 </description>
               </item>
               <item>
                 <description>
                   If the time period is greater than 1, sum the <c>-DM</c> values for the specified period,
                   and smooth the results using Wilder's smoothing method:
                   <code>
                     -DM(n) = (Previous -DM(n-1) * (Period - 1) + Current -DM) / Period
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A high output value indicates strong downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                    A low or zero output value suggests weak or no downward momentum.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MinusDMLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.MinusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">MinusDM</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.MinusDM``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mom``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Momentum (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Momentum function calculates the rate of change in price over a specified period, highlighting
             the speed at which prices are moving in a given direction. It is a simple but effective momentum indicator.
             <para>
             The Momentum function is not normalized, meaning its values are absolute differences and not percentage changes.
             Due to its non-normalized nature, it should be avoided when comparing different time series with varying price levels.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the value from the specified number of periods ago:
                   <code>
                     previousValue = data[today - optInTimePeriod]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the difference between the current value and the value from <paramref name="optInTimePeriod"/> ago:
                   <code>
                     Momentum = data[today] - previousValue
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A positive value indicates upward momentum, implying prices are rising.
                 </description>
               </item>
               <item>
                 <description>
                   A negative value indicates downward momentum, suggesting prices are falling.
                 </description>
               </item>
               <item>
                 <description>
                   A value close to zero indicates little or no price movement over the specified period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.MomLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Mom``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Mom</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Mom``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Mult``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Arithmetic Multiplication (Math Operators)
            </summary>
            <param name="inReal0">The first span of input values.</param>
            <param name="inReal1">The second span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            MULT multiplies two data series, potentially useful for scaling indicators or creating composite signals.
            <para>
            The function does not generate signals alone but is valuable in custom indicator construction.
            Integrating it into ratio or spread calculations can yield nuanced insights.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.MultLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Mult``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Mult</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Mult``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Natr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Normalized Average True Range (Volatility Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Normalized Average True Range function calculates the normalized measure of price volatility, expressed
             as a percentage of the closing price. It enhances the traditional <see cref="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ATR</see> by making it
             comparable across different time periods or securities with varying price ranges.
             <para>
             The function is particularly useful for long-term analysis where price ranges vary drastically or for
             cross-market or cross-security volatility comparisons.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the True Range (TR), which is the greatest of the following:
                   <code>
                     TR = max[(High - Low), abs(High - Previous Close), abs(Low - Previous Close)]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   For the first ATR value, calculate the simple average of the TR values over the specified time period.
                 </description>
               </item>
               <item>
                 <description>
                   For subsequent ATR values, use Wilder's smoothing method:
                   <code>
                     ATR = [(Previous ATR * (Time Period - 1)) + Current TR] / Time Period
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Normalize the ATR by dividing it by the corresponding closing price and multiplying by 100:
                   <code>
                     NATR = (ATR / Close) * 100
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A high value indicates increased price volatility relative to the security's price.
                 </description>
               </item>
               <item>
                 <description>
                   A low value suggests lower price volatility.
                 </description>
               </item>
               <item>
                 <description>
                   Values are expressed as a percentage, enabling cross-security or cross-market comparisons.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.NatrLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Natr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Natr</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Natr``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Obv``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             On Balance Volume (Volume Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inVolume">A span of input volume values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             On Balance Volume function calculates a cumulative measure of volume flow to determine whether volume is flowing into
             or out of a security. This indicator is based on the principle that volume precedes price movements.
             <para>
             The function is most useful when combined with other indicators or patterns, as it alone does not provide
             definitive buy or sell signals. Large spikes in volume can cause significant changes in OBV, potentially distorting trends.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Initialize the `OBV` with the first volume value in the range.
                 </description>
               </item>
               <item>
                 <description>
                   For each subsequent price value:
                   <list type="bullet">
                     <item>
                       <description>
                         If today's price is greater than yesterday's price, add today's volume to the `OBV`.
                       </description>
                     </item>
                     <item>
                       <description>
                         If today's price is less than yesterday's price, subtract today's volume from the `OBV`.
                       </description>
                     </item>
                     <item>
                       <description>
                         If today's price equals yesterday's price, the `OBV` remains unchanged.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Store the cumulative `OBV` value for each period in the output span.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A rising value indicates positive volume flow, suggesting accumulation.
                 </description>
               </item>
               <item>
                 <description>
                   A falling value indicates negative volume flow, suggesting distribution.
                 </description>
               </item>
               <item>
                 <description>
                   Sideways movement in the OBV suggests no significant accumulation or distribution.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.ObvLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Obv``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Obv</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Obv``1(``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Plus Directional Indicator (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Plus Directional Indicator is a momentum indicator that measures the strength of upward price movement over a given time period.
             It is part of the Directional Movement System.
             <para>
             The function can be integrated with <see cref="M:TALib.Functions.PlusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">+DM</see> and <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see> to provide
             a complete picture of trend strength. Confirming signals with additional indicators reduces the risk of misinterpretation.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the one-period positive directional movement (+DM1) as the difference between the current high and the previous high,
                   provided it exceeds the negative directional movement (-DM1).
                 </description>
               </item>
               <item>
                 <description>
                   Compute the True Range (TR), which represents the total price movement for a period, accounting for gaps and volatility.
                 </description>
               </item>
               <item>
                 <description>
                   Apply Wilder's smoothing method to calculate the smoothed +DM and TR over the specified time period:
             <code>
             Today's +DM(n) = Previous +DM(n) - (Previous +DM(n) / TimePeriod) + Today's +DM1
             Today's TR(n)  = Previous TR(n)  - (Previous TR(n) / TimePeriod) + Today's TR
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Plus Directional Indicator (+DI) as the ratio of smoothed +DM to smoothed TR, expressed as a percentage:
                   <code>
                     +DI = (+DM(n) / TR(n)) * 100
                   </code>
                   where <c>+DM(n)</c> and <c>TR(n)</c> are the smoothed values over the specified time period.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A rising value indicates strong upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   A falling value suggests weakening upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Comparing <c>-DI</c> (from <see cref="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">-DI</see>) and <c>-DI</c> can help identify trend direction:
                   if <c>+DI > -DI</c>, the trend is upward, and if <c>-DI > +DI</c>, the trend is downward.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.PlusDILookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">PlusDI</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.PlusDI``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.PlusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Plus Directional Movement (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Plus Directional Movement function calculates the positive directional movement over a specified time period.
             It is a component of the directional movement system and is used to assess the strength of upward price movement.
             <para>
             Used in conjunction with <see cref="M:TALib.Functions.MinusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">-DM</see> to calculate the Directional Indicators
             (<see cref="M:TALib.Functions.PlusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">+DI</see>, <see cref="M:TALib.Functions.MinusDI``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">-DI</see>) or the Average Directional Index (<see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see>).
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the positive directional movement for each period as <c>+DM = Current High - Previous High</c> if this value is
                   greater than the corresponding positive movement (<c>Previous Low - Current Low</c>) and is positive;
                   otherwise, <c>+DM = 0</c>.
                 </description>
               </item>
               <item>
                 <description>
                   If the time period is greater than 1, sum the <c>+DM</c> values for the specified period,
                   and smooth the results using Wilder's smoothing method:
                   <code>
                     +DM(n) = (Previous +DM(n-1) * (Period - 1) + Current +DM) / Period
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A high output value indicates strong upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                    A low or zero output value suggests weak or no upward momentum.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.PlusDMLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.PlusDM``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">PlusDM</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.PlusDM``1(``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ppo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
             <summary>
             Percentage Price Oscillator (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
             <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
             <param name="optInMAType">The moving average type.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Percentage Price Oscillator function calculates the percentage difference between two moving averages
             of a time series. It is commonly used to identify trends and assess the strength of price movements.
             <para>
             The function is similar to <see cref="M:TALib.Functions.Macd``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">MACD</see> but expressed as a percentage,
             facilitating easier comparisons across instruments. The function aids in normalized momentum analysis.
             Combining it with <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see>, <see cref="M:TALib.Functions.Bbands``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Double,System.Double,TALib.Core.MAType)">Bollinger Bands</see>,
             or volume indicators can improve the robustness of momentum-based signals.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the fast and slow moving averages (MA) using the specified
                   <paramref name="optInFastPeriod"/> and <paramref name="optInSlowPeriod"/>:
             <code>
             FastMA = MA(data, optInFastPeriod, optInMAType)
             SlowMA = MA(data, optInSlowPeriod, optInMAType)
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the PPO as the percentage difference between the fast and slow moving averages:
                   <code>
                     PPO = ((FastMA - SlowMA) / SlowMA) * 100
                   </code>
                   where <c>FastMA</c> and <c>SlowMA</c> are the moving averages calculated in the previous step.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Positive values indicate that the fast moving average is above the slow moving average, signaling upward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values indicate that the fast moving average is below the slow moving average, signaling downward momentum.
                 </description>
               </item>
               <item>
                 <description>
                   Higher absolute values suggest stronger momentum in the corresponding direction.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.PpoLookback(System.Int32,System.Int32,TALib.Core.MAType)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Ppo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">Ppo</see>.
            </summary>
            <param name="optInFastPeriod">The time period for calculating the fast moving average.</param>
            <param name="optInSlowPeriod">The time period for calculating the slow moving average.</param>
            <param name="optInMAType">The moving average type.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Ppo``1(``0[],System.Range,``0[],System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Roc``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Rate of change : ((price/prevPrice)-1)*100 (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rate of Change function calculates the percentage change of a time series value over a specified period.
             It is commonly used as a momentum indicator to evaluate the rate at which price values are changing over time.
             <para>
             The function is similar to <see cref="M:TALib.Functions.Ppo``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType)">PPO</see>, but the PPO compares moving averages rather than raw values.
             Used to identify overbought or oversold conditions in financial markets.
             Verifying ROC findings with trend or volatility tools can reduce the likelihood of short-lived fluctuations.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the value from <paramref name="optInTimePeriod"/> periods ago:
                   <code>
                     PreviousValue = data[currentIndex - optInTimePeriod]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the ROC as the percentage change from the previous value to the current value:
                   <code>
                     ROC = ((CurrentValue / PreviousValue) - 1) * 100
                   </code>
                   where <c>CurrentValue</c> is the value at the current position, and <c>PreviousValue</c>
                   is the value <paramref name="optInTimePeriod"/> steps earlier.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Positive values indicate upward momentum, suggesting prices are rising compared to the past.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values indicate downward momentum, suggesting prices are falling compared to the past.
                 </description>
               </item>
               <item>
                 <description>
                   A value close to zero indicates little or no change in value over the specified period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.RocLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Roc``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Roc</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Roc``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.RocP``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Rate of change Percentage: (price-prevPrice)/prevPrice (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rate of Change Percentage is a momentum indicator that calculates the percentage change in value
             over a specified time period relative to its previous value. It helps identify the speed and magnitude
             of price changes, making it useful for detecting trend reversals or continuations.
             <para>
             Unlike the standard <see cref="M:TALib.Functions.Roc``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ROC</see>, which scales by 100, ROCP directly expresses the change as a fraction
             of the previous value. The function can be integrated with trend confirmation or oscillators to improve decision-making
             and mitigate false signals.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the value from <paramref name="optInTimePeriod"/> periods ago:
                   <code>
                     PreviousValue = data[currentIndex - optInTimePeriod]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the ROCP as the fractional change from the previous value to the current value:
                   <code>
                     ROCP = (CurrentValue - PreviousValue) / PreviousValue
                   </code>
                   where <c>CurrentValue</c> is the value at the current position, and <c>PreviousValue</c> is
                   the value <paramref name="optInTimePeriod"/> steps earlier.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Positive values indicate upward momentum, suggesting prices are rising relative to the past.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values indicate downward momentum, suggesting prices are falling relative to the past.
                 </description>
               </item>
               <item>
                 <description>
                   A value of zero indicates no change in value over the specified time period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.RocPLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.RocP``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RocP</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.RocP``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.RocR``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Rate of change ratio: (price/prevPrice) (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rate of Change Ratio is a momentum indicator that measures the ratio between the current price
             and a price from a specified number of periods in the past. This ratio provides insights into relative changes and trend strength,
             with values typically centered around 1, indicating no change.
             <para>
             The function is always positive and is particularly useful for identifying proportional relationships between data points
             over time. This indicator is commonly used in financial analysis to assess relative price performance and detect trends.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the value from <paramref name="optInTimePeriod"/> periods ago:
                   <code>
                     PreviousValue = data[currentIndex - optInTimePeriod]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the ROCR as the ratio of the current value to the previous value:
                   <code>
                     ROCR = CurrentValue / PreviousValue
                   </code>
                   where <c>CurrentValue</c> is the value at the current position, and <c>PreviousValue</c>
                   is the value <paramref name="optInTimePeriod"/> steps earlier.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value greater than 1 indicates upward momentum, suggesting the current value is higher than the past value.
                 </description>
               </item>
               <item>
                 <description>
                   A value less than 1 indicates downward momentum, suggesting the current value is lower than the past value.
                 </description>
               </item>
               <item>
                 <description>
                   A value of exactly 1 indicates no change in value over the specified time period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.RocRLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.RocR``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RocR</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.RocR``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.RocR100``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Rate of change ratio 100 scale: (price/prevPrice)*100 (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Rate of Change Ratio (100 Scale) is a momentum indicator that measures the ratio between the current price and a price from
             a specified number of periods in the past, scaled to 100. It provides a normalized representation of relative changes
             over time and is always positive, centered around 100, which indicates no change.
             <para>
             The function is particularly useful for analyzing proportional relationships in a format that is easier to interpret,
             especially when comparing data across different scales or units. The function facilitates intuitive momentum interpretation.
             Pairing it with oscillators or volume measures can refine timing and clarity.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the value from <paramref name="optInTimePeriod"/> periods ago:
                   <code>
                     PreviousValue = data[currentIndex - optInTimePeriod]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the ROCR100 as the scaled ratio of the current value to the previous value:
                   <code>
                     ROCR100 = (CurrentValue / PreviousValue) * 100
                   </code>
                   where <c>CurrentValue</c> is the value at the current position, and <c>PreviousValue</c>
                   is the value <paramref name="optInTimePeriod"/> steps earlier.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A value greater than 100 indicates upward momentum, suggesting the current value is higher than the past value.
                 </description>
               </item>
               <item>
                 <description>
                   A value less than 100 indicates downward momentum, suggesting the current value is lower than the past value.
                 </description>
               </item>
               <item>
                 <description>
                   A value of exactly 100 indicates no change in value over the specified time period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.RocR100Lookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.RocR100``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RocR100</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.RocR100``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Double,System.Double)">
             <summary>
             Parabolic SAR (Overlap Studies)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInAcceleration">
             The acceleration factor that controls the sensitivity of the SAR:
             <list type="bullet">
               <item>
                 <description>
                   Higher values make the SAR more responsive to price changes but may increase the risk of false signals.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values reduce responsiveness, providing smoother outputs.
                 </description>
               </item>
             </list>
             <para>
             A typical range is <c>0.01..0.2</c>.
             </para>
             </param>
             <param name="optInMaximum">
             The maximum value to which the acceleration factor can increase:
             <list type="bullet">
               <item>
                 <description>
                   Higher values allow the SAR to accelerate more quickly during strong trends.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values limit acceleration, maintaining smoother trends.
                 </description>
               </item>
             </list>
             <para>
             A typical range is <c>0.01..0.5</c>.
             </para>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Parabolic Stop and Reverse is a trend-following indicator designed to identify potential reversal points in the market.
             It plots a series of dots above or below price bars to signify the direction of the trend.
             As the trend progresses, the dots move closer to the price, providing dynamic stop-loss levels that adapt to changing market conditions.
             <para>
             The function is particularly useful for identifying trend direction, setting trailing stops, and detecting potential reversals.
             Pairing it with trend or volatility indicators such as <see cref="M:TALib.Functions.Adx``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ADX</see> or
             <see cref="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ATR</see> enhances its application.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine the initial trend direction based on the directional movement (DM) of the first two bars:
                   <code>
                     Direction = Long if +DM > -DM; otherwise, Short.
                   </code>
                   In the case of a tie, the trend defaults to Long.
                 </description>
               </item>
               <item>
                 <description>
                   Set the initial SAR (Stop and Reverse) and Extreme Point (EP):
             <code>
             SAR = Lowest Low (for Long) or Highest High (for Short) of the first price bar.
             EP = Highest High (for Long) or Lowest Low (for Short) of the second price bar.
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   For each subsequent price bar:
                   <list type="bullet">
                     <item>
                       <description>
                         Calculate the SAR using the formula:
                         <code>
                           SAR = Previous SAR + Acceleration Factor * (EP - Previous SAR)
                         </code>
                         Where the Acceleration Factor (AF) starts at the initial value and increases incrementally with new highs/lows up to the maximum limit.
                         The EP is updated to the new highest high (for Long) or lowest low (for Short).
                         </description>
                     </item>
                     <item>
                       <description>
                         Ensure that the SAR does not penetrate the range of the previous two price bars.
                       </description>
                     </item>
                     <item>
                       <description>
                         If the SAR crosses the current price, the trend direction reverses, and the SAR is reset to the EP.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   SAR dots below the price indicate an uptrend, providing potential stop-loss levels for long positions.
                 </description>
               </item>
               <item>
                 <description>
                   SAR dots above the price indicate a downtrend, providing potential stop-loss levels for short positions.
                 </description>
               </item>
               <item>
                 <description>
                   When the SAR switches from below to above (or vice versa), it signals a potential trend reversal.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.SarLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Sar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Double,System.Double)">Sar</see>.
            </summary>
            <returns>Always 1 since there is only one price bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Sar``1(``0[],``0[],System.Range,``0[],System.Range@,System.Double,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.SarExt``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
             <summary>
             Parabolic SAR - Extended (Overlap Studies)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInStartValue">
             The starting SAR value used to initialize the calculation:
             <list type="bullet">
               <item>
                 <description>
                   Positive values indicate a starting long position.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values indicate a starting short position.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>-100.0..100.0</c>, which determines the direction based on the first two price bars.
             </para>
             </param>
             <param name="optInOffsetOnReverse">
             An offset applied to the SAR value upon position reversal:
             <list type="bullet">
               <item>
                 <description>
                   Positive values increase the distance between the SAR and the current price after reversal.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values decrease the distance.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>-0.5..0.5</c>.
             </para>
             </param>
             <param name="optInAccelerationInitLong">
             Initial acceleration factor for long positions:
             <list type="bullet">
               <item>
                 <description>
                   Higher values make the SAR more responsive at the start of a trend.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values smooth the initial SAR.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.01..0.1</c>.
             </para>
             </param>
             <param name="optInAccelerationLong">
             Incremental acceleration factor for long positions:
             <list type="bullet">
               <item>
                 <description>
                   Higher values increase SAR sensitivity with each new extreme point.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values limit the rate of acceleration.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.01..0.05</c>.
             </para>
             </param>
             <param name="optInAccelerationMaxLong">
             Maximum acceleration factor for long positions:
             <list type="bullet">
               <item>
                 <description>
                   Higher values allow faster SAR movement during trends.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values limit SAR movement, increasing stability.
                 </description>
               </item>
             </list>
             <para>
             Typical range: <c>0.1..0.5</c>.
             </para>
             </param>
             <param name="optInAccelerationInitShort">
             Initial acceleration factor for short positions, with behavior similar to <paramref name="optInAccelerationInitLong"/>.
             Typical range: <c>0.01..0.1</c>.
             </param>
             <param name="optInAccelerationShort">
             Incremental acceleration factor for short positions, with behavior similar to <paramref name="optInAccelerationLong"/>.
             Typical range: <c>0.01..0.05</c>.
             </param>
             <param name="optInAccelerationMaxShort">
             Maximum acceleration factor for short positions, with behavior similar to <paramref name="optInAccelerationMaxLong"/>.
             Typical range: <c>0.1..0.5</c>.
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Extended Parabolic Stop and Reverse indicator is an enhanced version of the traditional <see cref="M:TALib.Functions.Sar``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Double,System.Double)">SAR</see>.
             It allows for more granular control over the SAR calculation by providing separate parameters for long and short positions,
             as well as an optional offset applied during position reversals. SAR-Ext is particularly useful for adaptive trading strategies
             in volatile or trending markets.
             <para>
             By customizing acceleration factors, offsets, and initial values, the indicator's responsiveness to price changes can be fine-tuned.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                    Determine the initial trend direction based on the directional movement (DM) of the first two bars,
                   or explicitly set it via the <paramref name="optInStartValue"/> parameter:
                   <code>
                     Direction = Long if +DM > -DM; otherwise, Short.
                   </code>
                   If <paramref name="optInStartValue"/> is positive, the direction is Long. If negative, the direction is Short.
                 </description>
               </item>
               <item>
                 <description>
                   Set the initial SAR and Extreme Point (EP) based on the starting trend:
             <code>
             SAR = Lowest Low (for Long) or Highest High (for Short) of the first price bar.
             EP = Highest High (for Long) or Lowest Low (for Short) of the second price bar.
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   For each subsequent price bar:
                   <list type="bullet">
                     <item>
                       <description>
                         Calculate the SAR using separate acceleration factors for Long and Short positions:
                         <code>
                           SAR = Previous SAR + Acceleration Factor * (EP - Previous SAR)
                         </code>
                         The Acceleration Factor (AF) starts at the initial value and increases incrementally with new highs/lows up to the maximum limit.
                         The EP is updated to the new highest high (for Long) or lowest low (for Short).
                         </description>
                     </item>
                     <item>
                       <description>
                         Ensure the SAR does not penetrate the range of the previous two price bars.
                       </description>
                     </item>
                     <item>
                       <description>
                         If the SAR crosses the current price, reverse the position, reset the SAR to the EP,
                         and apply the specified <paramref name="optInOffsetOnReverse"/> offset if provided.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   SAR dots below the price indicate an uptrend, providing potential stop-loss levels for long positions.
                 </description>
               </item>
               <item>
                 <description>
                   SAR dots above the price indicate a downtrend, providing potential stop-loss levels for short positions.
                 </description>
               </item>
               <item>
                 <description>
                   When the SAR switches from below to above (or vice versa), it signals a potential trend reversal.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.SarExtLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.SarExt``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">SarExt</see>.
            </summary>
            <returns>Always 1 since there is only one price bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.SarExt``1(``0[],``0[],System.Range,``0[],System.Range@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sin``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric Sin (Math Transform)
            </summary>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <param name="inReal">A span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            SIN applies the sine function to data, generally for advanced or experimental analysis.
            <para>
            The function is rarely used alone. Its application typically arises in complex indicator development or cycle analysis.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.SinLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Sin``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Sin</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Sin``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sinh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric Sinh (Math Transform)
            </summary>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <param name="inReal">A span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            SINH applies the hyperbolic sine function, again for specialized analytical purposes.
            <para>
            The function has limited common use. It may appear in proprietary or experimental models.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.SinhLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Sinh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Sinh</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Sinh``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Sqrt``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Square Root (Math Transform)
            </summary>
            <param name="inReal">A span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            SQRT applies the square root function to data, usually in statistical or volatility calculations.
            <para>
            The function can refine volatility modeling. Integrating it into quantitative analyses may sharpen risk or return assessments.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.SqrtLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Sqrt``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Sqrt</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Sqrt``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.StochRsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32,TALib.Core.MAType)">
             <summary>
             Stochastic Relative Strength Index (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outFastK">A span to store the calculated Fast %K line values.</param>
             <param name="outFastD">A span to store the calculated Fast %D line values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <param name="optInFastKPeriod">The time period for calculating the Fast %K line.</param>
             <param name="optInFastDPeriod">The time period for smoothing the Fast %K line.</param>
             <param name="optInFastDMAType">The moving average type used for smoothing the Fast %D line.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Stochastic Relative Strength Index is a momentum indicator that combines the Stochastic Oscillator (<see cref="M:TALib.Functions.Stoch``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,TALib.Core.MAType,System.Int32,TALib.Core.MAType)">Stoch</see>)
             and the Relative Strength Index (<see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see>) to determine overbought and oversold conditions in an asset.
             Unlike the standard RSI, StochRSI provides more sensitivity and finer detail by applying the Stochastic Oscillator
             formula to the RSI values instead of raw price data.
             <para>
             The StochRSI is particularly useful in identifying overbought or oversold conditions with
             higher sensitivity than traditional momentum indicators.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the RSI values over the specified <paramref name="optInTimePeriod"/>:
                   <code>
                     RSI = 100 - (100 / (1 + RS))
                   </code>
                   where RS is the ratio of average gains to average losses over the <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Fast %K line using the Stochastic Oscillator formula applied to the RSI values:
                   <code>
                     %K = 100 * ((RSI - LowestRSI) / (HighestRSI - LowestRSI))
                   </code>
                   where:
                   <list type="bullet">
                     <item>
                       <description>
                         <b>LowestRSI</b> is the lowest RSI value over the <paramref name="optInFastKPeriod"/>.
                       </description>
                     </item>
                     <item>
                       <description>
                         <b>HighestRSI</b> is the highest RSI value over the <paramref name="optInFastKPeriod"/>.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   Smooth the Fast %K line over the <paramref name="optInFastDPeriod"/> using the specified
                   <paramref name="optInFastDMAType"/> to produce the Fast %D line.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Values near 0 indicate that the RSI is at its lowest levels in the lookback period, suggesting oversold conditions.
                 </description>
               </item>
               <item>
                 <description>
                   Values near 100 indicate that the RSI is at its highest levels in the lookback period, suggesting overbought conditions.
                 </description>
               </item>
               <item>
                 <description>
                   Crossovers of the %K and %D lines are used as potential buy or sell signals:
                   <list type="bullet">
                     <item>
                       <description>
                         A %K line crossing above the %D line may signal a buy opportunity.
                       </description>
                     </item>
                     <item>
                       <description>
                         A %K line crossing below the %D line may signal a sell opportunity.
                       </description>
                     </item>
                   </list>
                 </description>
               </item>
               <item>
                 <description>
                   StochRSI provides higher sensitivity than RSI but may result in more false signals due to its volatility.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.StochRsiLookback(System.Int32,System.Int32,System.Int32,TALib.Core.MAType)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.StochRsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32,TALib.Core.MAType)">StochRsi</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <param name="optInFastKPeriod">The time period for calculating the Fast %K line.</param>
            <param name="optInFastDPeriod">The time period for smoothing the Fast %K line.</param>
            <param name="optInFastDMAType">The moving average type used for smoothing the Fast %D line.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.StochRsi``1(``0[],System.Range,``0[],``0[],System.Range@,System.Int32,System.Int32,System.Int32,TALib.Core.MAType)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.T3``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Double)">
             <summary>
             T3 Moving Average (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <param name="optInVFactor">
             The volume factor controls the degree of smoothing and responsiveness:
             <list type="bullet">
               <item>
                 <description>
                   Higher values (closer to 1) result in smoother outputs with more lag.
                 </description>
               </item>
               <item>
                 <description>
                   Lower values (closer to 0) produce outputs that are more responsive to recent price changes.
                 </description>
               </item>
             </list>
             </param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             T3 Moving Average is a smoothing technique that improves upon traditional exponential moving averages (EMAs)
             by reducing lag while maintaining responsiveness to price changes. It achieves this by applying multiple EMAs to the same
             input data and using a volume factor (<paramref name="optInVFactor"/>) to adjust the weighting of each EMA layer.
             <para>
             T3 values represent a smoother moving average with less lag compared to conventional EMAs.
             This indicator is especially useful in identifying trends and reducing the impact of short-term volatility.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the first EMA (E1) over the input data (<paramref name="inReal"/>) using the specified
                   <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
               <item>
                 <description>
                   Apply subsequent EMAs on top of the previous result, up to six layers:
             <code>
             E2 = EMA(E1, optInTimePeriod)
             E3 = EMA(E2, optInTimePeriod)
             ...
             E6 = EMA(E5, optInTimePeriod)
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Use the volume factor (<paramref name="optInVFactor"/>) to combine the weighted contributions of the six EMAs:
                   <code>
                     T3 = C1 * E6 + C2 * E5 + C3 * E4 + C4 * E3
                   </code>
                   where:
                   <list type="bullet">
                     <item><b>C1</b>, <b>C2</b>, <b>C3</b>, and <b>C4</b> are constants derived from the volume factor.</item>
                   </list>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.T3Lookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.T3``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Double)">T3</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.T3``1(``0[],System.Range,``0[],System.Range@,System.Int32,System.Double)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Tan``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric Tan (Math Transform)
            </summary>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <param name="inReal">A span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            TAN applies the tangent function, typically for specialized or experimental analysis.
            <para>
            The function is not generally used alone. Consider its application only in complex, custom modeling scenarios.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.TanLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Tan``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Tan</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Tan``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Tanh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
            <summary>
            Vector Trigonometric Tanh (Math Transform)
            </summary>
            <typeparam name="T">
            The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
            implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
            </typeparam>
            <param name="inReal">A span of input values.</param>
            <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
            <param name="outReal">A span to store the calculated values.</param>
            <param name="outRange">The range of indices representing the valid data within the output spans.</param>
            <returns>
            A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
            Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
            </returns>
            <remarks>
            TANH applies the hyperbolic tangent function, another specialized mathematical transformation.
            <para>
            The function is rarely employed directly. It may be integrated into advanced, research-driven models when required.
            </para>
            </remarks>
        </member>
        <member name="M:TALib.Functions.TanhLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Tanh``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">Tanh</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.Tanh``1(``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Tema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Triple Exponential Moving Average (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Triple Exponential Moving Average is a smoothing technique designed to reduce lag compared to traditional moving averages.
             TEMA is calculated using three layers of exponential moving averages (EMAs) to achieve greater responsiveness
             to price changes while minimizing noise.
             <para>
             TEMA offers a smoother representation of the price trend compared to a single EMA, reducing lag while maintaining
             sensitivity to price changes.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the first EMA (EMA1) over the input data (<paramref name="inReal"/>) using the specified
                   <paramref name="optInTimePeriod"/>.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the second EMA (EMA2) on top of EMA1:
                   <code>
                     EMA2 = EMA(EMA1, optInTimePeriod)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the third EMA (EMA3) on top of EMA2:
                   <code>
                     EMA3 = EMA(EMA2, optInTimePeriod)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Combine the results of the three EMAs to calculate the TEMA:
                   <code>
                     TEMA = 3 * EMA1 - 3 * EMA2 + EMA3
                   </code>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TemaLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Tema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Tema</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Tema``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.TRange``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             True Range (Volatility Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             TRANGE calculates the maximum of several range metrics, serving as a fundamental measure in volatility indicators like ATR.
             <para>
             The function alone measures volatility. Using it as input for <see cref="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">ATR</see> or
             other volatility-based strategies can improve adjustments to changing market conditions.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Determine the current high-low difference: <c>val1 = High[today] - Low[today]</c>.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the difference between yesterday's close and today's high: <c>val2 = |High[today] - Close[yesterday]|</c>.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the difference between yesterday's close and today's low: <c>val3 = |Low[today] - Close[yesterday]|</c>.
                 </description>
               </item>
               <item>
                 <description>
                   Select the largest of these three values: <c>TrueRange = Max(val1, val2, val3)</c>.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A higher value indicates higher market volatility.
                 </description>
               </item>
               <item>
                 <description>
                   A lower value indicates a more stable or less volatile market.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TRangeLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.TRange``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">TRange</see>.
            </summary>
            <returns>Always 1 since there is only one price bar required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.TRange``1(``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Trima``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Triangular Moving Average (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Triangular Moving Average is a weighted moving average designed to put greater weight on
             data points near the center of the specified period. TRIMA applies symmetrical weighting,
             emphasizing the middle portion of the data set to provide a smooth average.
            <para>
             The function can yield a smoother trend measure than <see cref="M:TALib.Functions.Sma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">SMA</see> or <see cref="M:TALib.Functions.Ema``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">EMA</see>.
             Integrating it with momentum indicators may offer clearer signals by reducing noise.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each period, compute the weighted moving average as follows:
                   - For an odd period, the TRIMA is equivalent to a Simple Moving Average (SMA) of another SMA.
                   - For an even period, the TRIMA uses adjusted weights to smooth the data.
                 </description>
               </item>
               <item>
                 <description>
                   Update the numerator dynamically for each subsequent calculation by subtracting trailing values,
                   adding new values, and adjusting weights accordingly.
                 </description>
               </item>
               <item>
                 <description>
                   Normalize the weighted sum by dividing it by the total weight factor for the period.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TrimaLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Trima``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Trima</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Trima``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Trix``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             1-day Rate-Of-Change (ROC) of a Triple Smooth EMA (Momentum Indicators)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             TRIX (1-day Rate-Of-Change of a Triple Smooth Exponential Moving Average) indicator measures
             the percentage rate of change of a triple exponentially smoothed moving average. It is commonly used
             to identify trends and potential reversals in time series data while filtering out short-term noise.
             <para>
             The function can identify trend reversals and underlying momentum changes.
             Confirming TRIX signals with volume data or oscillators can strengthen their quality.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate a single Exponential Moving Average (EMA) of the input data over the specified period.
                 </description>
               </item>
               <item>
                 <description>
                   Apply two additional EMA calculations on the previously calculated EMA to achieve triple smoothing.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the 1-day Rate-Of-Change (ROC) of the triple smoothed EMA to obtain the TRIX values.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Positive values indicate an upward trend.
                 </description>
               </item>
               <item>
                 <description>
                   Negative values indicate a downward trend.
                 </description>
               </item>
               <item>
                 <description>
                   Changes in the direction of the TRIX can signal potential reversals or trend shifts.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TrixLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Trix``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Trix</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Trix``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Tsf``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Time Series Forecast (Statistic Functions)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Time Series Forecast function calculates a linear regression forecast, projecting a future value based on past data.
             It applies the least squares method to determine the best-fitting straight line for the specified period.
             <para>
             The function can assist in anticipating near-term price movements.
             Aligning these projections with trend or momentum indicators ensures that forecasts are consistent with broader conditions.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Calculate the sum of the input values and their corresponding indices over the specified period.
                 </description>
               </item>
               <item>
                 <description>
                   Determine the slope (m) and intercept (b) of the linear regression line using the least squares method:
             <code>
             Slope (m) = (N * Σ(xy) - Σ(x) * Σ(y)) / (N * Σ(x²) - (Σ(x))²).
             Intercept (b) = (Σ(y) - m * Σ(x)) / N.
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the forecasted value for the next time step using the equation <c>y = b + m * x</c>,
                   where x is the next index in the sequence.
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>A rising value indicates an upward trend.</description>
               </item>
               <item>
                 <description>A falling value indicates a downward trend.</description>
               </item>
               <item>
                 <description>The TSF can be used to project future values and assess trend strength.</description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TsfLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Tsf``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Tsf</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Tsf``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.TypPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Typical Price (Price Transform)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Typical Price is a simple average of the high, low, and close prices of a financial instrument
             for a given time period. It provides a straightforward representation of the average price movement
             within that period, which can be used for various technical analysis calculations or as an input
             to other indicators.
             <para>
             The function can serve as a reference for mean-reversion or confirmation strategies.
             Combining it with oscillators or volatility bands may add contextual value.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each period, calculate the Typical Price using the formula:
                   <code>
                     TP = (High + Low + Close) / 3.
                   </code>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.TypPriceLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.TypPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">TypPrice</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.TypPrice``1(``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.UltOsc``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">
             <summary>
             Ultimate Oscillator (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod1">The short-term time period.</param>
             <param name="optInTimePeriod2">The medium-term time period.</param>
             <param name="optInTimePeriod3">The long-term time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Ultimate Oscillator is a momentum oscillator designed to capture the relationship between
             buying and selling pressure over multiple time frames. It helps identify potential price reversals
             and overbought/oversold conditions by combining short-term, medium-term, and long-term averages
             of true ranges and buying pressure.
             <para>
             The Ultimate Oscillator combines multiple time frames to minimize false signals caused by short-term
             market fluctuations while still reacting quickly enough to significant price movements.
             The function provides a more balanced momentum view.
             Integrating it with trend confirmation or volume indicators can reinforce signal credibility.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each period, calculate the true range (TR) and the buying pressure (BP):
             <code>
             True Range (TR) = Maximum(High - Low, Absolute(High - Previous Close), Absolute(Low - Previous Close)).
             Buying Pressure (BP) = Close - Minimum(Low, Previous Close).
             </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the averages of BP and TR for the short-term, medium-term, and long-term periods.
                 </description>
               </item>
               <item>
                 <description>
                   Compute the Ultimate Oscillator value as a weighted average of the three time periods:
                   <code>
                     UO = 100 * [(4 * (Short BP/TR)) + (2 * (Medium BP/TR)) + (1 * (Long BP/TR))] / (4 + 2 + 1).
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Values above 70 suggest overbought conditions, indicating potential selling opportunities.
                 </description>
               </item>
               <item>
                 <description>
                   Values below 30 suggest oversold conditions, indicating potential buying opportunities.
                 </description>
               </item>
               <item>
                 <description>
                   The oscillator can confirm trends when used with price action or other indicators.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.UltOscLookback(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.UltOsc``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">UltOsc</see>.
            </summary>
            <param name="optInTimePeriod1">The short-term time period.</param>
            <param name="optInTimePeriod2">The medium-term time period.</param>
            <param name="optInTimePeriod3">The long-term time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.UltOsc``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32,System.Int32,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Var``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Variance (Statistic Functions)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Variance function measures the spread or dispersion of a set of values around their mean.
             It provides insights into the volatility or variability of the data over a specified period.
             <para>
             The function can be used in risk assessment or quantitative strategies.
             Combining it with standard deviation or Beta may refine understanding of volatility conditions.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Compute the mean (average) of the data points for the specified time period:
                   <code>
                     Mean = Sum(DataPoints) / TimePeriod
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the squared difference of each data point from the mean:
                   <code>
                     Squared Difference = (Value - Mean)²
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Compute the variance by averaging these squared differences:
                   <code>
                     Variance = Σ(Squared Differences) / Period
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   A higher value indicates greater variability or volatility in the data.
                 </description>
               </item>
               <item>
                 <description>
                   A lower value suggests the data points are closer to the mean, indicating lower volatility.
                 </description>
               </item>
               <item>
                 <description>
                   Variance is commonly used as a basis for other indicators, such as standard deviation.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.VarLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Var``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Var</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Var``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.WclPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Weighted Close Price (Price Transform)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Weighted Close Price is a price transform that provides a weighted average of the high, low,
             and close prices of a financial instrument, giving double weight to the close price.
             <para>
             This function emphasizes the closing price, which is often considered the most significant price of a trading period.
             It enhances analysis of closing dynamics and may highlight patterns that other transforms overlook.
             Pairing it with momentum or trend indicators highlights when the market consistently closes near certain levels.
             Pairing it with momentum indicators like <see cref="M:TALib.Functions.Rsi``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">RSI</see> or trend-following tools
             such as <see cref="M:TALib.Functions.Macd``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Span{``0},System.Span{``0},System.Range@,System.Int32,System.Int32,System.Int32)">MACD</see> enhances its utility.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each period, compute the Weighted Close Price using the formula:
                   <code>
                     WCL = (High + Low + 2 * Close) / 4.
                   </code>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.WclPriceLookback">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.WclPrice``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">WclPrice</see>.
            </summary>
            <returns>Always 0 since no historical data is required for this calculation.</returns>
        </member>
        <member name="M:TALib.Functions.WclPrice``1(``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.WillR``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Williams' %R (Momentum Indicators)
             </summary>
             <param name="inHigh">A span of input high prices.</param>
             <param name="inLow">A span of input low prices.</param>
             <param name="inClose">A span of input close prices.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Williams' %R is a momentum oscillator that measures the level of the close relative to the high-low range
             over a specified period. It indicates overbought or oversold conditions in a market.
             <para>
             The function is often applied in ranging markets.
             Confirming extremes with trend indicators or volume measures can improve the reliability of reversal signals.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   Identify the highest high and lowest low over the specified time period.
                 </description>
               </item>
               <item>
                 <description>
                   Calculate the %R value using the formula:
                   <code>
                     %R = ((Highest High - Close) / (Highest High - Lowest Low)) * -100.
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Value interpretation</b>:
             <list type="bullet">
               <item>
                 <description>
                   Values above -20 indicate overbought conditions, signaling potential selling opportunities.
                 </description>
               </item>
               <item>
                 <description>
                   Values below -80 indicate oversold conditions, signaling potential buying opportunities.
                 </description>
               </item>
               <item>
                 <description>
                   %R values can help confirm trends and identify potential reversals.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.WillRLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.WillR``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">WillR</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.WillR``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Wma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Weighted Moving Average (Overlap Studies)
             </summary>
             <param name="inReal">A span of input values.</param>
             <param name="inRange">The range of indices that determines the portion of data to be calculated within the input spans.</param>
             <param name="outReal">A span to store the calculated values.</param>
             <param name="outRange">The range of indices representing the valid data within the output spans.</param>
             <param name="optInTimePeriod">The time period.</param>
             <typeparam name="T">
             The numeric data type, typically <see langword="float"/> or <see langword="double"/>,
             implementing the <see cref="T:System.Numerics.IFloatingPointIeee754`1"/> interface.
             </typeparam>
             <returns>
             A <see cref="T:TALib.Core.RetCode"/> value indicating the success or failure of the calculation.
             Returns <see cref="F:TALib.Core.RetCode.Success"/> on successful calculation, or an appropriate error code otherwise.
             </returns>
             <remarks>
             Weighted Moving Average is a type of moving average that assigns greater weight to more recent data points.
             This weighting makes it more responsive to recent price movements compared to a Simple Moving Average (SMA),
             which treats all data points equally.
             <para>
             The function can capture short-term trends effectively.
             Combining it with oscillators or other momentum indicators enhances timing and responsiveness in changing conditions.
             </para>
            
             <b>Calculation steps</b>:
             <list type="number">
               <item>
                 <description>
                   For each period, compute the weighted sum of the input values:
                   <code>
                     Weighted Sum = Σ(Value * Weight), where weights are assigned as 1, 2, ..., n for n periods.
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Divide the weighted sum by the sum of weights to calculate the WMA:
                   <code>
                     WMA = Weighted Sum / Σ(Weights), where Σ(Weights) = n * (n + 1) / 2 for n periods.
                   </code>
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.WmaLookback(System.Int32)">
            <summary>
            Returns the lookback period for <see cref="M:TALib.Functions.Wma``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Wma</see>.
            </summary>
            <param name="optInTimePeriod">The time period.</param>
            <returns>The number of periods required before the first output value can be calculated.</returns>
        </member>
        <member name="M:TALib.Functions.Wma``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            For compatibility with abstract API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Средний Истинный Диапазон (Индикаторы Волатильности)
             </summary>
             <param name="inHigh">Входные данные для максимальных цен.</param>
             <param name="inLow">Входные данные для минимальных цен.</param>
             <param name="inClose">Входные данные для цен закрытия.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inHigh"/>, <paramref name="inLow"/> и <paramref name="inClose"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inHigh[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inHigh"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inHigh"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inHigh.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inHigh"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Средний Истинный Диапазон (ATR) — это индикатор волатильности, который измеряет степень изменения цены за указанный период времени.
             <para>
             Функция широко используется для установки уровней стоп-лосс, управления размерами позиций и оценки условий волатильности.
             Она может быть интегрирована с индикаторами тренда или импульса для улучшения управления рисками.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>
                   Вычислить Истинный Диапазон (TR), который является наибольшим из следующих значений:
                   <code>
                     TR = max[(High - Low), abs(High - Previous Close), abs(Low - Previous Close)]
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Для первого значения ATR вычислить простое среднее значений TR за указанный период времени.
                 </description>
               </item>
               <item>
                 <description>
                   Для последующих значений ATR использовать метод сглаживания Уайлдера:
                   <code>
                     ATR = [(Previous ATR * (Time Period - 1)) + Current TR] / Time Period
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Более высокое значение указывает на высокую волатильность рынка.
                 </description>
               </item>
               <item>
                 <description>
                   Более низкое значение свидетельствует о снижении волатильности.
                 </description>
               </item>
               <item>
                 <description>
                   ATR не указывает направление движения цены, но отражает степень волатильности за указанный период.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AtrLookback(System.Int32)">
            <summary>
            Возвращает период предыстории для <see cref="M:TALib.Functions.Atr``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">Atr</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до вычисления первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.Atr``1(``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.AvgDev``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">
             <summary>
             Average Deviation (Price Transform) - Среднее отклонение (Трансформация цен)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени.</param>
             <typeparam name="T">
             Числовой тип данных, обычно <see langword="float"/> или <see langword="double"/>,
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или неудачу вычисления.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном вычислении, или соответствующий код ошибки в противном случае.
             </returns>
             <remarks>
             Среднее отклонение вычисляет, насколько каждая точка данных отклоняется от среднего значения, служа мерой волатильности.
             Оно дает представление о вариативности или волатильности набора данных.
             <para>
             Функция может помочь оценить стабильность или изменчивость рынка.
             Включение ее в стратегии с индикаторами тренда или импульса может уточнить решения, основанные на волатильности.
             </para>
            
             <b>Этапы вычисления</b>:
             <list type="number">
               <item>
                 <description>Вычислить среднее (среднее значение) значений за указанный период времени:
                   <code>
                     Mean = Сумма значений / Период времени
                   </code>
                 </description>
               </item>
               <item>
                 <description>Вычислить абсолютное отклонение каждого значения от среднего:
                   <code>
                     Deviation[i] = abs(Value[i] - Mean)
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Вычислить среднее этих отклонений для получения AvgDev:
                   <code>
                     AvgDev = Сумма отклонений / Период времени
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Более высокое значение указывает на большую изменчивость.
                 </description>
               </item>
               <item>
                 <description>
                   Более низкое значение указывает на большую стабильность.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AvgDevLookback(System.Int32)">
            <summary>
            Возвращает период обратного просмотра для <see cref="M:TALib.Functions.AvgDev``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32)">AvgDev</see>.
            </summary>
            <param name="optInTimePeriod">Период времени.</param>
            <returns>Количество периодов, необходимых до расчета первого выходного значения.</returns>
        </member>
        <member name="M:TALib.Functions.AvgDev``1(``0[],System.Range,``0[],System.Range@,System.Int32)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.StdDev``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Double)">
             <summary>
             Standard Deviation (Statistical Functions) — Стандартное отклонение (Статистические функции)
             </summary>
             <param name="inReal">Входные данные для расчета индикатора (цены, другие индикаторы или другие временные ряды)</param>
             <param name="inRange">
             Диапазон обрабатываемых данных в <paramref name="inReal"/> (начальный и конечный индексы).
             - Если не указан, обрабатывается весь массив <paramref name="inReal"/>.
             </param>
             <param name="outReal">
             Массив, содержащий ТОЛЬКО валидные значения индикатора.
             - Длина массива равна <c>outRange.End - outRange.Start + 1</c> (если <c>outRange</c> корректен).
             - Каждый элемент <c>outReal[i]</c> соответствует <c>inReal[outRange.Start + i]</c>.
             </param>
             <param name="outRange">
             Диапазон индексов в <paramref name="inReal"/>, для которых рассчитаны валидные значения:
             - <b>Start</b>: индекс первого элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - <b>End</b>: индекс последнего элемента <paramref name="inReal"/>, имеющего валидное значение в <paramref name="outReal"/>.
             - Гарантируется: <c>End == inReal.GetUpperBound(0)</c> (последний элемент входных данных), если расчет успешен.
             - Если данных недостаточно (например, длина <paramref name="inReal"/> меньше периода индикатора), возвращается <c>[0, -1]</c>.
             </param>
             <param name="optInTimePeriod">Период времени (количество периодов).</param>
             <param name="optInNbDev">Количество стандартных отклонений (множитель).</param>
             <typeparam name="T">
             Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>),
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Значение <see cref="T:TALib.Core.RetCode"/>, указывающее на успех или ошибку расчета.
             Возвращает <see cref="F:TALib.Core.RetCode.Success"/> при успешном выполнении, иначе код ошибки.
             </returns>
             <remarks>
             Стандартное отклонение — статистическая мера, количественно оценивающая разброс данных
             относительно их среднего значения. В техническом анализе используется для оценки волатильности финансовых инструментов.
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Вычисление арифметического среднего для данных в скользящем окне длиной `optInTimePeriod`.
                 </description>
               </item>
               <item>
                 <description>
                   Расчет дисперсии путем суммирования квадратов разностей между значениями и средним, деленного на количество данных:
                   <code>
                     Variance = Σ((Value - Mean)^2) / TimePeriod
                   </code>
                   где Σ — сумма, Value — текущее значение, Mean — среднее арифметическое.
                 </description>
               </item>
               <item>
                 <description>
                   Извлечение квадратного корня из дисперсии для получения стандартного отклонения:
                   <code>
                     StdDev = √Variance
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Умножение стандартного отклонения на коэффициент `optInNbDev` для масштабирования результата.
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Высокие значения указывают на большую волатильность и разброс данных.
                 </description>
               </item>
               <item>
                 <description>
                   Низкие значения свидетельствуют о стабильности и малой изменчивости данных.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.StdDevLookback(System.Int32)">
            <summary>
            Возвращает минимальный период для первого валидного значения индикатора <see cref="M:TALib.Functions.StdDev``1(System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Double)">StdDev</see>.
            </summary>
            <param name="optInTimePeriod">Период времени (количество периодов).</param>
            <returns>
            Количество баров, которые необходимо пропустить перед началом расчета,
            чтобы получить первое корректное значение индикатора.
            </returns>
        </member>
        <member name="M:TALib.Functions.StdDev``1(``0[],System.Range,``0[],System.Range@,System.Int32,System.Double)">
            <remarks>
            Для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.Ad``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)">
             <summary>
             Chaikin A/D Line (Volume Indicators) | Линия накопления/распределения Чайкина
             </summary>
             <param name="inHigh">Массив входных максимальных цен.</param>
             <param name="inLow">Массив входных минимальных цен.</param>
             <param name="inClose">Массив входных цен закрытия.</param>
             <param name="inVolume">Массив входных объемов торгов.</param>
             <param name="inRange">
             Диапазон обрабатываемых данных во входных массивах (начальный и конечный индексы).  
             - Если не указан, обрабатываются все доступные данные.
             </param>
             <param name="outReal">Массив для сохранения рассчитанных значений индикатора.</param>
             <param name="outRange">
             Диапазон индексов во входных данных, для которых получены валидные значения:  
             - <b>Start</b>: индекс первого обработанного элемента.  
             - <b>End</b>: индекс последнего обработанного элемента.
             </param>
             <typeparam name="T">
             Числовой тип данных (обычно <see langword="float"/> или <see langword="double"/>), 
             реализующий интерфейс <see cref="T:System.Numerics.IFloatingPointIeee754`1"/>.
             </typeparam>
             <returns>
             Код возврата <see cref="T:TALib.Core.RetCode"/>:  
             - <see cref="F:TALib.Core.RetCode.Success"/> при успешном расчете.  
             - Код ошибки при проблемах с входными данными.
             </returns>
             <remarks>
             Линия накопления/распределения Чайкина измеряет кумулятивный денежный поток в/из актива 
             через анализ цены и объема, отражая баланс спроса и предложения.
             <para>
             Может подтверждать ценовые тренды и выявлять их возможные развороты. 
             Часто используется с другими объемными или импульсными индикаторами.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет множителя денежного потока (MFM) для каждого периода:
                   <code>
                     MFM = ((Close - Low) - (High - Close)) / (High - Low)
                   </code>
                   Где:  
                   - Close: цена закрытия  
                   - High: максимальная цена  
                   - Low: минимальная цена
                 </description>
               </item>
               <item>
                 <description>
                   Расчет объема денежного потока (MFV):
                   <code>
                     MFV = MFM * Volume
                   </code>
                 </description>
               </item>
               <item>
                 <description>
                   Кумулятивное суммирование MFV для формирования линии A/D:
                   <code>
                     A/D Line = Накопленная сумма(MFV)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация значений</b>:
             <list type="bullet">
               <item>
                 <description>
                   Рост линии A/D указывает на давление покупок (спрос превышает предложение).
                 </description>
               </item>
               <item>
                 <description>
                   Падение линии A/D сигнализирует о давлении продаж (предложение превышает спрос).
                 </description>
               </item>
               <item>
                 <description>
                   Дивергенции между линией A/D и ценой могут предвещать развороты тренда.
                 </description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AdLookback">
            <summary>
            Возвращает lookback-период для <see cref="M:TALib.Functions.Ad``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@)"/>.
            </summary>
            <returns>Всегда 0, так как для расчета не требуется исторических данных.</returns>
        </member>
        <member name="M:TALib.Functions.Ad``1(``0[],``0[],``0[],``0[],System.Range,``0[],System.Range@)">
            <remarks>
            Реализация для совместимости с абстрактным API
            </remarks>
        </member>
        <member name="M:TALib.Functions.AdOsc``1(System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.ReadOnlySpan{``0},System.Range,System.Span{``0},System.Range@,System.Int32,System.Int32)">
             <summary>
             Осциллятор Chaikin A/D (индикаторы объема)
             </summary>
             <param name="inHigh">Массив входных цен High (максимумы)</param>
             <param name="inLow">Массив входных цен Low (минимумы)</param>
             <param name="inClose">Массив входных цен Close (закрытия)</param>
             <param name="inVolume">Массив входных данных объема торгов</param>
             <param name="inRange">
             Диапазон обрабатываемых данных во входных массивах (начальный и конечный индексы).  
             - Если не указан, обрабатывается весь массив
             </param>
             <param name="outReal">Массив для сохранения рассчитанных значений осциллятора</param>
             <param name="outRange">
             Диапазон индексов с валидными данными в выходном массиве:  
             - Start: индекс первого валидного значения (>= lookback периода)  
             - End: индекс последнего обработанного элемента
             </param>
             <param name="optInFastPeriod">Период для расчета быстрой EMA (по умолчанию 3)</param>
             <param name="optInSlowPeriod">Период для расчета медленной EMA (по умолчанию 10)</param>
             <typeparam name="T">Числовой тип данных (float/double)</typeparam>
             <returns>Код результата выполнения (<see cref="T:TALib.Core.RetCode"/>)</returns>
             <remarks>
             Осциллятор Chaikin A/D измеряет импульс линии Накопления/Распределения, 
             сравнивая краткосрочные и долгосрочные интервалы денежного потока.
             <para>
             Позволяет выявлять изменения баланса покупок/продаж до их отражения в ценах.
             Может подтверждать тренды или предсказывать пробои уровней.
             </para>
            
             <b>Этапы расчета</b>:
             <list type="number">
               <item>
                 <description>
                   Расчет линии Накопления/Распределения (A/D Line):
                   <code>
                     A/D Line = ((Close - Low) - (High - Close)) / (High - Low) * Volume
                   </code>
                   Где:  
                   - Close, Low, High - цены закрытия, минимума и максимума  
                   - Volume - объем торгов
                 </description>
               </item>
               <item>
                 <description>
                   Расчет экспоненциальных скользящих средних (EMA) для A/D Line:
                   <code>
                     EMA(Fast) = α * A/D Line + (1 - α) * EMA(Fast-1)
                     EMA(Slow) = β * A/D Line + (1 - β) * EMA(Slow-1)
                   </code>
                   Где α = 2/(FastPeriod+1), β = 2/(SlowPeriod+1)
                 </description>
               </item>
               <item>
                 <description>
                   Осциллятор как разница EMA:
                   <code>
                     AdOsc = EMA(Fast) - EMA(Slow)
                   </code>
                 </description>
               </item>
             </list>
            
             <b>Интерпретация</b>:
             <list type="bullet">
               <item><description>Рост значений ⇒ доминирование покупателей</description></item>
               <item><description>Падение значений ⇒ давление продавцов</description></item>
               <item><description>Дивергенция с ценой ⇒ возможный разворот тренда</description></item>
             </list>
             </remarks>
        </member>
        <member name="M:TALib.Functions.AdOscLookback(System.Int32,System.Int32)">
            <summary>
            Возвращает период "просмотра назад" для осциллятора Chaikin A/D
            </summary>
            <param name="optInFastPeriod">Период быстрой EMA</param>
            <param name="optInSlowPeriod">Период медленной EMA</param>
            <returns>Минимальное количество баров для первого валидного значения</returns>
        </member>
        <member name="M:TALib.Functions.AdOsc``1(``0[],``0[],``0[],``0[],System.Range,``0[],System.Range@,System.Int32,System.Int32)">
            <summary>
            Вариант метода для массивов (совместимость с абстрактным API)
            </summary>
        </member>
    </members>
</doc>
